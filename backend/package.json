{
  "name": "@openharvest/backend",
  "version": "1.0.0",
  "description": "",
  "main": "main.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build-ts": "tsc --build",
    "build": "npm run build-ts && npm run lint",
    "debug": "npm run build && npm run watch-debug",
    "lint": "tsc --noEmit && eslint \"**/*.{js,ts}\" --quiet --fix",
    "serve-debug": "nodemon --inspect dist/server.js",
    "serve": "node dist/server.js",
    "start": "npm run serve",
    "watch-debug": "concurrently -k -p \"[{name}]\" -n \"TypeScript,Node\" -c \"yellow.bold,cyan.bold,green.bold\" \"npm run watch-ts\" \"npm run serve-debug\"",
    "watch-node": "nodemon dist/server.js",
    "watch-test": "npm run test -- --watchAll",
    "watch-ts": "tsc --build -w ",
    "watch": "npm run build-ts && concurrently -k -p \"[{name}]\" -n \"TypeScript,Node\" -c \"yellow.bold,cyan.bold,green.bold\" \"npm run watch-ts\" \"npm run watch-node\"",
    "mkcert": "mkcert localhost 127.0.0.1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@types/geojson": "^7946.0.8",
    "@types/uuid": "^8.3.4",
    "axios": "^0.26.0",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "dotenv": "^16.0.0",
    "express": "^4.17.2",
    "express-session": "^1.17.2",
    "geojson": "^0.5.0",
    "mongoose": "^6.2.1",
    "passport": "^0.5.2",
    "passport-ci-oidc": "^2.0.5",
    "socket.io": "^4.4.1",
    "twilio": "^3.75.1",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@types/cookie-parser": "^1.4.3",
    "@types/cors": "^2.8.12",
    "@types/express": "^4.17.13",
    "@types/express-session": "^1.17.4",
    "@types/passport": "^1.0.7",
    "concurrently": "^7.2.0",
    "nodemon": "^2.0.15",
    "ts-node": "^10.5.0",
    "typescript": "^4.5.5"
  },
  "eslintConfig": {
    "overrides": [
      {
        "files": [
          "**/*.ts?(x)"
        ],
        "extends": [
          "plugin:react/recommended"
        ],
        "plugins": [
          "eslint-plugin-prefer-arrow",
          "eslint-plugin-react",
          "@typescript-eslint"
        ],
        "rules": {
          "@typescript-eslint/adjacent-overload-signatures": "warn",
          "@typescript-eslint/array-type": [
            "warn",
            {
              "default": "array"
            }
          ],
          "@typescript-eslint/ban-types": [
            "warn",
            {
              "types": {
                "Object": {
                  "message": "Avoid using the `Object` type. Did you mean `object`?"
                },
                "Function": {
                  "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
                },
                "Boolean": {
                  "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
                },
                "Number": {
                  "message": "Avoid using the `Number` type. Did you mean `number`?"
                },
                "String": {
                  "message": "Avoid using the `String` type. Did you mean `string`?"
                },
                "Symbol": {
                  "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
                }
              }
            }
          ],
          "@typescript-eslint/consistent-type-assertions": "warn",
          "@typescript-eslint/dot-notation": "off",
          "@typescript-eslint/explicit-function-return-type": "warn",
          "@typescript-eslint/explicit-member-accessibility": [
            "off",
            {
              "accessibility": "explicit"
            }
          ],
          "@typescript-eslint/indent": "warn",
          "@typescript-eslint/member-delimiter-style": [
            "warn",
            {
              "multiline": {
                "delimiter": "semi",
                "requireLast": true
              },
              "singleline": {
                "delimiter": "semi",
                "requireLast": false
              }
            }
          ],
          "@typescript-eslint/member-ordering": "warn",
          "@typescript-eslint/naming-convention": "off",
          "@typescript-eslint/no-empty-function": "off",
          "@typescript-eslint/no-empty-interface": "warn",
          "@typescript-eslint/no-explicit-any": "off",
          "@typescript-eslint/no-inferrable-types": [
            "warn",
            {
              "ignoreParameters": true
            }
          ],
          "@typescript-eslint/no-misused-new": "warn",
          "@typescript-eslint/no-namespace": "warn",
          "@typescript-eslint/no-parameter-properties": "off",
          "@typescript-eslint/no-shadow": [
            "warn",
            {
              "hoist": "all"
            }
          ],
          "@typescript-eslint/no-unused-expressions": "warn",
          "@typescript-eslint/no-use-before-define": "off",
          "@typescript-eslint/no-var-requires": "warn",
          "@typescript-eslint/prefer-for-of": "warn",
          "@typescript-eslint/prefer-function-type": "warn",
          "@typescript-eslint/prefer-namespace-keyword": "warn",
          "@typescript-eslint/quotes": [
            "warn",
            "double"
          ],
          "@typescript-eslint/semi": [
            "warn",
            "always"
          ],
          "@typescript-eslint/triple-slash-reference": [
            "warn",
            {
              "path": "always",
              "types": "prefer-import",
              "lib": "always"
            }
          ],
          "@typescript-eslint/type-annotation-spacing": "warn",
          "@typescript-eslint/unified-signatures": "warn",
          "brace-style": [
            "warn",
            "1tbs"
          ],
          "complexity": "off",
          "constructor-super": "warn",
          "curly": "warn",
          "eol-last": "warn",
          "eqeqeq": [
            "warn",
            "smart"
          ],
          "guard-for-in": "warn",
          "id-blacklist": [
            "warn",
            "any",
            "Number",
            "number",
            "String",
            "string",
            "Boolean",
            "boolean",
            "Undefined",
            "undefined"
          ],
          "id-match": "warn",
          "indent": "off",
          "max-classes-per-file": [
            "warn",
            1
          ],
          "max-len": [
            "warn",
            {
              "code": 200
            }
          ],
          "new-parens": "warn",
          "no-bitwise": "warn",
          "no-caller": "warn",
          "no-cond-assign": "warn",
          "no-console": [
            "warn",
            {
              "allow": [
                "log",
                "warn",
                "dir",
                "timeLog",
                "assert",
                "clear",
                "count",
                "countReset",
                "group",
                "groupEnd",
                "table",
                "dirxml",
                "error",
                "groupCollapsed",
                "Console",
                "profile",
                "profileEnd",
                "timeStamp",
                "context"
              ]
            }
          ],
          "no-debugger": "warn",
          "no-empty": "off",
          "no-eval": "warn",
          "no-fallthrough": "warn",
          "no-invalid-this": "off",
          "no-new-wrappers": "warn",
          "no-redeclare": "warn",
          "no-restricted-imports": "warn",
          "no-throw-literal": "warn",
          "no-trailing-spaces": "warn",
          "no-undef-init": "warn",
          "no-underscore-dangle": "off",
          "no-unsafe-finally": "warn",
          "no-unused-labels": "warn",
          "no-var": "warn",
          "object-shorthand": "warn",
          "one-var": [
            "warn",
            "never"
          ],
          "prefer-arrow/prefer-arrow-functions": "warn",
          "prefer-const": "warn",
          "radix": "warn",
          "react/jsx-boolean-value": "warn",
          "react/jsx-key": "warn",
          "react/jsx-no-bind": "warn",
          "react/self-closing-comp": "warn",
          "spaced-comment": [
            "warn",
            "always",
            {
              "markers": [
                "/"
              ]
            }
          ],
          "use-isnan": "warn",
          "valid-typeof": "off",
          "react/display-name": "warn"
        }
      }
    ]
  }
}
