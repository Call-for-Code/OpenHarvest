{"version":3,"file":"button.directive.d.ts","sources":["button.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | button.directive.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { OnInit } from \"@angular/core\";\nimport { ButtonSize, ButtonType } from \"./button.types\";\n/**\n * A convenience directive for applying styling to a button.\n *\n * [See demo](../../?path=/story/button--basic)\n *\n * Example:\n *\n * ```html\n * <button ibmButton>A button</button>\n * <button ibmButton=\"secondary\">A secondary button</button>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/button/code) for more detail.\n *\n * <example-url>../../iframe.html?id=button--basic</example-url>\n */\nexport declare class Button implements OnInit {\n    /**\n     * sets the button type\n     */\n    ibmButton: ButtonType;\n    /**\n     * Specify the size of the button\n     */\n    size: ButtonSize;\n    /**\n     * If assistive text is used, this specifies the placement.\n     * Possible placements are `top`, `bottom`, `left`, `right`.\n     * If assistive text is not used, this can be left undefined.\n     */\n    assistiveTextPlacement: \"top\" | \"bottom\" | \"left\" | \"right\";\n    /**\n     * If assistive text is used, this specifies the alignment.\n     * Possible alignments are `center`, `start`, `end`.\n     * If assistive text is not used, this can be left undefined.\n     */\n    assistiveTextAlignment: \"center\" | \"start\" | \"end\";\n    readonly baseClass: boolean;\n    readonly primaryButton: boolean;\n    readonly secondaryButton: boolean;\n    readonly tertiaryButton: boolean;\n    readonly ghostButton: boolean;\n    readonly dangerButton: boolean;\n    skeleton: boolean;\n    readonly smallSize: boolean;\n    readonly fieldSize: boolean;\n    toolbarAction: boolean;\n    overflowMenu: boolean;\n    iconOnly: boolean;\n    /**\n     * `hasAssistiveText` input specifies whether the button contains assistive text or not.\n     * Assistive text can be utilized as follows:\n     * ```typescript\n     *\t<button\n     *\t\tibmButton=\"tertiary\"\n     *\t\t[iconOnly]=\"true\"\n     *\t\t[hasAssistiveText]=\"true\"\n     *\t\tassistiveTextPlacement=\"top\"\n     *\t\tassistiveTextAlignment=\"center\">\n     *\t\t<svg class=\"bx--btn__icon\" ibmIconCopy size=\"20\"></svg>\n     *\t\t<span class=\"bx--assistive-text\">Icon description</span>\n     *\t</button>\n     * ```\n     */\n    hasAssistiveText: boolean;\n    readonly isAssistiveTextCenterAligned: boolean;\n    readonly isAssistiveTextStartAligned: boolean;\n    readonly isAssistiveTextEndAligned: boolean;\n    readonly isAssistiveTextTopPositioned: boolean;\n    readonly isAssistiveTextBottomPositioned: boolean;\n    readonly isAssistiveTextLeftPositioned: boolean;\n    readonly isAssistiveTextRightPositioned: boolean;\n    ngOnInit(): void;\n}\n"]}