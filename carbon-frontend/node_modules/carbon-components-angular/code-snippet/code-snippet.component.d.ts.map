{"version":3,"file":"code-snippet.component.d.ts","sources":["code-snippet.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | code-snippet.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AfterViewInit } from \"@angular/core\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nexport declare enum SnippetType {\n    single = \"single\",\n    multi = \"multi\",\n    inline = \"inline\"\n}\n/**\n * [See demo](../../?path=/story/code-snippet--basic)\n *\n * ```html\n * <ibm-code-snippet>Code</ibm-code-snippet>\n * ```\n *\n * <example-url>../../iframe.html?id=code-snippet--basic</example-url>\n */\nexport declare class CodeSnippet implements AfterViewInit {\n    protected i18n: I18n;\n    /**\n     * Variable used for creating unique ids for code-snippet components.\n     */\n    static codeSnippetCount: number;\n    /**\n     * It can be `\"single\"`, `\"multi\"` or `\"inline\"`\n     *\n     */\n    display: SnippetType;\n    translations: any;\n    /**\n     * Set to `\"light\"` to apply the light style on the code snippet.\n     */\n    theme: \"light\" | \"dark\";\n    /**\n     * Text displayed in the tooltip when user clicks button to copy code.\n     *\n     */\n    feedbackText: any;\n    /**\n     * Time in miliseconds to keep the feedback tooltip displayed.\n     *\n     */\n    feedbackTimeout: number;\n    expanded: boolean;\n    skeleton: boolean;\n    snippetClass: boolean;\n    readonly snippetSingleClass: boolean;\n    readonly snippetMultiClass: boolean;\n    readonly snippetInlineClass: boolean;\n    readonly snippetInlineLightClass: boolean;\n    readonly btnCopyClass: boolean;\n    readonly displayStyle: string;\n    readonly attrType: string;\n    code: any;\n    readonly shouldShowExpandButton: any;\n    showFeedback: boolean;\n    hasExpandButton: any;\n    /**\n     * Creates an instance of CodeSnippet.\n     */\n    constructor(i18n: I18n);\n    toggleSnippetExpansion(): void;\n    /**\n     * Copies the code from the `<code>` block to clipboard.\n     *\n     */\n    copyCode(): void;\n    onCopyButtonClicked(): void;\n    ngAfterViewInit(): void;\n    /**\n     * Inline code snippet acts as button and makes the whole component clickable.\n     *\n     * This handles clicks in that case.\n     */\n    hostClick(): void;\n    protected canExpand(): boolean;\n}\n"]}