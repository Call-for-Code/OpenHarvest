{"version":3,"file":"datepicker.component.d.ts","sources":["datepicker.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n *\n * carbon-angular v0.0.0 | datepicker.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { EventEmitter, ElementRef, OnDestroy, TemplateRef, OnChanges, SimpleChanges, AfterViewChecked, AfterViewInit, AfterContentInit, OnInit, SimpleChange } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { DatePickerInput } from \"carbon-components-angular/datepicker-input\";\nimport { ElementService } from \"carbon-components-angular/utils\";\nimport { I18n } from \"carbon-components-angular/i18n\";\n/**\n * [See demo](../../?path=/story/date-picker--single)\n *\n * <example-url>../../iframe.html?id=date-picker--single</example-url>\n */\nexport declare class DatePicker implements OnInit, OnDestroy, OnChanges, AfterViewChecked, AfterViewInit, AfterContentInit {\n    protected elementRef: ElementRef;\n    protected elementService: ElementService;\n    protected i18n: I18n;\n    private static datePickerCount;\n    /**\n     * Select calendar range mode\n     */\n    range: boolean;\n    /**\n     * Format of date\n     *\n     * For reference: https://flatpickr.js.org/formatting/\n     */\n    dateFormat: string;\n    /**\n     * Language of the flatpickr calendar.\n     *\n     * For reference of the possible locales:\n     * https://github.com/flatpickr/flatpickr/blob/master/src/l10n/index.ts\n     */\n    language: string;\n    label: string | TemplateRef<any>;\n    rangeLabel: string;\n    placeholder: string;\n    /**\n     * The pattern for the underlying input element\n     * @deprecated as of v4 - switch to inputPattern\n     */\n    pattern: string;\n    /**\n     * The pattern for the underlying input element\n     */\n    inputPattern: string;\n    id: string;\n    value: (Date | string)[];\n    theme: \"light\" | \"dark\";\n    disabled: boolean;\n    invalid: boolean;\n    invalidText: string | TemplateRef<any>;\n    size: \"sm\" | \"md\" | \"xl\";\n    rangeInvalid: boolean;\n    rangeInvalidText: string | TemplateRef<any>;\n    skeleton: boolean;\n    plugins: any[];\n    flatpickrOptions: any;\n    input: DatePickerInput;\n    rangeInput: DatePickerInput;\n    valueChange: EventEmitter<any>;\n    protected _value: any[];\n    protected _flatpickrOptions: {\n        allowInput: boolean;\n    };\n    protected flatpickrBaseOptions: {\n        mode: string;\n        dateFormat: string;\n        plugins: any[];\n        onOpen: () => void;\n        onClose: () => void;\n        onDayCreate: (_dObj: any, _dStr: any, _fp: any, dayElem: any) => void;\n        nextArrow: string;\n        prevArrow: string;\n        value: (string | Date)[];\n    };\n    protected flatpickrInstance: any;\n    protected visibilitySubscription: Subscription;\n    constructor(elementRef: ElementRef, elementService: ElementService, i18n: I18n);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngAfterViewInit(): void;\n    ngAfterViewChecked(): void;\n    ngAfterContentInit(): void;\n    onFocus(): void;\n    /**\n     * Writes a value from the model to the component. Expects the value to be `null` or `(Date | string)[]`\n     * @param value value received from the model\n     */\n    writeValue(value: (Date | string)[]): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    onTouched: () => any;\n    propagateChange: (_: any) => void;\n    /**\n     * Cleans up our flatpickr instance\n     */\n    ngOnDestroy(): void;\n    /**\n     * Handles the `valueChange` event from the primary/single input\n     */\n    onValueChange(event: string): void;\n    /**\n     * Handles the `valueChange` event from the range input\n     */\n    onRangeValueChange(event: string): void;\n    /**\n     * Handles opening the calendar \"properly\" when the calendar icon is clicked.\n     */\n    openCalendar(datepickerInput: DatePickerInput): void;\n    protected updateCalendarListeners(): void;\n    /**\n     * Resets the flatpickr instance while keeping the date values (or updating them if newDates is provided)\n     *\n     * Used to pick up input changes or locale changes.\n     *\n     * @param newDates An optional SimpleChange of date values\n     */\n    protected resetFlackpickrInstance(newDates?: SimpleChange): void;\n    /**\n     * Carbon uses a number of specific classnames for parts of the flatpickr - this idempotent method applies them if needed.\n     */\n    protected updateClassNames(): void;\n    /**\n     * Applies the given date value array to both the flatpickr instance and the `input`(s)\n     * @param dates the date values to apply\n     */\n    protected setDateValues(dates: (Date | string)[]): void;\n    protected preventCalendarClose: (event: any) => any;\n    protected doSelect(selectedValue: (Date | string)[]): void;\n    protected didDateValueChange(currentValue: any, previousValue: any): boolean;\n    /**\n     * More advanced checking of the loaded state of flatpickr\n     */\n    protected isFlatpickrLoaded(): boolean;\n    /**\n     * Right arrow HTML passed to flatpickr\n     */\n    protected rightArrowHTML(): string;\n    /**\n     * Left arrow HTML passed to flatpickr\n     */\n    protected leftArrowHTML(): string;\n}\n"]}