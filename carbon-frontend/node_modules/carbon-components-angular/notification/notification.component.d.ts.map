{"version":3,"file":"notification.component.d.ts","sources":["notification.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | notification.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { EventEmitter, ComponentRef } from \"@angular/core\";\nimport { NotificationContent } from \"./notification-content.interface\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { NotificationDisplayService } from \"./notification-display.service\";\n/**\n * Notification messages are displayed toward the top of the UI and do not interrupt userâ€™s work.\n *\n * [See demo](../../?path=/story/notification--basic)\n *\n * <example-url>../../iframe.html?id=notification--basic</example-url>\n */\nexport declare class Notification {\n    protected notificationDisplayService: NotificationDisplayService;\n    protected i18n: I18n;\n    private static notificationCount;\n    /**\n     * Can have `type`, `title`, and `message` members.\n     *\n     * `type` can be one of `\"info\"`, `\"warning\"`, `\"error\"`, `\"success\"`\n     *\n     * `message` is the message to display\n     */\n    notificationObj: NotificationContent;\n    /**\n     * Emits on close.\n     */\n    close: EventEmitter<any>;\n    componentRef: ComponentRef<Notification>;\n    notification: any;\n    notificationID: string;\n    notificationClass: boolean;\n    role: string;\n    readonly isError: boolean;\n    readonly isInfo: boolean;\n    readonly isSuccess: boolean;\n    readonly isWarning: boolean;\n    readonly isLowContrast: boolean;\n    readonly isCloseHidden: boolean;\n    protected defaultNotificationObj: {\n        title: string;\n        message: string;\n        type: string;\n        showClose: boolean;\n        closeLabel: any;\n    };\n    protected _notificationObj: NotificationContent;\n    constructor(notificationDisplayService: NotificationDisplayService, i18n: I18n);\n    /**\n     * Emits close event.\n     */\n    onClose(): void;\n    onClick(action: any, event: any): void;\n    destroy(): void;\n}\n"]}