{"version":3,"file":"structured-list.component.d.ts","sources":["structured-list.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n *\n * carbon-angular v0.0.0 | structured-list.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { QueryList, AfterContentInit, EventEmitter } from \"@angular/core\";\nimport { ListRow } from \"./list-row.component\";\nimport { ListHeader } from \"./list-header.component\";\nimport { ControlValueAccessor } from \"@angular/forms\";\n/**\n * Structured Lists represent related tabular data. For larger datasets consider a full `Table`.\n *\n * [See demo](../../?path=/story/structured-list--basic)\n *\n * See [structured-list/usage](https://www.carbondesignsystem.com/components/structured-list/usage) for usage guidance.\n *\n * A basic structued list looks something like:\n * ```html\n *\t<ibm-structured-list>\n *\t\t<ibm-list-header>\n *\t\t\t<ibm-list-column nowrap=\"true\">Column 1</ibm-list-column>\n *\t\t\t<ibm-list-column nowrap=\"true\">Column 2</ibm-list-column>\n *\t\t\t<ibm-list-column>Column 3</ibm-list-column>\n *\t\t</ibm-list-header>\n *\t\t<ibm-list-row>\n *\t\t\t<ibm-list-column>Row 1</ibm-list-column>\n *\t\t\t<ibm-list-column nowrap=\"true\">Row One</ibm-list-column>\n *\t\t\t<ibm-list-column>\n *\t\t\t\tLorem ipsum dolor sit amet,\n *\t\t\t\tconsectetur adipiscing elit. Nunc dui magna,\n *\t\t\t\tfinibus id tortor sed, aliquet bibendum augue.\n *\t\t\t\tAenean posuere sem vel euismod dignissim. Nulla ut cursus dolor.\n *\t\t\t\tPellentesque vulputate nisl a porttitor interdum.\n *\t\t\t</ibm-list-column>\n *\t\t</ibm-list-row>\n *\t\t<ibm-list-row>\n *\t\t\t<ibm-list-column>Row 2</ibm-list-column>\n *\t\t\t<ibm-list-column nowrap=\"true\">Row Two</ibm-list-column>\n *\t\t\t<ibm-list-column>\n *\t\t\t\tLorem ipsum dolor sit amet,\n *\t\t\t\tconsectetur adipiscing elit. Nunc dui magna,\n *\t\t\t\tfinibus id tortor sed, aliquet bibendum augue.\n *\t\t\t\tAenean posuere sem vel euismod dignissim. Nulla ut cursus dolor.\n *\t\t\t\tPellentesque vulputate nisl a porttitor interdum.\n *\t\t\t</ibm-list-column>\n *\t\t</ibm-list-row>\n *\t</ibm-structured-list>\n * ```\n *\n * <example-url>../../iframe.html?id=structured-list--basic</example-url>\n */\nexport declare class StructuredList implements AfterContentInit, ControlValueAccessor {\n    /**\n     * A counter to provide unique default values.\n     */\n    static listCount: number;\n    /**\n     * Set to `true` to enable radio like selection of the rows.\n     */\n    selection: boolean;\n    /**\n     * Set to `true` to apply a border and white background.\n     */\n    border: boolean;\n    /**\n     * Set to `true` to apply a condensed style to the headers and rows.\n     */\n    condensed: boolean;\n    /**\n     * Set to `true` to apply `white-space: nowrap` on _all_ conent.\n     */\n    nowrap: boolean;\n    /**\n     * Used when `selection = true` as the row radio group `name`\n     */\n    name: string;\n    /**\n     * Sets the skeleton value for all `ListHeader` to the skeleton value of `StructuredList`.\n     */\n    /**\n    * Returns the skeleton value in the `StructuredList` if there is one.\n    */\n    skeleton: any;\n    /**\n     * Emits an event when the row selection changes.\n     *\n     * Emits an object that looks like:\n     * ```javascript\n     * {\n     * \tvalue: \"something\",\n     * \tselected: true,\n     * \tname: \"structured-list-1\"\n     * }\n     * ```\n     */\n    selected: EventEmitter<{\n        value: string;\n        selected: boolean;\n        name: string;\n    }>;\n    rows: QueryList<ListRow>;\n    headers: QueryList<ListHeader>;\n    protected _skeleton: boolean;\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    ngAfterContentInit(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    protected updateChildren(): void;\n}\n"]}