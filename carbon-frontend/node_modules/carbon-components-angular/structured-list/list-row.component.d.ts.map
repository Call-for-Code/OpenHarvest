{"version":3,"file":"list-row.component.d.ts","sources":["list-row.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | list-row.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { QueryList, AfterContentInit, ElementRef, EventEmitter } from \"@angular/core\";\nimport { ListColumn } from \"./list-column.component\";\n/**\n * `ListRow` provides a container for the `ListColumn`s that make up the body of a structured list.\n *\n * Example:\n * ```html\n * \t<ibm-list-row>\n *\t\t<ibm-list-column>Row 1</ibm-list-column>\n *\t\t<ibm-list-column nowrap=\"true\">Row One</ibm-list-column>\n *\t\t<ibm-list-column>\n *\t\t\tLorem ipsum dolor sit amet,\n *\t\t\tconsectetur adipiscing elit. Nunc dui magna,\n *\t\t\tfinibus id tortor sed, aliquet bibendum augue.\n *\t\t\tAenean posuere sem vel euismod dignissim. Nulla ut cursus dolor.\n *\t\t\tPellentesque vulputate nisl a porttitor interdum.\n *\t\t</ibm-list-column>\n *\t</ibm-list-row>\n * ```\n */\nexport declare class ListRow implements AfterContentInit {\n    selected: boolean;\n    /**\n     * Applies an accessible label to the row. Defaults to no label.\n     */\n    label: any;\n    /**\n     * The value for the row. Returned via `ngModel` or `selected` event on the containing `StructuredList`.\n     */\n    value: any;\n    /**\n     * Internal event used to notify the containing `StructuredList` of changes.\n     */\n    change: EventEmitter<Event>;\n    /**\n     * Set by the containing `StructuredList`. Enables or disables row level selection features.\n     */\n    selection: boolean;\n    /**\n     * Set by the containing `StructuredList`. When `selection = true`, used for the `name` property on the radio input.\n     */\n    name: string;\n    wrapper: boolean;\n    tabindex: string;\n    columns: QueryList<ListColumn>;\n    input: ElementRef;\n    ngAfterContentInit(): void;\n    onclick(): void;\n    onChange(event: any): void;\n}\n"]}