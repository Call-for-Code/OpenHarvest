/**
 *
 * carbon-angular v0.0.0 | table-head-cell.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter, OnChanges } from "@angular/core";
import { Observable, OperatorFunction } from "rxjs";
import { I18n, Overridable } from "carbon-components-angular/i18n";
import { TableHeaderItem } from "../table-header-item.class";
import * as ɵngcc0 from '@angular/core';
export declare class TableHeadCell implements OnChanges {
    protected i18n: I18n;
    column: TableHeaderItem;
    skeleton: boolean;
    sortable: boolean;
    sortDescendingLabel: string | Observable<string>;
    sortAscendingLabel: string | Observable<string>;
    filterTitle: string | Observable<string>;
    /**
     * Notifies that the column should be sorted
     */
    sort: EventEmitter<{}>;
    theadAction: boolean;
    protected _sortDescendingLabel: Overridable;
    protected _sortAscendingLabel: Overridable;
    protected _filterTitle: Overridable;
    constructor(i18n: I18n);
    ngOnChanges(): void;
    getSortDescendingLabel(): Observable<string>;
    getSortAscendingLabel(): Observable<string>;
    getFilterTitle(): Observable<string>;
    onClick(): void;
    protected sortLabelMap(): OperatorFunction<string, string>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableHeadCell, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TableHeadCell, "[ibmTableHeadCell]", never, { "skeleton": "skeleton"; "sortable": "sortable"; "sortDescendingLabel": "sortDescendingLabel"; "sortAscendingLabel": "sortAscendingLabel"; "filterTitle": "filterTitle"; "column": "column"; }, { "sort": "sort"; }, never, never>;
}

//# sourceMappingURL=table-head-cell.component.d.ts.map