{"version":3,"file":"table-head.component.d.ts","sources":["table-head.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | table-head.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { EventEmitter, AfterViewInit } from \"@angular/core\";\nimport { TableModel } from \"../table-model.class\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { Observable } from \"rxjs\";\nimport { TableRowSize } from \"../table.types\";\n/**\n * A subcomponent that creates the thead of the table\n *\n * ## Basic usage\n *\n * ```html\n * \t<thead ibmTableHead [model]=\"model\"></thead>\n * ```\n */\nexport declare class TableHead implements AfterViewInit {\n    protected i18n: I18n;\n    model: TableModel;\n    showSelectionColumn: boolean;\n    enableSingleSelect: boolean;\n    selectAllCheckboxSomeSelected: boolean;\n    selectAllCheckbox: boolean;\n    skeleton: boolean;\n    stickyHeader: boolean;\n    /**\n     * Setting sortable to false will disable all headers including headers which are sortable. Is is\n     * possible to set the sortable state on the header item to disable/enable sorting for only some headers.\n     */\n    sortable: boolean;\n    /**\n     * Size of the table rows.\n     */\n    size: TableRowSize;\n    checkboxHeaderLabel: string | Observable<string>;\n    sortDescendingLabel: string | Observable<string>;\n    sortAscendingLabel: string | Observable<string>;\n    filterTitle: string | Observable<string>;\n    /**\n     * Emits an index of the column that wants to be sorted.\n     */\n    sort: EventEmitter<number>;\n    /**\n     * Emits if all rows are selected.\n     *\n     * @param model\n     */\n    selectAll: EventEmitter<TableModel>;\n    /**\n     * Emits if all rows are deselected.\n     *\n     * @param model\n     */\n    deselectAll: EventEmitter<TableModel>;\n    scrollbarWidth: number;\n    protected _checkboxHeaderLabel: Overridable;\n    protected _sortDescendingLabel: Overridable;\n    protected _sortAscendingLabel: Overridable;\n    protected _filterTitle: Overridable;\n    constructor(i18n: I18n);\n    ngAfterViewInit(): void;\n    onSelectAllCheckboxChange(): void;\n    getCheckboxHeaderLabel(): Observable<string>;\n    getSortDescendingLabel(): Observable<string>;\n    getSortAscendingLabel(): Observable<string>;\n    getFilterTitle(): Observable<string>;\n}\n"]}