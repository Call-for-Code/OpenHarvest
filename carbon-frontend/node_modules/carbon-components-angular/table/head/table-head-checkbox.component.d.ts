/**
 *
 * carbon-angular v0.0.0 | table-head-checkbox.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { I18n, Overridable } from "carbon-components-angular/i18n";
import { Observable } from "rxjs";
import { TableRowSize } from "../table.types";
import * as ɵngcc0 from '@angular/core';
export declare class TableHeadCheckbox {
    protected i18n: I18n;
    private static tableSelectAllCount;
    /**
     * Size of the table rows.
     */
    size: TableRowSize;
    checked: boolean;
    indeterminate: boolean;
    skeleton: boolean;
    name: string;
    ariaLabel: string | Observable<string>;
    change: EventEmitter<void>;
    hostClass: boolean;
    protected _ariaLabel: Overridable;
    constructor(i18n: I18n);
    getAriaLabel(): Observable<string>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableHeadCheckbox, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TableHeadCheckbox, "[ibmTableHeadCheckbox]", never, { "size": "size"; "checked": "checked"; "indeterminate": "indeterminate"; "skeleton": "skeleton"; "name": "name"; "ariaLabel": "ariaLabel"; }, { "change": "change"; }, never, never>;
}

//# sourceMappingURL=table-head-checkbox.component.d.ts.map