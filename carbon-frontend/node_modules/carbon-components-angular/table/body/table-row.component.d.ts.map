{"version":3,"file":"table-row.component.d.ts","sources":["table-row.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n *\n * carbon-angular v0.0.0 | table-row.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { EventEmitter } from \"@angular/core\";\nimport { TableModel } from \"../table-model.class\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { TableItem } from \"../table-item.class\";\nimport { Observable } from \"rxjs\";\nimport { TableRowSize } from \"../table.types\";\nexport declare class TableRowComponent {\n    protected i18n: I18n;\n    /**\n     * `TableModel` with data the table is to display.\n     */\n    model: TableModel;\n    row: TableItem[];\n    expanded: boolean;\n    expandable: boolean;\n    selected: boolean;\n    /**\n     * Size of the table rows.\n     */\n    size: TableRowSize;\n    /**\n     * Controls whether to enable multiple or single row selection.\n     */\n    enableSingleSelect: boolean;\n    expandButtonAriaLabel: string | Observable<string>;\n    checkboxLabel: string | Observable<string>;\n    /**\n     * Controls whether to show the selection checkboxes column or not.\n     */\n    showSelectionColumn: boolean;\n    /**\n     * Shows or hide the checkbox in the selection column when `showSelectionColumn`\n     * is set to true\n     */\n    showSelectionColumnCheckbox: boolean;\n    /**\n     * Used to populate the row selection checkbox label with a useful value if set.\n     *\n     * Example:\n     * ```\n     * <ibm-table [selectionLabelColumn]=\"0\"></ibm-table>\n     * <!-- results in aria-label=\"Select first column value\"\n     * (where \"first column value\" is the value of the first column in the row -->\n     * ```\n     */\n    selectionLabelColumn: number;\n    skeleton: boolean;\n    /**\n     * Emits when the row is selected.\n     */\n    selectRow: EventEmitter<{}>;\n    /**\n     * Emits when the row is deselected.\n     */\n    deselectRow: EventEmitter<{}>;\n    /**\n     * Emits when the row is expanded\n     */\n    expandRow: EventEmitter<{}>;\n    /**\n     * Emits when a row is clicked regardless of `enableSingleSelect` or `showSelectionColumn`.\n     * Should only get emitted when a row item is selected excluding expand buttons,\n     * checkboxes, or radios.\n     */\n    rowClick: EventEmitter<{}>;\n    readonly selectedClass: boolean;\n    readonly parentRowClass: boolean;\n    readonly expandableRowClass: boolean;\n    readonly selectableClass: boolean;\n    readonly isParentRow: boolean;\n    readonly isAccessible: number;\n    protected _checkboxLabel: Overridable;\n    protected _expandButtonAriaLabel: Overridable;\n    constructor(i18n: I18n);\n    onHostClick(): void;\n    onRowClick(): void;\n    onSelectionChange(): void;\n    getCheckboxLabel(): Observable<string>;\n    getExpandButtonAriaLabel(): Observable<string>;\n}\n"]}