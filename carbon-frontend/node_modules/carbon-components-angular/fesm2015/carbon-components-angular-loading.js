/**
 *
 * carbon-angular v0.0.0 | carbon-components-angular-loading.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, HostBinding, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { I18n, I18nModule } from 'carbon-components-angular/i18n';

/**
 * [See demo](../../?path=/story/loading--basic)
 *
 * <example-url>../../iframe.html?id=loading--basic</example-url>
 */
class Loading {
    constructor(i18n) {
        this.i18n = i18n;
        /**
         * Accessible title for the loading circle.
         * Defaults to the `LOADING.TITLE` value from the i18n service.
         */
        this.title = this.i18n.get().LOADING.TITLE;
        /**
         * set to `false` to stop the loading animation
         */
        this.isActive = true;
        /**
         * Specify the size of the button
         */
        this.size = "normal";
        /**
         * Set to `true` to make loader with an overlay.
         */
        this.overlay = false;
    }
}
Loading.decorators = [
    { type: Component, args: [{
                selector: "ibm-loading",
                template: `
		<div
			[ngClass]="{
				'bx--loading--small': size === 'sm',
				'bx--loading--stop': !isActive && !overlay,
				'bx--loading-overlay--stop': !isActive && overlay
			}"
			class="bx--loading">
			<svg class="bx--loading__svg" viewBox="-75 -75 150 150">
				<title>{{title}}</title>
				<circle class="bx--loading__stroke" cx="0" cy="0" r="37.5" />
			</svg>
		</div>
	`
            }] }
];
/** @nocollapse */
Loading.ctorParameters = () => [
    { type: I18n }
];
Loading.propDecorators = {
    title: [{ type: Input }],
    isActive: [{ type: Input }],
    size: [{ type: Input }],
    overlay: [{ type: Input }, { type: HostBinding, args: ["class.bx--loading-overlay",] }]
};

class LoadingModule {
}
LoadingModule.decorators = [
    { type: NgModule, args: [{
                declarations: [Loading],
                exports: [Loading],
                imports: [CommonModule, I18nModule]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { Loading, LoadingModule };

//# sourceMappingURL=carbon-components-angular-loading.js.map