/**
 *
 * carbon-angular v0.0.0 | carbon-components-angular-timepicker-select.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { Component, Input, HostBinding, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { Select, SelectModule } from 'carbon-components-angular/select';
import { IconModule } from 'carbon-components-angular/icon';

/**
 * [See demo](../../?path=/story/time-picker-select--simple)
 *
 * <example-url>../../iframe.html?id=time-picker-select--simple</example-url>
 */
class TimePickerSelect extends Select {
    constructor() {
        super(...arguments);
        this.timeSelect = true;
        this.timePickerSelect = true;
        this.id = `timepicker-select-${TimePickerSelect.selectCount++}`;
        /**
         * Set to true for a loading select.
         */
        this.skeleton = false;
        /**
         * `light` or `dark` select theme
         */
        this.theme = "dark";
        this.timePickerSelectSkeleton = this.skeleton;
    }
    get timePickerSelectLight() {
        return this.theme === "light";
    }
}
TimePickerSelect.decorators = [
    { type: Component, args: [{
                selector: "ibm-timepicker-select",
                template: `
		<label *ngIf="!skeleton && label" [attr.for]="id" class="bx--label bx--visually-hidden">{{label}}</label>
		<div class="bx--select-input__wrapper">
			<select
				#select
				[attr.id]="id"
				[disabled]="disabled"
				(change)="onChange($event)"
				class="bx--select-input">
				<ng-content></ng-content>
			</select>
			<svg ibmIcon="chevron--down" size="16" *ngIf="!skeleton" class="bx--select__arrow"></svg>
		</div>
	`,
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: TimePickerSelect,
                        multi: true
                    }
                ]
            }] }
];
TimePickerSelect.propDecorators = {
    timeSelect: [{ type: HostBinding, args: ["class.bx--select",] }],
    timePickerSelect: [{ type: HostBinding, args: ["class.bx--time-picker__select",] }],
    id: [{ type: Input }],
    skeleton: [{ type: Input }],
    theme: [{ type: Input }],
    label: [{ type: Input }],
    timePickerSelectSkeleton: [{ type: HostBinding, args: ["class.bx--skeleton",] }],
    timePickerSelectLight: [{ type: HostBinding, args: ["class.bx--select--light",] }]
};

class TimePickerSelectModule {
}
TimePickerSelectModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    TimePickerSelect
                ],
                exports: [
                    TimePickerSelect
                ],
                imports: [
                    SelectModule,
                    CommonModule,
                    IconModule
                ]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { TimePickerSelect, TimePickerSelectModule };

//# sourceMappingURL=carbon-components-angular-timepicker-select.js.map