{"version":3,"file":"carbon-components-angular-i18n.js.map","sources":["ng://carbon-components-angular/i18n/en.ts","ng://carbon-components-angular/i18n/i18n.service.ts","ng://carbon-components-angular/i18n/replace.pipe.ts","ng://carbon-components-angular/i18n/i18n.module.ts","ng://carbon-components-angular/i18n/carbon-components-angular-i18n.ts"],"sourcesContent":["export default {\n\t\"BANNER\": {\n\t\t\"CLOSE_BUTTON\": \"Close alert banner\"\n\t},\n\t\"CALENDAR\": {\n\t\t\"MONTHS\": {\n\t\t\t\"JANUARY\": \"January\",\n\t\t\t\"FEBRUARY\": \"February\",\n\t\t\t\"MARCH\": \"March\",\n\t\t\t\"APRIL\": \"April\",\n\t\t\t\"MAY\": \"May\",\n\t\t\t\"JUNE\": \"June\",\n\t\t\t\"JULY\": \"July\",\n\t\t\t\"AUGUST\": \"August\",\n\t\t\t\"SEPTEMBER\": \"September\",\n\t\t\t\"OCTOBER\": \"October\",\n\t\t\t\"NOVEMBER\": \"November\",\n\t\t\t\"DECEMBER\": \"December\"\n\t\t},\n\t\t\"SHORTWEEKDAYS\": {\n\t\t\t\"SUNDAY\": \"Sun\",\n\t\t\t\"MONDAY\": \"Mon\",\n\t\t\t\"TUESDAY\": \"Tue\",\n\t\t\t\"WEDNESDAY\": \"Wed\",\n\t\t\t\"THURSDAY\": \"Thu\",\n\t\t\t\"FRIDAY\": \"Fri\",\n\t\t\t\"SATURDAY\": \"Sat\"\n\t\t},\n\t\t\"QUARTERS\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"name\": \"Q1\",\n\t\t\t\t\"months\": \"January-March\"\n\t\t\t}\n\t\t\t,\n\t\t\t{\n\t\t\t\t\"name\": \"Q2\",\n\t\t\t\t\"months\": \"April-June\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"Q3\",\n\t\t\t\t\"months\": \"July-September\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"Q4\",\n\t\t\t\t\"months\": \"October-December\"\n\t\t\t}\n\t\t]\n\t},\n\t\"CODE_SNIPPET\": {\n\t\t\"CODE_SNIPPET_TEXT\": \"Code Snippet Text\",\n\t\t\"SHOW_MORE\": \"Show more\",\n\t\t\"SHOW_LESS\": \"Show less\",\n\t\t\"SHOW_MORE_ICON\": \"Show more icon\",\n\t\t\"COPY_CODE\": \"Copy code\",\n\t\t\"COPIED\": \"Copied!\"\n\t},\n\t\"COMBOBOX\": {\n\t\t\"PLACEHOLDER\": \"Filter...\",\n\t\t\"CLEAR_SELECTIONS\": \"Clear all selected items\",\n\t\t\"CLEAR_SELECTED\": \"Clear selected item\",\n\t\t\"A11Y\": {\n\t\t\t\"OPEN_MENU\": \"open menu\",\n\t\t\t\"CLOSE_MENU\": \"close menu\",\n\t\t\t\"CLEAR_SELECTIONS\": \"Clear all selected items\",\n\t\t\t\"CLEAR_SELECTED\": \"Clear Selection\"\n\t\t}\n\t},\n\t\"DIALOG\": {\n\t\t\"POPOVER\" : {\n\t\t\t\"CLOSE\": \"Close popover\"\n\t\t}\n\t},\n\t\"DROPDOWN\": {\n\t\t\"OPEN\": \"Open menu\",\n\t\t\"SELECTED\": \"selected\",\n\t\t\"CLEAR\": \"Clear all selected items\",\n\t\t\"FILTER\": {\n\t\t\t\"SELECTED_ONLY\": \"Show selected only\",\n\t\t\t\"SEARCH\": \"Search\",\n\t\t\t\"NO_RESULTS\": \"No search results\",\n\t\t\t\"RESET_SEARCH\": \"Reset search\"\n\t\t}\n\t},\n\t\"DROPDOWN_LIST\": {\n\t\t\"LABEL\": \"Listbox\"\n\t},\n\t\"FILE_UPLOADER\": {\n\t\t\"CHECKMARK\": \"Checkmark\",\n\t\t\"CHECKMARK_TITLE\": \"File uploaded!\",\n\t\t\"OPEN\": \"Add file\",\n\t\t\"REMOVE_BUTTON\": \"Close button\",\n\t\t\"REMOVE_TITLE\": \"Delete File\"\n\t},\n\t\"LOADING\": {\n\t\t\"TITLE\": \"Loading\"\n\t},\n\t\"MODAL\": {\n\t\t\"CLOSE\": \"Close modal\"\n\t},\n\t\"NOTIFICATION\": {\n\t\t\"CLOSE_BUTTON\": \"Close alert notification\"\n\t},\n\t\"NUMBER\": {\n\t\t\"INCREMENT\": \"increment value\",\n\t\t\"DECREMENT\": \"decrement value\"\n\t},\n\t\"OVERFLOW_MENU\": {\n\t\t\"OVERFLOW\": \"Overflow\"\n\t},\n\t\"SEARCH\": {\n\t\t\"LABEL\": \"Search\",\n\t\t\"PLACEHOLDER\": \"Search\",\n\t\t\"CLEAR_BUTTON\": \"Clear search input\",\n\t\t\"TOOLBAR_SEARCH\": \"Toolbar search\"\n\t},\n\t\"PAGINATION\": {\n\t\t\"ITEMS_PER_PAGE\": \"Items per page:\",\n\t\t\"OPEN_LIST_OF_OPTIONS\": \"Open list of options\",\n\t\t\"BACKWARD\": \"Backward\",\n\t\t\"FORWARD\": \"Forward\",\n\t\t\"TOTAL_ITEMS_UNKNOWN\": \"{{start}}-{{end}} items\",\n\t\t\"TOTAL_ITEMS\": \"{{start}}-{{end}} of {{total}} items\",\n\t\t\"TOTAL_ITEM\": \"{{start}}-{{end}} of {{total}} item\",\n\t\t\"PAGE\": \"page\",\n\t\t\"OF_LAST_PAGES\": \"of {{last}} pages\",\n\t\t\"OF_LAST_PAGE\": \"of {{last}} page\",\n\t\t\"NEXT\": \"Next\",\n\t\t\"PREVIOUS\": \"Previous\"\n\t},\n\t\"TABLE\": {\n\t\t\"GO_TO_PAGE\": \"Go to page\",\n\t\t\"PREVIOUS_PAGE\": \"Previous page\",\n\t\t\"NEXT_PAGE\": \"Next page\",\n\t\t\"PREVIOUS_3\": \"Scroll to previous 3 pages\",\n\t\t\"NEXT_3\": \"Scroll to next 3 pages\",\n\t\t\"FILTER\": \"Filter\",\n\t\t\"END_OF_DATA\": \"You've reached the end of your content\",\n\t\t\"SCROLL_TOP\": \"Scroll to top\",\n\t\t\"CHECKBOX_HEADER\": \"Select all rows\",\n\t\t\"CHECKBOX_ROW\": \"Select {{value}}\",\n\t\t\"EXPAND_BUTTON\": \"Expand row\",\n\t\t\"SORT_DESCENDING\": \"Sort rows by this header in descending order\",\n\t\t\"SORT_ASCENDING\": \"Sort rows by this header in ascending order\",\n\t\t\"ROW\": \"row\"\n\t},\n\t\"TABLE_TOOLBAR\": {\n\t\t\"ACTION_BAR\": \"Table action bar\",\n\t\t\"BATCH_TEXT\": \"\",\n\t\t\"BATCH_TEXT_SINGLE\": \"1 item selected\",\n\t\t\"BATCH_TEXT_MULTIPLE\": \"{{count}} items selected\",\n\t\t\"CANCEL\": \"Cancel\"\n\t},\n\t\"TABS\": {\n\t\t\"BUTTON_ARIA_LEFT\": \"Go to the previous tab\",\n\t\t\"BUTTON_ARIA_RIGHT\": \"Go to the next tab\"\n\t},\n\t\"TILES\": {\n\t\t\"TILE\": \"tile\",\n\t\t\"EXPAND\": \"Expand\",\n\t\t\"COLLAPSE\": \"Collapse\"\n\t},\n\t\"TOGGLE\": {\n\t\t\"OFF\": \"Off\",\n\t\t\"ON\": \"On\"\n\t},\n\t\"UI_SHELL\": {\n\t\t\"SKIP_TO\": \"Skip to content\",\n\t\t\"HEADER\": {\n\t\t\t\"OPEN_MENU\": \"Open menu\",\n\t\t\t\"CLOSE_MENU\": \"Close menu\"\n\t\t},\n\t\t\"SIDE_NAV\": {\n\t\t\t\"LABEL\": \"Side navigation\",\n\t\t\t\"SWITCHER\": \"Switcher\",\n\t\t\t\"TOGGLE_OPEN\": \"Open\",\n\t\t\t\"TOGGLE_CLOSE\": \"Close\"\n\t\t}\n\t}\n};\n","import { Injectable } from \"@angular/core\";\nimport {\n\tBehaviorSubject,\n\tObservable,\n\tisObservable,\n\tiif,\n\tSubscription\n} from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { merge } from \"carbon-components-angular/utils\";\n\nimport EN from \"./en\";\n\n/**\n * Takes the `Observable` returned from `i18n.get` and an object of variables to replace.\n *\n * The keys specify the variable name in the string.\n *\n * Example:\n * ```typescript\n * service.set({ \"TEST\": \"{{foo}} {{bar}}\" });\n *\n * service.replace(service.get(\"TEST\"), { foo: \"test\", bar: \"asdf\" })\n * ```\n *\n * Produces: `\"test asdf\"`\n *\n * @param subject the translation to replace variables on\n * @param variables object of variables to replace\n */\nexport const replace = (subject, variables) => subject.pipe(\n\tmap<string, void>(str => {\n\t\tconst keys = Object.keys(variables);\n\t\tfor (const key of keys) {\n\t\t\tconst value = variables[key];\n\t\t\tstr = str.replace(new RegExp(`{{\\\\s*${key}\\\\s*}}`, \"g\"), value);\n\t\t}\n\t\treturn str;\n\t})\n);\n\n/**\n * Represents an \"overridable\" translation value.\n *\n * Largely an internal usecase. There are situations where we want an `Observable` that\n * can emit events from a centralized source **OR** an `Observable` that will emit events\n * from a component local source. The key example being on/off text in a `Toggle` - In some cases\n * we want the `Toggle` to use `I18n`s global translations, but in others we'd prefer to use a local\n * override. We don't ever need to return to a non-overridden state, but we do need the ability to\n * switch _to_ an overridden sate.\n */\nexport class Overridable {\n\t/**\n\t * The raw value of the translation. Defaults to the string value, but will return the value passed to `override`\n\t *\n\t * @readonly\n\t */\n\tpublic get value(): string | Observable<string> {\n\t\treturn this._value;\n\t}\n\n\tpublic set value(v: string | Observable<string>) {\n\t\tthis.override(v);\n\t}\n\n\t/**\n\t * The translation subject. Returns either a stream of overridden values, or our base translation values.\n\t *\n\t * @readonly\n\t */\n\tpublic get subject(): Observable<string> {\n\t\t/**\n\t\t * since inputs are bound on template instantiation (and thusly will always have _some_ value)\n\t\t * We can use a simple boolean and the `iif` function to determine which subject to return on subscription\n\t\t */\n\t\treturn iif(() => this.isOverridden, this.$override, this.baseTranslation);\n\t}\n\n\t/**\n\t * Overridden value. Accessed by the readonly getter `value` and set through `override`\n\t */\n\tprotected _value: string | Observable<string>;\n\t/**\n\t * Subject of overridden values. Initialized with our default value.\n\t */\n\tprotected $override: BehaviorSubject<string>;\n\t/**\n\t * Our base non-overridden translation.\n\t */\n\tprotected baseTranslation: Observable<string> = this.i18n.get(this.path);\n\n\t/**\n\t * Subscription to the observable provided as an override (if any)\n\t */\n\tprotected subscription: Subscription;\n\t/**\n\t * A boolean to flip between overridden and non-overridden states.\n\t */\n\tprotected isOverridden = false;\n\n\tconstructor(protected path: string, protected i18n: I18n) {\n\t\t/**\n\t\t * ensure `$override` is initialized with the correct default value\n\t\t * in some cases `_value` can get changed for an `Observable` before `$override` is created\n\t\t */\n\t\tconst value = this.i18n.getValueFromPath(this.path) as string;\n\t\tthis.$override = new BehaviorSubject<string>(value);\n\t\tthis._value = value;\n\t}\n\t/**\n\t * Takes a string or an `Observable` that emits strings.\n\t * Overrides the value provided by the `I18n` service.\n\t */\n\toverride(value: string | Observable<string>) {\n\t\tthis.isOverridden = true;\n\t\t// To ensure that there are not multiple subscriptions created for the same observable, we\n\t\t// unsubscribe if a subscription already exists for an observable before creating a new one.\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t\tthis.subscription = null;\n\t\t}\n\n\t\tthis._value = value;\n\n\t\tif (isObservable(value)) {\n\t\t\tthis.subscription = value.subscribe(v => {\n\t\t\t\tthis.$override.next(v);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.$override.next(value);\n\t\t}\n\t}\n}\n\n/**\n * An object of strings, should follow the same format as src/i18n/en.json\n */\nexport type TranslationStrings = { [key: string]: string };\n\n\n/**\n * The I18n service is a minimal internal singleton service used to supply our components with translated strings.\n *\n * All the components that support I18n also support directly passed strings.\n * Usage of I18n is optional, and it is not recommended for application use (libraries like ngx-translate\n * are a better choice)\n *\n */\n@Injectable()\nexport class I18n {\n\tprotected translationStrings = EN;\n\n\tprotected translations = new Map();\n\n\tprotected locale = new BehaviorSubject(\"en\");\n\n\t/**\n\t * Sets the locale and optionally the translation strings. Locale is used by components that\n\t * are already locale aware (datepicker for example) while the translation strings are used\n\t * for components that are not.\n\t *\n\t * Locales set here will override locales/languages set in components\n\t * @param language an ISO 639-1 language code - https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n\t * @param strings an object of strings, optional\n\t */\n\tpublic setLocale(language: string, strings?: TranslationStrings) {\n\t\tthis.locale.next(language);\n\t\tif (strings) {\n\t\t\tthis.set(strings);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the current locale\n\t */\n\tpublic getLocale() {\n\t\treturn this.locale.value;\n\t}\n\n\t/**\n\t * Returns an observable that resolves to the current locale, and will update when changed\n\t */\n\tpublic getLocaleObservable() {\n\t\treturn this.locale.asObservable();\n\t}\n\n\t/**\n\t * Set/update the translations from an object. Also notifies all participating components of the update.\n\t *\n\t * @param strings an object of strings, should follow the same format as src/i18n/en.json\n\t */\n\tpublic set(strings: TranslationStrings) {\n\t\tthis.translationStrings = merge({}, EN, strings);\n\t\t// iterate over all our tracked translations and update each observable\n\t\tconst translations = Array.from(this.translations);\n\t\tfor (const [path, subject] of translations) {\n\t\t\tsubject.next(this.getValueFromPath(path));\n\t\t}\n\t}\n\n\t/**\n\t * When a path is specified returns an observable that will resolve to the translation string value.\n\t *\n\t * Returns the full translations object if path is not specified.\n\t *\n\t * @param path optional, looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n\t */\n\tpublic get(path?: string): any {\n\t\tif (!path) {\n\t\t\treturn this.translationStrings;\n\t\t}\n\t\treturn this.getSubject(path);\n\t}\n\n\t/**\n\t * Returns all descendents of some path fragment as an object.\n\t *\n\t * @param partialPath a path fragment, for example `\"NOTIFICATION\"`\n\t */\n\tpublic getMultiple(partialPath: string): { [key: string]: Observable<string> } {\n\t\tconst values = this.getValueFromPath(partialPath);\n\t\tconst subjects = {};\n\t\tfor (const key of Object.keys(values)) {\n\t\t\tif (values[key] === Object(values[key])) {\n\t\t\t\tsubjects[key] = this.getMultiple(`${partialPath}.${key}`);\n\t\t\t} else {\n\t\t\t\tsubjects[key] = this.getSubject(`${partialPath}.${key}`);\n\t\t\t}\n\t\t}\n\t\treturn subjects;\n\t}\n\n\t/**\n\t * Returns an instance of `Overridable` that can be used to optionally override the value provided by `I18n`\n\t * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n\t */\n\tpublic getOverridable(path: string) {\n\t\treturn new Overridable(path, this);\n\t}\n\n\t/**\n\t * Takes the `Observable` returned from `i18n.get` and an object of variables to replace.\n\t *\n\t * The keys specify the variable name in the string.\n\t *\n\t * Example:\n\t * ```\n\t * service.set({ \"TEST\": \"{{foo}} {{bar}}\" });\n\t *\n\t * service.replace(service.get(\"TEST\"), { foo: \"test\", bar: \"asdf\" })\n\t * ```\n\t *\n\t * Produces: `\"test asdf\"`\n\t *\n\t * @param subject the translation to replace variables on\n\t * @param variables object of variables to replace\n\t */\n\tpublic replace(subject: Observable<string>, variables: { [key: string]: string }) {\n\t\treturn replace(subject, variables);\n\t}\n\n\t/**\n\t * Trys to resolve a value from the provided path.\n\t *\n\t * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n\t */\n\tpublic getValueFromPath(path): string | { [key: string]: string } {\n\t\tlet value = this.translationStrings;\n\t\tfor (const segment of path.split(\".\")) {\n\t\t\tif (value[segment] !== undefined && value[segment] !== null) {\n\t\t\t\tvalue = value[segment];\n\t\t\t} else {\n\t\t\t\tthrow new Error(`no key ${segment} at ${path}`);\n\t\t\t}\n\t\t}\n\t\treturn value as any;\n\t}\n\n\t/**\n\t * Helper method that returns an observable from the internal cache based on the path\n\t *\n\t * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n\t */\n\tprotected getSubject(path: string): Observable<string> {\n\t\ttry {\n\t\t\t// we run this here to validate the path exists before adding it to the translation map\n\t\t\tconst value = this.getValueFromPath(path) as string;\n\t\t\tif (this.translations.has(path)) {\n\t\t\t\treturn this.translations.get(path);\n\t\t\t}\n\t\t\tconst translation = new BehaviorSubject(value);\n\t\t\tthis.translations.set(path, translation);\n\t\t\treturn translation;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { replace } from \"./i18n.service\";\n\n@Pipe({\n\tname: \"i18nReplace\"\n})\nexport class ReplacePipe implements PipeTransform {\n\ttransform(value, variables) {\n\t\treturn replace(value, variables);\n\t}\n}\n","import { NgModule, SkipSelf, Optional } from \"@angular/core\";\n\nimport { I18n } from \"./i18n.service\";\nimport { ReplacePipe } from \"./replace.pipe\";\n\n// either provides a new instance of I18n, or returns the parent\nexport function I18N_SERVICE_PROVIDER_FACTORY(parentService: I18n) {\n\treturn parentService || new I18n();\n}\n\n// I18n should provide a single instance of itself to ensure that translations are consistent through the app\nexport const I18N_SERVICE_PROVIDER = {\n\tprovide: I18n,\n\tdeps: [[new Optional(), new SkipSelf(), I18n]],\n\tuseFactory: I18N_SERVICE_PROVIDER_FACTORY\n};\n\n@NgModule({\n\tdeclarations: [ReplacePipe],\n\texports: [ReplacePipe],\n\tproviders: [\n\t\tI18n,\n\t\tI18N_SERVICE_PROVIDER\n\t]\n})\nexport class I18nModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
