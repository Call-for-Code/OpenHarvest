{"version":3,"file":"tabs.component.d.ts","sources":["tabs.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n *\n * carbon-angular v0.0.0 | tabs.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { QueryList, AfterContentInit, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { Tab } from \"./tab.component\";\n/**\n * Build out your application's tabs using this component.\n * This is the parent of the `Tab` and `TabHeader` components.\n *\n * [See demo](../../?path=/story/tabs--basic)\n *\n * `Tabs` expects a set of `n-tab` elements\n *\n * ```html\n * <ibm-tabs>\n * \t<ibm-tab heading='tab1'>\n * \t\ttab 1 content\n * \t</ibm-tab>\n * \t<ibm-tab heading='tab1'>\n * \t\ttab 2 content\n * \t</ibm-tab>\n * \t<!-- ... -->\n * \t<ibm-tab heading='tab1'>\n * \t\ttab n content\n * \t</ibm-tab>\n * </ibm-tabs>\n * ```\n *\n * <example-url>../../iframe.html?id=tabs--basic</example-url>\n */\nexport declare class Tabs implements AfterContentInit, OnChanges {\n    /**\n     * Takes either the string value 'top' or 'bottom' to place TabHeader\n     * relative to the `TabPanel`s.\n     */\n    position: \"top\" | \"bottom\";\n    /**\n     * Set to 'true' to have `Tab` items cached and not reloaded on tab switching.\n     */\n    cacheActive: boolean;\n    /**\n     * Set to 'true' to have tabs automatically activated and have their content displayed when they receive focus.\n     */\n    followFocus: boolean;\n    /**\n     * Set to `true` to put tabs in a loading state.\n     */\n    skeleton: boolean;\n    /**\n     * Set to `true` to have the tabIndex of the all tabpanels be -1.\n     */\n    isNavigation: boolean;\n    /**\n     * Sets the aria label on the `TabHeader`s nav element.\n     */\n    ariaLabel: string;\n    /**\n     * Sets the aria labelledby on the `TabHeader`s nav element.\n     */\n    ariaLabelledby: string;\n    /**\n     * Sets the type of the `TabHeader`s\n     */\n    type: \"default\" | \"container\";\n    /**\n     * Maintains a `QueryList` of the `Tab` elements and updates if `Tab`s are added or removed.\n     */\n    tabs: QueryList<Tab>;\n    /**\n     * Content child of the projected header component\n     */\n    tabHeaders: any;\n    /**\n     * After content is initialized update `Tab`s to cache (if turned on) and set the initial\n     * selected Tab item.\n     */\n    ngAfterContentInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * true if the n-tab's are passed directly to the component as children\n     */\n    hasTabHeaders(): boolean;\n}\n"]}