{"version":3,"file":"tab.component.d.ts","sources":["tab.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n *\n * carbon-angular v0.0.0 | tab.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { OnInit, EventEmitter, TemplateRef } from \"@angular/core\";\n/**\n* The `Tab` component is a child of the `Tabs` component.\n* It represents one `Tab` item and its content within a panel of other `Tab` items.\n*\n*\n* `Tab` takes a string or `TemplateRef` for the header, and any content for the body of the tab.\n* Disabled states should be handled by the application (ie. switch to the tab, but display some\n* indication as to _why_ the tab is disabled).\n*\n* When the tab is selected the `select` output will be triggered.\n* The `select` output will also be triggered for the active tab when the tabs are loaded or updated.\n*\n*\n* Tab with string header:\n*\n* ```html\n* <ibm-tab heading='tab1'>\n* \ttab 1 content\n* </ibm-tab>\n* ```\n*\n* Tab with custom header:\n*\n* ```html\n* <ng-template #tabHeading>\n* \t<svg ibmIcon=\"facebook\"\n* \t\tsize=\"sm\"\n* \t\tstyle=\"margin-right: 7px;\">\n* \t</svg>\n* \tHello Tab 1\n* </ng-template>\n* <ibm-tabs>\n* \t<ibm-tab [heading]=\"tabHeading\">\n* \t\tTab 1 content <svg ibmIcon=\"alert\" size=\"lg\"></svg>\n* \t</ibm-tab>\n* \t<ibm-tab heading='Tab2'>\n* \t\tTab 2 content\n* \t</ibm-tab>\n* \t<ibm-tab heading='Tab3'>\n* \t\tTab 3 content\n* \t</ibm-tab>\n* </ibm-tabs>\n* ```\n*/\nexport declare class Tab implements OnInit {\n    /**\n     * Boolean value reflects if the `Tab` is using a custom template for the heading.\n     * Default value is false.\n     */\n    headingIsTemplate: boolean;\n    /**\n     * The `Tab`'s title to be displayed or custom temaplate for the `Tab` heading.\n     */\n    heading: string | TemplateRef<any>;\n    /**\n     * Optional override for the `tabItem's`'s title attribute which is set in `TabHeaders`.\n     * `tabItem`'s title attribute is automatically set to `heading`.\n     *\n     * You might want to use this if you set `heading` to a `TemplateRef`.\n     */\n    title: string;\n    /**\n     * Allows the user to pass data to the custom template for the `Tab` heading.\n     */\n    context: any;\n    /**\n     * Indicates whether the `Tab` is active/selected.\n     * Determines whether it's `TabPanel` is rendered.\n     */\n    active: boolean;\n    /**\n     * Indicates whether or not the `Tab` item is disabled.\n     */\n    disabled: boolean;\n    tabIndex: number;\n    /**\n     * Sets the id of the `Tab`. Will be uniquely generated if not provided.\n     */\n    id: string;\n    /**\n     * Set to true to have Tab items cached and not reloaded on tab switching.\n     */\n    cacheActive: boolean;\n    /**\n     * Value 'selected' to be emitted after a new `Tab` is selected.\n     */\n    selected: EventEmitter<void>;\n    /**\n     * Used to set the id property on the element.\n     */\n    attrClass: string;\n    protected _cacheActive: boolean;\n    /**\n     * Checks for custom heading template on initialization and updates the value\n     * of the boolean 'headingIsTemplate'.\n     */\n    ngOnInit(): void;\n    /**\n     * Emit the status of the `Tab`, specifically 'select' and 'selected' properties.\n     */\n    doSelect(): void;\n    /**\n    * Returns value indicating whether this `Tab` should be rendered in a `TabPanel`.\n    */\n    shouldRender(): boolean;\n}\n"]}