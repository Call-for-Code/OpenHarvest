{"version":3,"file":"carbon-components-angular-notification.umd.js.map","sources":["ng://carbon-components-angular/notification/notification-display.service.ts","ng://carbon-components-angular/notification/notification-subtitle.directive.ts","ng://carbon-components-angular/notification/notification-title.directive.ts","ng://carbon-components-angular/notification/notification.component.ts","node_modules/tslib/tslib.es6.js","ng://carbon-components-angular/notification/toast.component.ts","ng://carbon-components-angular/notification/toast-title.directive.ts","ng://carbon-components-angular/notification/toast-subtitle.directive.ts","ng://carbon-components-angular/notification/toast-caption.directive.ts","ng://carbon-components-angular/notification/notification.service.ts","ng://carbon-components-angular/notification/notification.module.ts","ng://carbon-components-angular/notification/carbon-components-angular-notification.ts"],"sourcesContent":["import {\n\tInjectable,\n\tApplicationRef\n} from \"@angular/core\";\n\n@Injectable()\nexport class NotificationDisplayService {\n\tconstructor(protected applicationRef: ApplicationRef) {}\n\n\t/**\n\t * Programatically closes notification based on `notificationRef`.\t *\n\t */\n\tclose(notificationRef: any) {\n\t\tif (notificationRef.hostView) {\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.applicationRef.detachView(notificationRef.hostView);\n\t\t\t\tnotificationRef.destroy();\n\t\t\t}, 200);\n\t\t}\n\t}\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmNotificationSubtitle]\"\n})\nexport class NotificationSubtitle {\n\t@HostBinding(\"class.bx--inline-notification__subtitle\") baseClass = true;\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmNotificationTitle]\"\n})\nexport class NotificationTitle {\n\t@HostBinding(\"class.bx--inline-notification__title\") baseClass = true;\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tComponentRef,\n\tViewChild,\n\tHostBinding\n} from \"@angular/core\";\n\nimport { NotificationContent } from \"./notification-content.interface\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { NotificationDisplayService } from \"./notification-display.service\";\nimport { of, isObservable, Subject } from \"rxjs\";\n\n/**\n * Notification messages are displayed toward the top of the UI and do not interrupt userâs work.\n *\n * [See demo](../../?path=/story/notification--basic)\n *\n * <example-url>../../iframe.html?id=notification--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-notification\",\n\ttemplate: `\n\t\t<div class=\"bx--inline-notification__details\">\n\t\t\t<svg\n\t\t\t\tibmIcon=\"error--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\t*ngIf=\"notificationObj.type === 'error'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\tibmIcon=\"warning--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\t*ngIf=\"notificationObj.type === 'warning'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\tibmIcon=\"checkmark--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\t*ngIf=\"notificationObj.type === 'success'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\tibmIcon=\"information--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\t*ngIf=\"notificationObj.type === 'info'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</svg>\n\t\t\t<div class=\"bx--inline-notification__text-wrapper\">\n\t\t\t\t<p *ngIf=\"!notificationObj.template\" ibmNotificationTitle [innerHTML]=\"notificationObj.title\"></p>\n\t\t\t\t<div *ngIf=\"!notificationObj.template\" ibmNotificationSubtitle>\n\t\t\t\t\t<span [innerHTML]=\"notificationObj.message\"></span>\n\t\t\t\t\t<ng-container *ngFor=\"let link of notificationObj.links\">\n\t\t\t\t\t\t<a ibmLink [href]=\"link.href\"> {{link.text}}</a>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"notificationObj.template; context: { $implicit: notificationObj}\"></ng-container>\n\t\t\t</div>\n\t\t</div>\n\t\t<div *ngFor=\"let action of notificationObj.actions\">\n\t\t\t<button\n\t\t\t\t(click)=\"onClick(action, $event)\"\n\t\t\t\tibmButton=\"ghost\"\n\t\t\t\tsize=\"sm\"\n\t\t\t\tclass=\"bx--inline-notification__action-button\"\n\t\t\t\ttype=\"button\">\n\t\t\t\t{{action.text}}\n\t\t\t</button>\n\t\t</div>\n\t\t<button\n\t\t\t*ngIf=\"!isCloseHidden\"\n\t\t\t(click)=\"onClose()\"\n\t\t\tclass=\"bx--inline-notification__close-button\"\n\t\t\t[attr.aria-label]=\"notificationObj.closeLabel | async\"\n\t\t\ttype=\"button\">\n\t\t\t<svg ibmIcon=\"close\" size=\"16\" class=\"bx--inline-notification__close-icon\"></svg>\n\t\t</button>\n\t`\n})\nexport class Notification {\n\tprivate static notificationCount = 0;\n\t/**\n\t * Can have `type`, `title`, and `message` members.\n\t *\n\t * `type` can be one of `\"info\"`, `\"warning\"`, `\"error\"`, `\"success\"`\n\t *\n\t * `message` is the message to display\n\t */\n\t@Input() get notificationObj(): NotificationContent {\n\t\treturn this._notificationObj;\n\t}\n\tset notificationObj(obj: NotificationContent) {\n\t\tif (obj.closeLabel) {\n\t\t\tobj.closeLabel = of(obj.closeLabel);\n\t\t}\n\t\tthis._notificationObj = Object.assign({}, this.defaultNotificationObj, obj);\n\t}\n\n\t/**\n\t * Emits on close.\n\t */\n\t@Output() close: EventEmitter<any> = new EventEmitter();\n\n\tcomponentRef: ComponentRef<Notification>;\n\n\t// @ts-ignore\n\t@ViewChild(\"notification\", { static: false }) notification;\n\n\t@HostBinding(\"attr.id\") notificationID = `notification-${Notification.notificationCount++}`;\n\t@HostBinding(\"class.bx--inline-notification\") notificationClass = true;\n\t@HostBinding(\"attr.role\") role = \"alert\";\n\n\t@HostBinding(\"class.bx--inline-notification--error\") get isError() { return this.notificationObj.type === \"error\"; }\n\t@HostBinding(\"class.bx--inline-notification--info\") get isInfo() { return this.notificationObj.type === \"info\"; }\n\t@HostBinding(\"class.bx--inline-notification--success\") get isSuccess() { return this.notificationObj.type === \"success\"; }\n\t@HostBinding(\"class.bx--inline-notification--warning\") get isWarning() { return this.notificationObj.type === \"warning\"; }\n\t@HostBinding(\"class.bx--inline-notification--low-contrast\") get isLowContrast() { return this.notificationObj.lowContrast; }\n\t@HostBinding(\"class.bx--inline-notification--hide-close-button\") get isCloseHidden() { return !this._notificationObj.showClose; }\n\n\tprotected defaultNotificationObj = {\n\t\ttitle: \"\",\n\t\tmessage: \"\",\n\t\ttype: \"info\",\n\t\tshowClose: true,\n\t\tcloseLabel: this.i18n.get(\"NOTIFICATION.CLOSE_BUTTON\")\n\t};\n\tprotected _notificationObj: NotificationContent = Object.assign({}, this.defaultNotificationObj);\n\n\tconstructor(protected notificationDisplayService: NotificationDisplayService, protected i18n: I18n) {}\n\n\t/**\n\t * Emits close event.\n\t */\n\tonClose() {\n\t\tthis.close.emit();\n\t}\n\n\tonClick(action, event) {\n\t\tif (!action.click) {\n\t\t\treturn;\n\t\t}\n\t\tif (isObservable(action.click)) {\n\t\t\t(action.click as Subject<{event: Event, action: any}>).next({event, action});\n\t\t} else {\n\t\t\taction.click({event, action});\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.notificationDisplayService.close(this);\n\t}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n\tComponent,\n\tInput,\n\tOnInit,\n\tHostBinding\n} from \"@angular/core\";\n\nimport { ToastContent } from \"./notification-content.interface\";\nimport { Notification } from \"./notification.component\";\nimport { ExperimentalService } from \"carbon-components-angular/experimental\";\nimport { NotificationDisplayService } from \"./notification-display.service\";\nimport { I18n } from \"carbon-components-angular/i18n\";\n\n/**\n * Toast messages are displayed toward the top of the UI and do not interrupt userâs work.\n *\n * [See demo](../../?path=/story/notification--toast)\n *\n * <example-url>../../iframe.html?id=notification--toast</example-url>\n */\n@Component({\n\tselector: \"ibm-toast\",\n\ttemplate: `\n\t\t<svg\n\t\t\tibmIcon=\"error--filled\"\n\t\t\tsize=\"16\"\n\t\t\t*ngIf=\"notificationObj.type === 'error'\"\n\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t</svg>\n\t\t<svg\n\t\t\tibmIcon=\"warning--filled\"\n\t\t\tsize=\"16\"\n\t\t\t*ngIf=\"notificationObj.type === 'warning'\"\n\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t</svg>\n\t\t<svg\n\t\t\tibmIcon=\"checkmark--filled\"\n\t\t\tsize=\"16\"\n\t\t\t*ngIf=\"notificationObj.type === 'success'\"\n\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t</svg>\n\t\t<svg\n\t\t\tibmIcon=\"information--filled\"\n\t\t\tsize=\"16\"\n\t\t\t*ngIf=\"notificationObj.type === 'info'\"\n\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t</svg>\n\t\t<div class=\"bx--toast-notification__details\">\n\t\t\t<h3 *ngIf=\"!notificationObj.template\" ibmToastTitle [innerHTML]=\"notificationObj.title\"></h3>\n\t\t\t<div *ngIf=\"!notificationObj.template\" ibmToastSubtitle>\n\t\t\t\t<span [innerHTML]=\"notificationObj.subtitle\"></span>\n\t\t\t\t<ng-container *ngFor=\"let link of notificationObj.links\">\n\t\t\t\t\t<a ibmLink [href]=\"link.href\"> {{link.text}}</a>\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\t\t\t<p *ngIf=\"!notificationObj.template\" ibmToastCaption [innerHTML]=\"notificationObj.caption\"></p>\n\t\t\t<ng-container *ngTemplateOutlet=\"notificationObj.template; context: { $implicit: notificationObj}\"></ng-container>\n\t\t</div>\n\t\t<button\n\t\t\t*ngIf=\"!isCloseHidden\"\n\t\t\tclass=\"bx--toast-notification__close-button\"\n\t\t\ttype=\"button\"\n\t\t\t[attr.aria-label]=\"notificationObj.closeLabel\"\n\t\t\t(click)=\"onClose()\">\n\t\t\t<svg ibmIcon=\"close\" size=\"16\" class=\"bx--toast-notification__close-icon\"></svg>\n\t\t</button>\n\t`\n})\nexport class Toast extends Notification implements OnInit {\n\tprivate static toastCount = 0;\n\t/**\n\t * Can have `type`, `title`, `subtitle`, and `caption` members.\n\t *\n\t * `type` can be one of `\"error\"`, `\"info\"`, `\"warning\"`, or `\"success\"`\n\t */\n\t@Input() notificationObj: ToastContent;\n\n\t@HostBinding(\"attr.id\") toastID = `toast-${Toast.toastCount++}`;\n\t@HostBinding(\"class.bx--toast-notification\") toastClass = true;\n\t@HostBinding(\"attr.role\") role = \"alert\";\n\n\t@HostBinding(\"class.bx--toast-notification--error\") get isError() { return this.notificationObj[\"type\"] === \"error\"; }\n\t@HostBinding(\"class.bx--toast-notification--info\") get isInfo() { return this.notificationObj[\"type\"] === \"info\"; }\n\t@HostBinding(\"class.bx--toast-notification--success\") get isSuccess() { return this.notificationObj[\"type\"] === \"success\"; }\n\t@HostBinding(\"class.bx--toast-notification--warning\") get isWarning() { return this.notificationObj[\"type\"] === \"warning\"; }\n\t@HostBinding(\"class.bx--toast-notification--low-contrast\") get isLowContrast() { return this.notificationObj.lowContrast; }\n\n\tconstructor(\n\t\tprotected notificationDisplayService: NotificationDisplayService,\n\t\tprotected i18n: I18n,\n\t\tprotected experimental: ExperimentalService) {\n\t\tsuper(notificationDisplayService, i18n);\n\t\t// disable inline notification styles\n\t\tthis.notificationClass = false;\n\t}\n\n\tngOnInit() {\n\t\tif (!this.notificationObj.closeLabel) {\n\t\t\tthis.notificationObj.closeLabel = this.i18n.get().NOTIFICATION.CLOSE_BUTTON;\n\t\t}\n\t}\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmToastTitle]\"\n})\nexport class ToastTitle {\n\t@HostBinding(\"class.bx--toast-notification__title\") baseClass = true;\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmToastSubtitle]\"\n})\nexport class ToastSubtitle {\n\t@HostBinding(\"class.bx--toast-notification__subtitle\") baseClass = true;\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmToastCaption]\"\n})\nexport class ToastCaption {\n\t@HostBinding(\"class.bx--toast-notification__caption\") baseClass = true;\n}\n","import {\n\tApplicationRef,\n\tComponentFactory,\n\tComponentFactoryResolver,\n\tComponentRef,\n\tEventEmitter,\n\tInjectable,\n\tInjector,\n\tOnDestroy,\n\tNgZone\n} from \"@angular/core\";\n\nimport { NotificationContent, ToastContent } from \"./notification-content.interface\";\nimport { Notification } from \"./notification.component\";\nimport { Toast } from \"./toast.component\";\n\n/**\n * Provides a way to use the notification component.\n *\n * Notifications are displayed toward the top of the UI and do not interrupt the userâs work.\n */\n@Injectable()\nexport class NotificationService implements OnDestroy {\n\t/**\n\t * An array containing `ComponentRef`s to all the notifications this service instance\n\t * is responsible for.\n\t *\n\t */\n\tpublic notificationRefs = new Array<ComponentRef<any>>();\n\tpublic onClose: EventEmitter<any> = new EventEmitter();\n\n\t/**\n\t * Constructs NotificationService.\n\t *\n\t * @param injector\n\t * @param componentFactoryResolver\n\t * @param applicationRef\n\t */\n\tconstructor(\n\t\tprotected injector: Injector,\n\t\tprotected componentFactoryResolver: ComponentFactoryResolver,\n\t\tprotected applicationRef: ApplicationRef,\n\t\tprotected ngZone: NgZone) {\n\t}\n\n\t/**\n\t * Shows the notification based on the `notificationObj`.\n\t *\n\t * @param notificationObj Can have `type`, `message`, `target`, `duration` and `smart` members.\n\t *\n\t * **Members:**\n\t *\n\t * * `type` can be one of `\"info\"`, `\"warning\"`, `\"danger\"`, `\"success\"`\n\t * * `message` is message for notification to display\n\t * * `target` is css selector defining an element to append notification to. If not provided,\n\t * `showNotification()` creates a place for the notification in `body`\n\t * * `duration` is number of ms to close the notification after. If used in combination with `smart`,\n\t * it's added to the calculated timeout\n\t * * `smart`, set to `true` if you want to use smart notification.\n\t *\n\t * **Example:**\n\t * ```typescript\n\t * // Info notification, saying \"Sample message.\" added to the element with id notification-container\n\t * // uses smart timeout with added duration of 1 second.\n\t * {\n\t *\ttype: \"info\",\n\t *\tmessage: \"Sample message.\",\n\t *\ttarget: \"#notification-container\",\n\t *\tduration: 1000,\n\t *\tsmart: true\n\t * }\n\t * ```\n\t *\n\t * @param [notificationComp=Notification] If provided, used to resolve component factory\n\t */\n\tshowNotification(notificationObj: NotificationContent | ToastContent, notificationComp = Notification) {\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(notificationComp);\n\n\t\tlet notificationRef = componentFactory.create(this.injector);\n\t\tnotificationRef.instance.notificationObj = notificationObj as any; // typescript isn't being very smart here, so we type to any\n\t\tthis.notificationRefs.push(notificationRef);\n\n\t\tthis.onClose = notificationRef.instance.close;\n\t\tthis.applicationRef.attachView(notificationRef.hostView);\n\n\t\tif (notificationObj.target) {\n\t\t\tdocument.querySelector(notificationObj.target).appendChild(notificationRef.location.nativeElement);\n\t\t} else {\n\t\t\tlet body = document.querySelector(\"body\");\n\n\t\t\t// get or create a container for alert list\n\t\t\tlet notificationClassName = \"notification-overlay\";\n\t\t\tlet notificationList = body.querySelector(`.${notificationClassName}`);\n\t\t\tif (!notificationList) {\n\t\t\t\tnotificationList = document.createElement(\"div\");\n\t\t\t\tnotificationList.className = notificationClassName;\n\t\t\t\tbody.appendChild(notificationList);\n\t\t\t}\n\n\t\t\t// add the notification to the top of the list\n\t\t\tif (notificationList.firstChild) {\n\t\t\t\tnotificationList.insertBefore(notificationRef.location.nativeElement, notificationList.firstChild);\n\t\t\t} else {\n\t\t\t\tnotificationList.appendChild(notificationRef.location.nativeElement);\n\t\t\t}\n\t\t}\n\n\t\tif (notificationObj.duration && notificationObj.duration > 0) {\n\t\t\tthis.ngZone.runOutsideAngular(() => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.ngZone.run(() => {\n\t\t\t\t\t\tthis.close(notificationRef);\n\t\t\t\t\t});\n\t\t\t\t}, notificationObj.duration);\n\t\t\t});\n\t\t}\n\n\t\tif (notificationObj.smart) {\n\t\t\tthis.ngZone.runOutsideAngular(() => {\n\t\t\t\t// let it disappear after calculated timeout\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.ngZone.run(() => {\n\t\t\t\t\t\tthis.close(notificationRef);\n\t\t\t\t\t});\n\t\t\t\t}, this.getSmartTimeout(notificationObj));\n\t\t\t});\n\t\t}\n\n\t\tthis.onClose.subscribe(() => {\n\t\t\tthis.close(notificationRef);\n\t\t});\n\n\t\tnotificationRef.instance.componentRef = notificationRef;\n\t\treturn notificationRef.instance;\n\t}\n\n\tshowToast(notificationObj: NotificationContent | ToastContent, notificationComp = Toast) {\n\t\treturn this.showNotification(notificationObj, notificationComp as any);\n\t}\n\n\t/**\n\t * Programatically closes notification based on `notificationRef`.\n\t *\n\t * @param notificationRef `ComponentRef` of a notification or `Notification` component you wish to close\n\t */\n\tclose(notificationRef: any) {\n\t\tif (notificationRef) {\n\t\t\tif (notificationRef instanceof Notification) {\n\t\t\t\tthis.close(notificationRef.componentRef);\n\t\t\t} else {\n\t\t\t\tthis.applicationRef.detachView(notificationRef.hostView);\n\t\t\t\tnotificationRef.destroy();\n\t\t\t\tconst index = this.notificationRefs.indexOf(notificationRef);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tthis.notificationRefs.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the amount of time user needs to read the message in the notification.\n\t *\n\t * @param notificationObj Same object used to instantiate notification.\n\t *\n\t * In addition to `type` and `message` members, use `duration` member to add\n\t * some extra time (in ms) to timeout if you need to.\n\t * @returns calculated timeout (in ms) for smart notification\n\t */\n\tgetSmartTimeout(notificationObj): number {\n\t\t// calculate timeout\n\t\tlet timeout = 600; // start with reaction time\n\n\t\t// custom duration\n\t\ttimeout += notificationObj.duration || 0;\n\n\t\t// message type\n\t\tswitch (notificationObj.type) {\n\t\t\tcase \"info\":\n\t\t\tcase \"success\":\n\t\t\tdefault: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"danger\": {\n\t\t\t\ttimeout += 3000;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"warning\": {\n\t\t\t\ttimeout += 1500;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// message length\n\t\t// average reader reads around 200 words per minute, or it takes them ~0.3s per word\n\t\t// let's use 1.5 factor for below average speed readers and have 0.45s per word\n\t\tlet wordCount = notificationObj.message.trim().split(/\\s+/).length;\n\t\ttimeout += wordCount * 450;\n\n\t\treturn timeout;\n\t}\n\n\t/**\n\t * OnDestroy hook.\n\t *\n\t * Destroys all living notifications it is responsible for.\n\t *\n\t */\n\tngOnDestroy() {\n\t\tif (this.notificationRefs.length > 0) {\n\t\t\tfor (let i = 0; i < this.notificationRefs.length; i++) {\n\t\t\t\tlet notificationRef = this.notificationRefs[i];\n\t\t\t\tthis.applicationRef.detachView(notificationRef.hostView);\n\t\t\t\tnotificationRef.destroy();\n\t\t\t}\n\t\t\tthis.notificationRefs.length = 0;\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { ButtonModule } from \"carbon-components-angular/button\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Toast } from \"./toast.component\";\nimport { ToastTitle } from \"./toast-title.directive\";\nimport { ToastSubtitle } from \"./toast-subtitle.directive\";\nimport { ToastCaption } from \"./toast-caption.directive\";\nimport { NotificationTitle } from \"./notification-title.directive\";\nimport { NotificationSubtitle } from \"./notification-subtitle.directive\";\nimport { Notification } from \"./notification.component\";\nimport { NotificationService } from \"./notification.service\";\nimport { NotificationDisplayService } from \"./notification-display.service\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { ExperimentalModule } from \"carbon-components-angular/experimental\";\nimport { LinkModule } from \"carbon-components-angular/link\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tNotification,\n\t\tToast,\n\t\tToastTitle,\n\t\tToastSubtitle,\n\t\tToastCaption,\n\t\tNotificationTitle,\n\t\tNotificationSubtitle\n\t],\n\texports: [\n\t\tNotification,\n\t\tToast,\n\t\tToastTitle,\n\t\tToastSubtitle,\n\t\tToastCaption,\n\t\tNotificationTitle,\n\t\tNotificationSubtitle\n\t],\n\tentryComponents: [Notification, Toast],\n\timports: [\n\t\tButtonModule,\n\t\tCommonModule,\n\t\tI18nModule,\n\t\tExperimentalModule,\n\t\tLinkModule,\n\t\tIconModule\n\t],\n\tproviders: [NotificationService, NotificationDisplayService]\n})\nexport class NotificationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Injectable","ApplicationRef","Directive","HostBinding","i18n","EventEmitter","of","isObservable","Component","I18n","Input","Output","ViewChild","tslib_1.__extends","experimental","ExperimentalService","Injector","ComponentFactoryResolver","NgZone","NgModule","ButtonModule","CommonModule","I18nModule","ExperimentalModule","LinkModule","IconModule"],"mappings":"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"}
