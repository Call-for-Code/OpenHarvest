{"version":3,"file":"carbon-components-angular-number-input.umd.js.map","sources":["ng://carbon-components-angular/number-input/number.component.ts","ng://carbon-components-angular/number-input/number.module.ts","ng://carbon-components-angular/number-input/carbon-components-angular-number-input.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tHostBinding,\n\tEventEmitter,\n\tOutput,\n\tTemplateRef,\n\tHostListener\n} from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\n\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { Observable } from \"rxjs\";\n\n/**\n * Used to emit changes performed on number input components.\n */\nexport class NumberChange {\n\t/**\n\t * Contains the `Number` that has been changed.\n\t */\n\tsource: NumberComponent;\n\t/**\n\t * The value of the `Number` field encompassed in the `NumberChange` class.\n\t */\n\tvalue: number;\n}\n\n/**\n * [See demo](../../?path=/story/number--basic)\n *\n * <example-url>../../iframe.html?id=number--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-number\",\n\ttemplate: `\n\t\t<label *ngIf=\"skeleton && label\" class=\"bx--label bx--skeleton\"></label>\n\t\t<label *ngIf=\"!skeleton && label\" [for]=\"id\" class=\"bx--label\">\n\t\t\t<ng-container *ngIf=\"!isTemplate(label)\">{{label}}</ng-container>\n\t\t\t<ng-template *ngIf=\"isTemplate(label)\" [ngTemplateOutlet]=\"label\"></ng-template>\n\t\t</label>\n\t\t<div\n\t\t\tdata-numberinput\n\t\t\t[attr.data-invalid]=\"(invalid ? true : null)\"\n\t\t\tclass=\"bx--number\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--number--light': theme === 'light',\n\t\t\t\t'bx--number--nolabel': !label,\n\t\t\t\t'bx--number--helpertext': helperText,\n\t\t\t\t'bx--skeleton' : skeleton,\n\t\t\t\t'bx--number--sm': size === 'sm',\n\t\t\t\t'bx--number--xl': size === 'xl'\n\t\t\t}\">\n\t\t\t<div class=\"bx--number__input-wrapper\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t[id]=\"id\"\n\t\t\t\t\t[value]=\"value\"\n\t\t\t\t\t[attr.min]=\"min\"\n\t\t\t\t\t[attr.max]=\"max\"\n\t\t\t\t\t[attr.step]=\"step\"\n\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t[required]=\"required\"\n\t\t\t\t\t(input)=\"onNumberInputChange($event)\"/>\n\t\t\t\t<svg\n\t\t\t\t\t*ngIf=\"!skeleton && invalid\"\n\t\t\t\t\tibmIcon=\"warning--filled\"\n\t\t\t\t\tsize=\"16\"\n\t\t\t\t\tclass=\"bx--number__invalid\">\n\t\t\t\t</svg>\n\t\t\t\t<div *ngIf=\"!skeleton\" class=\"bx--number__controls\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"bx--number__control-btn up-icon\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\taria-live=\"polite\"\n\t\t\t\t\t\taria-atomic=\"true\"\n\t\t\t\t\t\t[attr.aria-label]=\"getIncrementLabel() | async\"\n\t\t\t\t\t\t(click)=\"onIncrement()\">\n\t\t\t\t\t\t<svg ibmIcon=\"caret--up\" size=\"16\"></svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"bx--number__control-btn down-icon\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\taria-live=\"polite\"\n\t\t\t\t\t\taria-atomic=\"true\"\n\t\t\t\t\t\t[attr.aria-label]=\"getDecrementLabel() | async\"\n\t\t\t\t\t\t(click)=\"onDecrement()\">\n\t\t\t\t\t\t<svg ibmIcon=\"caret--down\" size=\"16\"></svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"helperText && !invalid\" class=\"bx--form__helper-text\">\n\t\t\t\t<ng-container *ngIf=\"!isTemplate(helperText)\">{{helperText}}</ng-container>\n\t\t\t\t<ng-template *ngIf=\"isTemplate(helperText)\" [ngTemplateOutlet]=\"helperText\"></ng-template>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"invalid\" class=\"bx--form-requirement\">\n\t\t\t\t<ng-container *ngIf=\"!isTemplate(invalidText)\">{{invalidText}}</ng-container>\n\t\t\t\t<ng-template *ngIf=\"isTemplate(invalidText)\" [ngTemplateOutlet]=\"invalidText\"></ng-template>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: NumberComponent,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class NumberComponent implements ControlValueAccessor {\n\t/**\n\t * Variable used for creating unique ids for number input components.\n\t */\n\tstatic numberCount = 0;\n\n\t@HostBinding(\"class.bx--form-item\") containerClass = true;\n\n\t/**\n\t * `light` or `dark` number input theme.\n\t */\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n\t/**\n\t * Set to `true` for a disabled number input.\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * Set to `true` for a loading number component.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Set to `true` for an invalid number component.\n\t */\n\t@Input() invalid = false;\n\t/**\n\t * The unique id for the number component.\n\t */\n\t@Input() id = `number-${NumberComponent.numberCount}`;\n\t/**\n\t * Number input field render size\n\t */\n\t@Input() size: \"sm\" | \"md\" | \"xl\" = \"md\";\n\t/**\n\t * Reflects the required attribute of the `input` element.\n\t */\n\t@Input() required: boolean;\n\t/**\n\t * Sets the value attribute on the `input` element.\n\t */\n\t@Input() set value(v: any) {\n\t\tif (v === \"\" || v === null) {\n\t\t\tthis._value = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._value = Number(v);\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\t/**\n\t * Sets the min attribute on the `input` element.\n\t */\n\t@Input() min = null;\n\t/**\n\t * Sets the max attribute on the `input` element.\n\t */\n\t@Input() max = null;\n\t/**\n\t * Sets the text inside the `label` tag.\n\t */\n\t@Input() label: string | TemplateRef<any>;\n\t/**\n\t * Sets the optional helper text.\n\t */\n\t@Input() helperText: string | TemplateRef<any>;\n\t/**\n\t * Sets the invalid text.\n\t */\n\t@Input() invalidText: string | TemplateRef<any>;\n\t/**\n\t * Sets the amount the number controls increment and decrement by.\n\t */\n\t@Input() step = 1;\n\t/**\n\t * If `step` is a decimal, we may want precision to be set to go around floating point precision.\n\t */\n\t@Input() precision: number;\n\t/**\n\t * Emits event notifying other classes when a change in state occurs in the input.\n\t */\n\t@Output() change = new EventEmitter<NumberChange>();\n\n\t@Input()\n\tset decrementLabel(value: string | Observable<string>) {\n\t\tthis._decrementLabel.override(value);\n\t}\n\n\tget decrementLabel() {\n\t\treturn this._decrementLabel.value;\n\t}\n\n\t@Input()\n\tset incrementLabel(value: string | Observable<string>) {\n\t\tthis._incrementLabel.override(value);\n\t}\n\n\tget incrementLabel() {\n\t\treturn this._incrementLabel.value;\n\t}\n\n\tprotected _value = 0;\n\n\tprotected _decrementLabel: Overridable = this.i18n.getOverridable(\"NUMBER.DECREMENT\");\n\tprotected _incrementLabel: Overridable = this.i18n.getOverridable(\"NUMBER.INCREMENT\");\n\n\t/**\n\t * Creates an instance of `Number`.\n\t */\n\tconstructor(protected i18n: I18n) {\n\t\tNumberComponent.numberCount++;\n\t}\n\n\t/**\n\t * This is the initial value set to the component\n\t * @param value The input value.\n\t */\n\tpublic writeValue(value: any) {\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Sets a method in order to propagate changes back to the form.\n\t */\n\tpublic registerOnChange(fn: any) {\n\t\tthis.propagateChange = fn;\n\t}\n\n\t/**\n\t * Registers a callback to be triggered when the control has been touched.\n\t * @param fn Callback to be triggered when the number input is touched.\n\t */\n\tpublic registerOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\t@HostListener(\"focusout\")\n\tfocusOut() {\n\t\tthis.onTouched();\n\t}\n\n\t/**\n\t * Sets the disabled state through the model\n\t */\n\tsetDisabledState(isDisabled: boolean) {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\t/**\n\t * Called when number input is blurred. Needed to properly implement `ControlValueAccessor`.\n\t */\n\tonTouched: () => any = () => { };\n\n\t/**\n\t * Method set in `registerOnChange` to propagate changes back to the form.\n\t */\n\tpropagateChange = (_: any) => { };\n\n\t/**\n\t * Adds `step` to the current `value`.\n\t */\n\tonIncrement(): void {\n\t\tif (this.max === null || this.value + this.step <= this.max) {\n\t\t\tthis.value += this.step;\n\t\t\tthis.value = parseFloat(this.value.toPrecision(this.precision));\n\t\t\tthis.emitChangeEvent();\n\t\t}\n\t}\n\n\t/**\n\t * Subtracts `step` to the current `value`.\n\t */\n\tonDecrement(): void {\n\t\tif (this.min === null || this.value - this.step >= this.min) {\n\t\t\tthis.value -= this.step;\n\t\t\tthis.value = parseFloat(this.value.toPrecision(this.precision));\n\t\t\tthis.emitChangeEvent();\n\t\t}\n\t}\n\n\tgetDecrementLabel(): Observable<string> {\n\t\treturn this._decrementLabel.subject;\n\t}\n\n\tgetIncrementLabel(): Observable<string> {\n\t\treturn this._incrementLabel.subject;\n\t}\n\n\t/**\n\t * Creates a class of `NumberChange` to emit the change in the `Number`.\n\t */\n\temitChangeEvent(): void {\n\t\tlet event = new NumberChange();\n\t\tevent.source = this;\n\t\tevent.value = this.value;\n\t\tthis.change.emit(event);\n\t\tthis.propagateChange(this.value);\n\t}\n\n\tonNumberInputChange(event) {\n\t\tthis.value = event.target.value;\n\t\tthis.emitChangeEvent();\n\t}\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n}\nexport { NumberComponent as Number };\n","// modules\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\n\n// imports\nimport { Number } from \"./number.component\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tNumber\n\t],\n\texports: [\n\t\tNumber\n\t],\n\timports: [\n\t\tFormsModule,\n\t\tCommonModule,\n\t\tI18nModule,\n\t\tIconModule\n\t]\n})\nexport class NumberModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i18n","EventEmitter","TemplateRef","Component","NG_VALUE_ACCESSOR","I18n","HostBinding","Input","Output","HostListener","NgModule","Number","FormsModule","CommonModule","I18nModule","IconModule"],"mappings":"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"}
