{"version":3,"sources":["ng://carbon-components-angular/ui-shell/header/header.component.ts","ng://carbon-components-angular/ui-shell/header/header-item.component.ts","ng://carbon-components-angular/ui-shell/header/header-menu.component.ts","ng://carbon-components-angular/ui-shell/header/header-navigation.component.ts","ng://carbon-components-angular/ui-shell/header/header-global.component.ts","ng://carbon-components-angular/ui-shell/header/header-action.component.ts","ng://carbon-components-angular/ui-shell/header/hamburger.component.ts","ng://carbon-components-angular/ui-shell/header/header.module.ts","ng://carbon-components-angular/ui-shell/sidenav/sidenav.component.ts","ng://carbon-components-angular/ui-shell/sidenav/sidenav-item.component.ts","ng://carbon-components-angular/ui-shell/sidenav/sidenav-menu.component.ts","ng://carbon-components-angular/ui-shell/sidenav/sidenav.module.ts","ng://carbon-components-angular/ui-shell/panel/panel.component.ts","ng://carbon-components-angular/ui-shell/panel/switcher-list.component.ts","ng://carbon-components-angular/ui-shell/panel/switcher-list-item.component.ts","ng://carbon-components-angular/ui-shell/panel/panel.module.ts","ng://carbon-components-angular/ui-shell/ui-shell.module.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOptional,\n\tOutput,\n\tEventEmitter,\n\tTemplateRef\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\nimport { I18n } from \"carbon-components-angular/i18n\";\n\n/**\n * A fixed header and navigation.\n * Header may contain a Hamburger menu to toggle the side navigation, navigation actions,\n * and global actions (generally in the form of `Panel`s).\n *\n * [See demo](../../?path=/story/ui-shell--header)\n *\n * <example-url>../../iframe.html?id=ui-shell--header</example-url>\n */\n@Component({\n\tselector: \"ibm-header\",\n\ttemplate: `\n\t\t<header\n\t\t\tclass=\"bx--header\"\n\t\t\t[attr.aria-label]=\"brand + ' ' + name\">\n\t\t\t<a\n\t\t\t\t*ngIf=\"skipTo\"\n\t\t\t\tclass=\"bx--skip-to-content\"\n\t\t\t\t[href]=\"skipTo\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t{{ i18n.get(\"UI_SHELL.SKIP_TO\") | async }}\n\t\t\t</a>\n\t\t\t<ng-content select=\"ibm-hamburger\"></ng-content>\n\t\t\t<ng-template\n\t\t\t\t*ngIf=\"isTemplate(brand)\"\n\t\t\t\t[ngTemplateOutlet]=\"brand\">\n\t\t\t</ng-template>\n\t\t\t<ng-container *ngIf=\"!isTemplate(brand)\" [ngSwitch]=\"useRouter\">\n\t\t\t\t<a\n\t\t\t\t\t*ngSwitchCase=\"false\"\n\t\t\t\t\tclass=\"bx--header__name\"\n\t\t\t\t\t[href]=\"href\"\n\t\t\t\t\t(click)=\"navigate($event)\">\n\t\t\t\t\t<span class=\"bx--header__name--prefix\">{{brand}}&nbsp;</span>\n\t\t\t\t\t{{name}}\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\t*ngSwitchCase=\"true\"\n\t\t\t\t\tclass=\"bx--header__name\"\n\t\t\t\t\t[routerLink]=\"route\">\n\t\t\t\t\t<span class=\"bx--header__name--prefix\">{{brand}}&nbsp;</span>\n\t\t\t\t\t{{name}}\n\t\t\t\t</a>\n\t\t\t</ng-container>\n\t\t\t<ng-content></ng-content>\n\t\t</header>\n\t`\n})\nexport class Header {\n\t/**\n\t * ID in the main body content to jump to. Used by keyboard and screen reader users to skip the header content.\n\t */\n\t@Input() skipTo: string;\n\t/**\n\t * Label that shows to the right of the `brand` text. Generally a product name.\n\t */\n\t@Input() name: string;\n\t/**\n\t * Top level branding. Defaults to \"IBM\"\n\t */\n\t@Input() brand: string | TemplateRef<any> = \"IBM\";\n\t/**\n\t * Optional link for the header\n\t */\n\t@Input() set href(v: string) {\n\t\tthis._href = v;\n\t}\n\n\tget href() {\n\t\treturn this.domSanitizer.bypassSecurityTrustUrl(this._href) as string;\n\t}\n\n\t/**\n\t * Array of commands to send to the router when the link is activated\n\t * See: https://angular.io/api/router/Router#navigate\n\t */\n\t@Input() route: any[];\n\n\t/**\n\t * Router options. Used in conjunction with `route`\n\t * See: https://angular.io/api/router/Router#navigate\n\t */\n\t@Input() routeExtras: any;\n\n\t/**\n\t * Use the routerLink attribute on <a> tag for navigation instead of using event handlers\n\t */\n\t@Input() useRouter = false;\n\n\t/**\n\t * Emits the navigation status promise when the link is activated\n\t */\n\t@Output() navigation = new EventEmitter<Promise<boolean>>();\n\n\tprotected _href = \"javascript:void(0)\";\n\n\tconstructor(\n\t\tpublic i18n: I18n,\n\t\tprotected domSanitizer: DomSanitizer,\n\t\t@Optional() protected router: Router) { }\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n\n\tnavigate(event) {\n\t\tif (this.router && this.route) {\n\t\t\tevent.preventDefault();\n\t\t\tconst status = this.router.navigate(this.route, this.routeExtras);\n\t\t\tthis.navigation.emit(status);\n\t\t}\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOptional,\n\tEventEmitter,\n\tOutput\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\n\n/**\n * Individual item in the header. May be used a direct child of `HeaderNavigation` or `HeaderMenu`\n */\n@Component({\n\tselector: \"ibm-header-item\",\n\ttemplate: `\n\t\t<li style=\"height: 100%\">\n\t\t\t<ng-container [ngSwitch]=\"useRouter\">\n\t\t\t\t<ng-template #content><ng-content></ng-content></ng-template>\n\t\t\t\t<a\n\t\t\t\t\t*ngSwitchCase=\"false\"\n\t\t\t\t\tclass=\"bx--header__menu-item\"\n\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t[ngClass]=\"{'bx--header__menu-item--current' : isCurrentPage}\"\n\t\t\t\t\t[href]=\"href\"\n\t\t\t\t\t(click)=\"navigate($event)\">\n\t\t\t\t\t<ng-container *ngTemplateOutlet=\"content\"></ng-container>\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\t*ngSwitchCase=\"true\"\n\t\t\t\t\tclass=\"bx--header__menu-item\"\n\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t[routerLinkActive]=\"['bx--header__menu-item--current']\"\n\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t[ngClass]=\"{'bx--header__menu-item--current' : isCurrentPage}\"\n\t\t\t\t\t[routerLink]=\"route\"\n\t\t\t\t\t[routerLinkActive]=\"activeLinkClass\">\n\t\t\t\t\t<ng-container *ngTemplateOutlet=\"content\"></ng-container>\n\t\t\t\t</a>\n\t\t\t</ng-container>\n\t\t</li>\n\t`\n})\nexport class HeaderItem {\n\t@Input() set href(v: string) {\n\t\t// Needed when component is created dynamically with a model.\n\t\tif (v === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._href = v;\n\t}\n\n\tget href() {\n\t\treturn this.domSanitizer.bypassSecurityTrustUrl(this._href) as string;\n\t}\n\n\t/**\n\t * Use the routerLink attribute on <a> tag for navigation instead of using event handlers\n\t */\n\t@Input() useRouter = false;\n\n\t/**\n\t * String or array of string class names to apply when active\n\t */\n\t@Input() activeLinkClass: string | string[];\n\n\t/**\n\t * Applies selected styles to the item if a user sets this to true.\n\t */\n\t@Input() isCurrentPage: boolean;\n\n\t/**\n\t * Array of commands to send to the router when the link is activated\n\t * See: https://angular.io/api/router/Router#navigate\n\t */\n\t@Input() route: any[];\n\n\t/**\n\t * Router options. Used in conjunction with `route`\n\t * See: https://angular.io/api/router/Router#navigate\n\t */\n\t@Input() routeExtras: any;\n\n\t/**\n\t * Emits the navigation status promise when the link is activated\n\t */\n\t@Output() navigation = new EventEmitter<Promise<boolean>>();\n\n\tprotected _href = \"javascript:void(0)\";\n\n\tconstructor(protected domSanitizer: DomSanitizer, @Optional() protected router: Router) { }\n\n\tnavigate(event) {\n\t\tif (this.router && this.route) {\n\t\t\tevent.preventDefault();\n\t\t\tconst status = this.router.navigate(this.route, this.routeExtras);\n\t\t\tthis.navigation.emit(status);\n\t\t}\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tHostListener,\n\tElementRef,\n\tTemplateRef\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { HeaderItemInterface } from \"./header-navigation-items.interface\";\n\n/**\n * Dropdown menu container for navigation items.\n */\n@Component({\n\tselector: \"ibm-header-menu\",\n\ttemplate: `\n\t\t<li\n\t\t\tclass=\"bx--header__submenu\"\n\t\t\tstyle=\"height: 100%\">\n\t\t\t<a\n\t\t\t\tclass=\"bx--header__menu-item bx--header__menu-title\"\n\t\t\t\t[href]=\"href\"\n\t\t\t\trole=\"menuitem\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t[attr.aria-expanded]=\"expanded\">\n\t\t\t\t{{title}}\n\t\t\t\t<ng-template *ngIf=\"icon; else defaultIcon\" [ngTemplateOutlet]=\"icon\"></ng-template>\n\t\t\t\t<ng-template #defaultIcon>\n\t\t\t\t\t<svg class=\"bx--header__menu-arrow\" width=\"12\" height=\"7\" aria-hidden=\"true\">\n\t\t\t\t\t\t<path d=\"M6.002 5.55L11.27 0l.726.685L6.003 7 0 .685.726 0z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</ng-template>\n\t\t\t</a>\n\t\t\t<ul class=\"bx--header__menu\" role=\"menu\" [attr.aria-label]=\"title\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t\t<ng-container *ngFor=\"let headerItem of headerItems\">\n\t\t\t\t\t<ibm-header-item\n\t\t\t\t\t\t[href]=\"headerItem.href\"\n\t\t\t\t\t\t[route]=\"headerItem.route\"\n\t\t\t\t\t\t[routeExtras]=\"headerItem.routeExtras\">\n\t\t\t\t\t\t{{ headerItem.content }}\n\t\t\t\t\t</ibm-header-item>\n\t\t\t\t</ng-container>\n\t\t\t</ul>\n\t\t</li>\n\t`\n})\nexport class HeaderMenu {\n\t@Input() title: string;\n\t@Input() set href(v: string) {\n\t\t// Needed when component is created dynamically with a model.\n\t\tif (v === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._href = v;\n\t}\n\n\tget href() {\n\t\treturn this.domSanitizer.bypassSecurityTrustUrl(this._href) as string;\n\t}\n\t@Input() trigger: \"click\" | \"mouseover\" = \"click\";\n\n\t/**\n\t * Used to create header items through a model.\n\t */\n\t@Input() headerItems: HeaderItemInterface[];\n\n\t/**\n\t * Optional icon\n\t */\n\t@Input() icon: TemplateRef<any>;\n\n\tpublic expanded = false;\n\n\tprotected _href = \"javascript:void(0)\";\n\n\tconstructor(protected domSanitizer: DomSanitizer, protected elementRef: ElementRef) { }\n\n\t@HostListener(\"click\")\n\tonClick() {\n\t\tif (this.trigger === \"click\") {\n\t\t\tthis.expanded = !this.expanded;\n\t\t}\n\t}\n\n\t@HostListener(\"mouseover\")\n\tonMouseOver() {\n\t\tif (this.trigger === \"mouseover\") {\n\t\t\tthis.expanded = true;\n\t\t}\n\t}\n\n\t@HostListener(\"mouseout\")\n\tonMouseOut() {\n\t\tif (this.trigger === \"mouseover\") {\n\t\t\tthis.expanded = false;\n\t\t}\n\t}\n\n\t@HostListener(\"focusout\", [\"$event\"])\n\tonFocusOut(event) {\n\t\tif (!this.elementRef.nativeElement.contains(event.relatedTarget)) {\n\t\t\tthis.expanded = false;\n\t\t}\n\t}\n}\n","import {\n\tComponent,\n\tHostBinding,\n\tInput\n} from \"@angular/core\";\nimport { NavigationItem } from \"./header-navigation-items.interface\";\n/**\n * Container for header navigation items\n */\n@Component({\n\tselector: \"ibm-header-navigation\",\n\ttemplate: `\n\t\t<nav class=\"bx--header__nav\" [attr.aria-label]=\"ariaLabel\">\n\t\t\t<ul class=\"bx--header__menu-bar\" role=\"menubar\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t\t<ng-container *ngFor=\"let navigationItem of navigationItems\">\n\t\t\t\t\t<ibm-header-item\n\t\t\t\t\t\t*ngIf=\"navigationItem.type === 'item'\"\n\t\t\t\t\t\t[href]=\"navigationItem.href\"\n\t\t\t\t\t\t[route]=\"navigationItem.route\"\n\t\t\t\t\t\t[routeExtras]=\"navigationItem.routeExtras\">\n\t\t\t\t\t\t{{ navigationItem.content }}\n\t\t\t\t\t</ibm-header-item>\n\t\t\t\t\t<ibm-header-menu\n\t\t\t\t\t\t*ngIf=\"navigationItem.type === 'menu'\"\n\t\t\t\t\t\t[href]=\"navigationItem.href\"\n\t\t\t\t\t\t[title]=\"navigationItem.title\"\n\t\t\t\t\t\t[trigger]=\"navigationItem.trigger ? navigationItem.trigger : 'click'\"\n\t\t\t\t\t\t[headerItems]=\"navigationItem.menuItems\">\n\t\t\t\t\t</ibm-header-menu>\n\t\t\t\t</ng-container>\n\t\t\t</ul>\n\t\t</nav>\n\t`\n})\nexport class HeaderNavigation {\n\t@HostBinding(\"style.height.%\") height = 100;\n\n\t@Input() ariaLabel: string;\n\n\t/**\n\t * Creates the header navigation items and menu items through a list of navigation item objects.\n\t * In order for the navigation items to move to the side navigation when window size is less than 1056px,\n\t * navigation items need to be passed into both ibm-header-navigation and ibm-sidenav.\n\t */\n\t@Input() navigationItems: NavigationItem[];\n}\n","import { Component, HostBinding } from \"@angular/core\";\n\n/**\n * Container for `HeaderAction`s.\n */\n@Component({\n\tselector: \"ibm-header-global\",\n\ttemplate: `\n\t\t<ng-content></ng-content>\n\t`\n})\nexport class HeaderGlobal {\n\t@HostBinding(\"class.bx--header__global\") hostClass = true;\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\n\n/**\n * Contained by `HeaderGlobal`. Generally used to trigger `Panel`s\n */\n@Component({\n\tselector: \"ibm-header-action\",\n\ttemplate: `\n\t\t<button\n\t\t\tclass=\"bx--header__action\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--header__action--active': active\n\t\t\t}\"\n\t\t\t[title]=\"title\"\n\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t(click)=\"onClick()\">\n\t\t\t<ng-content></ng-content>\n\t\t</button>\n\t`\n})\nexport class HeaderAction {\n\t/**\n\t * Title. Populates the aria-label as well as the browser `title` tooltip\n\t */\n\t@Input() title = \"\";\n\t/**\n\t * Sets the aria label on the nav element.\n\t */\n\t@Input() ariaLabel: string;\n\t/**\n\t * Toggles the active state. May be used to toggle a `Panel`s active state.\n\t */\n\t@Input() active = false;\n\t/**\n\t * \"Change\" emitter to allow double binding to the `active` Input.\n\t */\n\t@Output() activeChange = new EventEmitter<boolean>();\n\t/**\n\t * Emits when the action has been clicked.\n\t */\n\t@Output() selected = new EventEmitter<boolean>();\n\n\tonClick() {\n\t\tthis.active = !this.active;\n\t\tthis.selected.emit(this.active);\n\t\tthis.activeChange.emit(this.active);\n\t}\n}\n","import {\n\tComponent,\n\tOutput,\n\tEventEmitter,\n\tInput\n} from \"@angular/core\";\nimport { I18n } from \"carbon-components-angular/i18n\";\n\n/**\n * A toggle for the side navigation\n */\n@Component({\n\tselector: \"ibm-hamburger\",\n\ttemplate: `\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\t(click)=\"doClick()\"\n\t\t\t[ngClass]=\"{'bx--header__action--active': active}\"\n\t\t\tclass=\"bx--header__menu-trigger bx--header__action bx--header__menu-toggle\"\n\t\t\t[attr.aria-label]=\"active\n\t\t\t\t? (i18n.get('UI_SHELL.HEADER.CLOSE_MENU') | async)\n\t\t\t\t: (i18n.get('UI_SHELL.HEADER.OPEN_MENU') | async)\"\n\t\t\t[attr.title]=\"active\n\t\t\t\t? (i18n.get('UI_SHELL.HEADER.CLOSE_MENU') | async)\n\t\t\t\t: (i18n.get('UI_SHELL.HEADER.OPEN_MENU') | async)\">\n\t\t\t<svg *ngIf=\"!active\" ibmIcon=\"menu\" size=\"20\"></svg>\n\t\t\t<svg *ngIf=\"active\" ibmIcon=\"close\" size=\"20\"></svg>\n\t\t</button>\n\t`\n})\nexport class Hamburger {\n\t/**\n\t * Controls the active/selected state for the `Hamburger` menu.\n\t */\n\t@Input() active = false;\n\n\t/**\n\t * `EventEmitter` to notify parent components of menu click events.\n\t */\n\t@Output() selected: EventEmitter<Object> = new EventEmitter<Object>();\n\n\tconstructor(public i18n: I18n) { }\n\n\t/**\n\t * Emit the Hamburger click event upwards.\n\t */\n\tpublic doClick() {\n\t\tthis.selected.emit(this.active);\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\nimport { Header } from \"./header.component\";\nimport { HeaderItem } from \"./header-item.component\";\nimport { HeaderMenu } from \"./header-menu.component\";\nimport { HeaderNavigation } from \"./header-navigation.component\";\nimport { HeaderGlobal } from \"./header-global.component\";\nimport { HeaderAction } from \"./header-action.component\";\n\nimport { Hamburger } from \"./hamburger.component\";\nimport { RouterModule } from \"@angular/router\";\n\nexport { HeaderItemInterface, NavigationItem } from \"./header-navigation-items.interface\";\n\nexport {\n\tHeader,\n\tHeaderItem,\n\tHeaderMenu,\n\tHeaderNavigation,\n\tHeaderGlobal,\n\tHeaderAction,\n\tHamburger\n};\n\n@NgModule({\n\tdeclarations: [\n\t\tHeader,\n\t\tHeaderItem,\n\t\tHeaderMenu,\n\t\tHeaderNavigation,\n\t\tHeaderGlobal,\n\t\tHeaderAction,\n\t\tHamburger\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tI18nModule,\n\t\tIconModule,\n\t\tRouterModule\n\t],\n\texports: [\n\t\tHeader,\n\t\tHeaderItem,\n\t\tHeaderMenu,\n\t\tHeaderNavigation,\n\t\tHeaderGlobal,\n\t\tHeaderAction,\n\t\tHamburger\n\t]\n})\nexport class HeaderModule { }\n","import {\n\tComponent,\n\tHostBinding,\n\tInput,\n\tViewEncapsulation\n} from \"@angular/core\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { NavigationItem } from \"../header/header-navigation-items.interface\";\n\n/**\n * `Sidenav` is a fixed left navigation that may contain `SideNavItem`s or `SideNavMenu`s\n *\n * [See demo](../../?path=/story/ui-shell--side-navigation)\n *\n * <example-url>../../iframe.html?id=ui-shell--side-navigation</example-url>\n */\n@Component({\n\tselector: \"ibm-sidenav\",\n\ttemplate: `\n\t\t<nav class=\"bx--side-nav__navigation\" role=\"navigation\" [attr.aria-label]=\"ariaLabel\">\n\t\t\t<ng-content select=\"ibm-sidenav-header\"></ng-content>\n\t\t\t<ul class=\"bx--side-nav__items\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bx--side-nav__header-navigation bx--side-nav__header-divider\">\n\t\t\t\t\t<ng-container *ngFor=\"let navigationItem of navigationItems\">\n\t\t\t\t\t\t<ibm-sidenav-item\n\t\t\t\t\t\t\t*ngIf=\"navigationItem.type === 'item'\"\n\t\t\t\t\t\t\t[href]=\"navigationItem.href\"\n\t\t\t\t\t\t\t[route]=\"navigationItem.route\"\n\t\t\t\t\t\t\t[routeExtras]=\"navigationItem.routeExtras\">\n\t\t\t\t\t\t\t{{ navigationItem.content }}\n\t\t\t\t\t\t</ibm-sidenav-item>\n\t\t\t\t\t\t<ibm-sidenav-menu\n\t\t\t\t\t\t\t*ngIf=\"navigationItem.type === 'menu'\"\n\t\t\t\t\t\t\t[title]=\"navigationItem.title\"\n\t\t\t\t\t\t\t[menuItems]=\"navigationItem.menuItems\">\n\t\t\t\t\t\t</ibm-sidenav-menu>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</ul>\n\t\t\t<footer class=\"bx--side-nav__footer\">\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"allowExpansion\"\n\t\t\t\t\tclass=\"bx--side-nav__toggle\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t[title]=\"(expanded ? i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_CLOSE') : i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_OPEN')) | async\"\n\t\t\t\t\t(click)=\"toggle()\">\n\t\t\t\t\t<div class=\"bx--side-nav__icon\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t*ngIf=\"expanded\"\n\t\t\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t\t\t\tstyle=\"will-change: transform;\"\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\twidth=\"20\"\n\t\t\t\t\t\t\theight=\"20\"\n\t\t\t\t\t\t\tviewBox=\"0 0 32 32\"\n\t\t\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t\t\t<path d=\"M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4l6.6 6.6L8 22.6 9.4 24l6.6-6.6 6.6 6.6 1.4-1.4-6.6-6.6L24 9.4z\"></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t*ngIf=\"!expanded\"\n\t\t\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t\t\t\tstyle=\"will-change: transform;\"\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\twidth=\"20\"\n\t\t\t\t\t\t\theight=\"20\"\n\t\t\t\t\t\t\tviewBox=\"0 0 32 32\"\n\t\t\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t\t\t<path d=\"M22 16L12 26l-1.4-1.4 8.6-8.6-8.6-8.6L12 6z\"></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"bx--assistive-text\">\n\t\t\t\t\t\t{{(expanded ? i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_CLOSE') : i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_OPEN')) | async}}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t</footer>\n\t\t</nav>\n\t`,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SideNav {\n\t@HostBinding(\"attr.role\") role = \"complementary\";\n\t@HostBinding(\"class.bx--side-nav\") hostClass = true;\n\t@HostBinding(\"attr.aria-label\") @Input() ariaLabel = \"Side navigation\";\n\t/**\n\t * Controls the expanded (`true`) or collapsed (`false`) state when on a small screen.\n\t */\n\t@HostBinding(\"class.bx--side-nav--expanded\") @Input() expanded = true;\n\t/**\n\t * Controls the hidden (`true`) or visible (`false`) state\n\t */\n\t@HostBinding(\"class.bx--side-nav--hidden\") @Input() hidden = false;\n\t@HostBinding(\"class.bx--side-nav--rail\") @Input() rail = false;\n\t@HostBinding(\"class.bx--side-nav--ux\") ux = true;\n\t@Input() allowExpansion = false;\n\n\t/**\n\t * NavigationItems from the header navigation component which are displayed on the sidenav when the window\n\t * innerWidth is small enough. Sidenav items and menus are created using the model used to create header\n\t * navigation items.\n\t */\n\t@Input() navigationItems: NavigationItem[];\n\n\tconstructor(public i18n: I18n) { }\n\n\ttoggle() {\n\t\tthis.expanded = !this.expanded;\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOptional,\n\tOutput,\n\tEventEmitter,\n\tOnChanges\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\n\n/**\n * `SideNavItem` can either be a child of `SideNav` or `SideNavMenu`\n */\n@Component({\n\tselector: \"ibm-sidenav-item\",\n\ttemplate: `\n\t\t<li [ngClass]=\"{\n\t\t\t'bx--side-nav__item': !isSubMenu,\n\t\t\t'bx--side-nav__menu-item': isSubMenu\n\t\t}\"\n\t\t[attr.role]=\"(isSubMenu ? 'listitem' : null)\">\n\t\t\t<a\n\t\t\t\tclass=\"bx--side-nav__link\"\n\t\t\t\t[href]=\"href\"\n\t\t\t\t[attr.role]=\"(isSubMenu ? 'menuitem' : null)\"\n\t\t\t\t[attr.aria-current]=\"(active ? 'page' : null)\"\n\t\t\t\t[title]=\"title\"\n\t\t\t\t(click)=\"navigate($event)\">\n\t\t\t\t<div *ngIf=\"!isSubMenu\" class=\"bx--side-nav__icon\">\n\t\t\t\t\t<ng-content select=\"svg, [icon]\"></ng-content>\n\t\t\t\t</div>\n\t\t\t\t<span class=\"bx--side-nav__link-text\">\n\t\t\t\t\t<ng-content></ng-content>\n\t\t\t\t</span>\n\t\t\t</a>\n\t\t</li>\n\t`\n})\nexport class SideNavItem implements OnChanges {\n\t/**\n\t * Link for the item. NOTE: *do not* pass unsafe or untrusted values, this has the potential to open you up to XSS attacks\n\t */\n\t@Input() set href(v: string) {\n\t\t// Needed when component is created dynamically with a model.\n\t\tif (v === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._href = v;\n\t}\n\n\tget href() {\n\t\treturn this.domSanitizer.bypassSecurityTrustUrl(this._href) as string;\n\t}\n\n\t/**\n\t * Toggles the active (current page) state for the link.\n\t */\n\t@Input() active = false;\n\n\t/**\n\t * Array of commands to send to the router when the link is activated\n\t * See: https://angular.io/api/router/Router#navigate\n\t */\n\t@Input() route: any[];\n\n\t@Input() isSubMenu = false;\n\n\t/**\n\t * Router options. Used in conjunction with `route`\n\t * See: https://angular.io/api/router/Router#navigate\n\t */\n\t@Input() routeExtras: any;\n\n\t/**\n\t * Title attribute of the anchor element.\n\t */\n\t@Input() title: string;\n\n\t/**\n\t * Emits the navigation status promise when the link is activated\n\t */\n\t@Output() navigation = new EventEmitter<Promise<boolean>>();\n\n\t/**\n\t * Emits when `active` input is changed. This is mainly used to indicate to any parent menu items that a\n\t * child sidenav item is active or not active.\n\t */\n\t@Output() selected = new EventEmitter<boolean>();\n\n\tprotected _href = \"javascript:void(0)\";\n\n\tconstructor(protected domSanitizer: DomSanitizer, @Optional() protected router: Router) {}\n\n\tngOnChanges(changes) {\n\t\tif (changes.active) {\n\t\t\tthis.selected.emit(this.active);\n\t\t}\n\t}\n\n\tnavigate(event) {\n\t\tif (this.router && this.route) {\n\t\t\tevent.preventDefault();\n\t\t\tconst status = this.router.navigate(this.route, this.routeExtras);\n\t\t\tthis.navigation.emit(status);\n\t\t}\n\t}\n}\n","import {\n\tAfterContentInit,\n\tComponent,\n\tContentChildren,\n\tInput,\n\tQueryList,\n\tOnDestroy\n} from \"@angular/core\";\nimport { SideNavItem } from \"./sidenav-item.component\";\nimport { Subscription } from \"rxjs\";\nimport { SideNavItemInterface } from \"./sidenav-item.interface\";\n\n\n/**\n * `SideNavMenu` provides a method to group `SideNavItem`s under a common heading.\n */\n@Component({\n\tselector: \"ibm-sidenav-menu\",\n\ttemplate: `\n\t\t<li\n\t\t\tclass=\"bx--side-nav__item bx--side-nav__item--icon\"\n\t\t\t[ngClass]=\"{ 'bx--side-nav__item--active': hasActiveChild }\">\n\t\t\t<button\n\t\t\t\t(click)=\"toggle()\"\n\t\t\t\tclass=\"bx--side-nav__submenu\"\n\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t[attr.aria-expanded]=\"expanded\"\n\t\t\t\ttype=\"button\">\n\t\t\t\t<div class=\"bx--side-nav__icon\">\n\t\t\t\t\t<ng-content select=\"[icon]\"></ng-content>\n\t\t\t\t</div>\n\t\t\t\t<span class=\"bx--side-nav__submenu-title\">{{title}}</span>\n\t\t\t\t<div class=\"bx--side-nav__icon bx--side-nav__icon--small bx--side-nav__submenu-chevron\">\n\t\t\t\t\t<svg\n\t\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t\t\tstyle=\"will-change: transform;\"\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\twidth=\"20\"\n\t\t\t\t\t\theight=\"20\"\n\t\t\t\t\t\tviewBox=\"0 0 32 32\"\n\t\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t\t<path d=\"M16 22L6 12l1.4-1.4 8.6 8.6 8.6-8.6L26 12z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t\t<ul class=\"bx--side-nav__menu\" role=\"menu\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t\t<ng-container *ngFor=\"let menuItem of menuItems\">\n\t\t\t\t\t<ibm-sidenav-item\n\t\t\t\t\t\t[href]=\"menuItem.href\"\n\t\t\t\t\t\t[route]=\"menuItem.route\"\n\t\t\t\t\t\t[routeExtras]=\"menuItem.routeExtras\"\n\t\t\t\t\t\t[isSubMenu]=\"true\">\n\t\t\t\t\t\t{{ menuItem.content }}\n\t\t\t\t\t</ibm-sidenav-item>\n\t\t\t\t</ng-container>\n\t\t\t</ul>\n\t\t</li>\n\t`\n})\nexport class SideNavMenu implements AfterContentInit, OnDestroy {\n\t/**\n\t * Heading for the gorup\n\t */\n\t@Input() title: string;\n\t/**\n\t * Controls the visibility of the child `SideNavItem`s\n\t */\n\t@Input() expanded = false;\n\t/**\n\t * Controls the active status indicator on the menu if there is an active\n\t * child sidenav item.\n\t */\n\t@Input() hasActiveChild = false;\n\n\t@Input() menuItems: SideNavItemInterface[];\n\n\t@ContentChildren(SideNavItem) sidenavItems: QueryList<SideNavItem>;\n\n\tprotected activeItemsSubscription = new Subscription();\n\n\tngAfterContentInit() {\n\t\tsetTimeout(() => {\n\t\t\tthis.sidenavItems.forEach(item => {\n\t\t\t\titem.isSubMenu = true;\n\t\t\t\tthis.findActiveChildren();\n\t\t\t\tconst activeItemSubscription = item.selected.subscribe(() => {\n\t\t\t\t\tthis.findActiveChildren();\n\t\t\t\t});\n\t\t\t\tthis.activeItemsSubscription.add(activeItemSubscription);\n\t\t\t});\n\n\t\t\tthis.sidenavItems.changes.subscribe(() => {\n\t\t\t\tthis.sidenavItems.forEach(item => {\n\t\t\t\t\titem.isSubMenu = true;\n\t\t\t\t\tthis.findActiveChildren();\n\t\t\t\t\tconst activeItemSubscription = item.selected.subscribe(() => {\n\t\t\t\t\t\tthis.findActiveChildren();\n\t\t\t\t\t});\n\t\t\t\t\tthis.activeItemsSubscription.add(activeItemSubscription);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.activeItemsSubscription.unsubscribe();\n\t}\n\n\ttoggle() {\n\t\tthis.expanded = !this.expanded;\n\t}\n\n\tprotected findActiveChildren() {\n\t\tif (this.sidenavItems.some(item => item.active)) {\n\t\t\tthis.hasActiveChild = true;\n\t\t} else {\n\t\t\tthis.hasActiveChild = false;\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { I18nModule } from \"carbon-components-angular/i18n\";\n\nimport { SideNav } from \"./sidenav.component\";\nimport { SideNavItem } from \"./sidenav-item.component\";\nimport { SideNavMenu } from \"./sidenav-menu.component\";\n\nexport { SideNavItemInterface } from \"./sidenav-item.interface\";\n\nexport {\n\tSideNav,\n\tSideNavItem,\n\tSideNavMenu\n};\n\n@NgModule({\n\tdeclarations: [\n\t\tSideNav,\n\t\tSideNavItem,\n\t\tSideNavMenu\n\t],\n\timports: [CommonModule, I18nModule],\n\texports: [\n\t\tSideNav,\n\t\tSideNavItem,\n\t\tSideNavMenu\n\t]\n})\nexport class SideNavModule { }\n","import { Component, Input } from \"@angular/core\";\n\n/**\n * `Panel` is a component that can be used to display content on the right side of the screen.\n * `Panel`s are generally activated by and linked to a `HeaderAction` component.\n */\n@Component({\n\tselector: \"ibm-panel\",\n\ttemplate: `\n\t\t<div\n\t\t\tclass=\"bx--panel--overlay\"\n\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--panel--expanded': expanded\n\t\t\t}\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t`\n})\nexport class Panel {\n\t/**\n\t * Controls the visibility of the panel\n\t */\n\t@Input() expanded = false;\n\n\t@Input() ariaLabel = \"Header panel\";\n}\n","import { Component } from \"@angular/core\";\n\n/**\n * Container for switcher items.\n *\n * ```html\n * <ibm-switcher-list>\n * \t<ibm-switcher-list-item>one</ibm-switcher-list-item>\n * \t<ibm-switcher-list-item [active]=\"true\">two</ibm-switcher-list-item>\n * \t<ibm-switcher-list-item>three</ibm-switcher-list-item>\n * </ibm-switcher-list>\n * ```\n */\n@Component({\n\tselector: \"ibm-switcher-list\",\n\ttemplate: `\n\t\t<ul class=\"bx--switcher\">\n\t\t\t<ng-content></ng-content>\n\t\t</ul>\n\t`\n})\nexport class SwitcherList {}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tOptional,\n\tHostBinding\n} from \"@angular/core\";\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\n\n/**\n * Represents an item in a switcher list.\n */\n@Component({\n\tselector: \"ibm-switcher-list-item\",\n\ttemplate: `\n\t\t<a\n\t\t\tclass=\"bx--switcher__item-link\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--switcher__item-link--selected': active\n\t\t\t}\"\n\t\t\t[href]=\"href\"\n\t\t\t[target]=\"target\"\n\t\t\t(click)=\"navigate($event)\">\n\t\t\t<ng-content></ng-content>\n\t\t</a>\n\t`\n})\nexport class SwitcherListItem {\n\t/**\n\t * Enables the \"active\" state for an item. Commonly used to indicate the current page or selection.\n\t */\n\t@Input() active = false;\n\n\t/**\n\t * Array of commands to send to the router when the link is activated\n\t * See: https://angular.io/api/router/Router#navigate\n\t */\n\t@Input() route: any[];\n\n\t/**\n\t * Router options. Used in conjunction with `route`\n\t * See: https://angular.io/api/router/Router#navigate\n\t */\n\t@Input() routeExtras: any;\n\n\t/**\n\t * Optional link for the underlying anchor.\n\t */\n\t@Input() set href(value: string) {\n\t\tthis._href = value;\n\t}\n\n\t/**\n\t * Emits the navigation status promise when the link is activated\n\t */\n\t@Output() navigation = new EventEmitter<Promise<boolean>>();\n\n\tget href() {\n\t\treturn this.domSanitizer.bypassSecurityTrustUrl(this._href) as string;\n\t}\n\n\t/**\n\t * Optional target for the underlying anchor.\n\t */\n\t@Input() set target(value: string) {\n\t\tthis._target = value;\n\t}\n\n\tget target() {\n\t\treturn this._target;\n\t}\n\n\t@HostBinding(\"class.bx--switcher__item\") itemClass = true;\n\n\t@HostBinding(\"attr.role\") itemRole = \"listitem\";\n\n\tprotected _href = \"javascript:void(0)\";\n\tprotected _target = \"\";\n\n\tconstructor(protected domSanitizer: DomSanitizer, @Optional() protected router: Router) { }\n\n\tnavigate(event) {\n\t\tif (this.router && this.route) {\n\t\t\tevent.preventDefault();\n\t\t\tconst status = this.router.navigate(this.route, this.routeExtras);\n\t\t\tthis.navigation.emit(status);\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { I18nModule } from \"carbon-components-angular/i18n\";\n\nimport { Panel } from \"./panel.component\";\nimport { SwitcherList } from \"./switcher-list.component\";\nimport { SwitcherListItem } from \"./switcher-list-item.component\";\n\nexport {\n\tPanel,\n\tSwitcherList,\n\tSwitcherListItem\n};\n\n@NgModule({\n\tdeclarations: [\n\t\tPanel,\n\t\tSwitcherList,\n\t\tSwitcherListItem\n\t],\n\timports: [CommonModule, I18nModule],\n\texports: [\n\t\tPanel,\n\t\tSwitcherList,\n\t\tSwitcherListItem\n\t]\n})\nexport class PanelModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { I18nModule } from \"carbon-components-angular/i18n\";\n\nimport { HeaderModule } from \"./header/header.module\";\nimport { SideNavModule } from \"./sidenav/sidenav.module\";\nimport { PanelModule } from \"./panel/panel.module\";\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tI18nModule,\n\t\tHeaderModule,\n\t\tSideNavModule,\n\t\tPanelModule\n\t],\n\texports: [\n\t\tHeaderModule,\n\t\tSideNavModule,\n\t\tPanelModule\n\t]\n})\nexport class UIShellModule { }\n"],"names":["Header","Object","defineProperty","prototype","this","domSanitizer","bypassSecurityTrustUrl","_href","v","isTemplate","value","TemplateRef","navigate","event","status_1","router","route","preventDefault","routeExtras","navigation","emit","Component","args","selector","template","I18n","DomSanitizer","Router","decorators","type","Optional","Input","Output","i18n","brand","useRouter","EventEmitter","HeaderItem","undefined","HeaderMenu","onClick","trigger","expanded","onMouseOver","onMouseOut","onFocusOut","elementRef","nativeElement","contains","relatedTarget","ElementRef","HostListener","HeaderNavigation","HostBinding","height","HeaderGlobal","hostClass","HeaderAction","active","selected","activeChange","title","Hamburger","doClick","NgModule","declarations","imports","CommonModule","I18nModule","IconModule","RouterModule","exports","HeaderModule","SideNav","toggle","encapsulation","ViewEncapsulation","None","role","ariaLabel","hidden","rail","ux","allowExpansion","SideNavItem","ngOnChanges","changes","isSubMenu","SideNavMenu","ngAfterContentInit","_this","setTimeout","sidenavItems","forEach","item","findActiveChildren","activeItemSubscription","subscribe","activeItemsSubscription","add","ngOnDestroy","unsubscribe","some","hasActiveChild","ContentChildren","Subscription","SideNavModule","Panel","SwitcherList","SwitcherListItem","_target","itemClass","itemRole","PanelModule","UIShellModule"],"mappings":"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"}