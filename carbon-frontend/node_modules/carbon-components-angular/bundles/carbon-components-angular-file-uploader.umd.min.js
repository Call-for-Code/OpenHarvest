/**
 *
 * carbon-angular v0.0.0 | carbon-components-angular-file-uploader.umd.min.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/forms"),require("carbon-components-angular/i18n"),require("@angular/core"),require("@angular/common"),require("carbon-components-angular/button"),require("carbon-components-angular/loading"),require("carbon-components-angular/icon")):"function"==typeof define&&define.amd?define("carbon-components-angular/file-uploader",["exports","@angular/forms","carbon-components-angular/i18n","@angular/core","@angular/common","carbon-components-angular/button","carbon-components-angular/loading","carbon-components-angular/icon"],e):e((t["carbon-components-angular"]=t["carbon-components-angular"]||{},t["carbon-components-angular"]["file-uploader"]={}),t.ng.forms,t["carbon-components-angular"].i18n,t.ng.core,t.ng.common,t["carbon-components-angular"].button,t["carbon-components-angular"].loading,t["carbon-components-angular"].icon)}(this,function(t,e,n,i,o,l,a,r){"use strict";var s=function(){},p=(Object.defineProperty(c.prototype,"value",{get:function(){return this.files},set:function(t){t!==this.files&&(this.files=t,this.onChangeCallback(t))},enumerable:!0,configurable:!0}),c.prototype.onBlur=function(){this.onTouchedCallback()},Object.defineProperty(c.prototype,"fileList",{get:function(){return Array.from(this.fileInput.nativeElement.files)},enumerable:!0,configurable:!0}),c.prototype.writeValue=function(t){t!==this.value&&(this.files=t)},c.prototype.createFileItem=function(t){return{uploaded:!1,state:"edit",invalid:!1,invalidText:"",file:t}},c.prototype.onFilesAdded=function(){var t,e,n,i,o;this.multiple||this.files.clear();try{for(var l=(n=this.fileList,i="function"==typeof Symbol&&n[Symbol.iterator],o=0,i?i.call(n):{next:function(){return n&&o>=n.length&&(n=void 0),{value:n&&n[o++],done:!n}}}),a=l.next();!a.done;a=l.next()){var r=a.value,s=this.createFileItem(r);this.files.add(s)}}catch(p){t={error:p}}finally{try{a&&!a.done&&(e=l["return"])&&e.call(l)}finally{if(t)throw t.error}}this.filesChange.emit(this.files),this.value=this.files},c.prototype.onDragOver=function(t){t.stopPropagation(),t.preventDefault(),this.dragOver=!0},c.prototype.onDragLeave=function(t){t.stopPropagation(),t.preventDefault(),this.dragOver=!1},c.prototype.onDrop=function(t){var o=this;t.stopPropagation(),t.preventDefault(),Array.from(t.dataTransfer.files).filter(function(t){var e=t.name,n=t.type,i=e.split(".").pop().replace(/^/,".");return o.accept.includes(n)||o.accept.includes(i)||!o.accept.length}).forEach(function(t){var e;o.files.size&&!o.multiple||(e=o.createFileItem(t),o.files.add(e))}),this.filesChange.emit(this.files),this.value=this.files,this.dragOver=!1},c.prototype.removeFile=function(t){this.files&&this.files["delete"](t),this.fileInput.nativeElement.value="",this.filesChange.emit(this.files)},c.prototype.isTemplate=function(t){return t instanceof i.TemplateRef},c.prototype.registerOnTouched=function(t){this.onTouchedCallback=t},c.prototype.registerOnChange=function(t){this.onChangeCallback=t},c.fileUploaderCount=0,c.decorators=[{type:i.Component,args:[{selector:"ibm-file-uploader",template:'\n\t\t<ng-container *ngIf="!skeleton; else skeletonTemplate">\n\t\t\t<label [for]="fileUploaderId" class="bx--file--label">{{title}}</label>\n\t\t\t<p class="bx--label-description">{{description}}</p>\n\t\t\t<div class="bx--file">\n\t\t\t\t<label\n\t\t\t\t\t*ngIf="drop"\n\t\t\t\t\tclass="bx--file-browse-btn"\n\t\t\t\t\t(keyup.enter)="fileInput.click()"\n\t\t\t\t\t(keyup.space)="fileInput.click()"\n\t\t\t\t\t[ngClass]="{\'bx--file-browse-btn--disabled\': disabled}"\n\t\t\t\t\ttabindex="0">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass="bx--file__drop-container"\n\t\t\t\t\t\t[ngClass]="{\'bx--file__drop-container--drag-over\': dragOver}"\n\t\t\t\t\t\trole="button"\n\t\t\t\t\t\t(click)="fileInput.click()"\n\t\t\t\t\t\t[attr.for]="fileUploaderId"\n\t\t\t\t\t\t(dragover)="onDragOver($event)"\n\t\t\t\t\t\t(dragleave)="onDragLeave($event)"\n\t\t\t\t\t\t(drop)="onDrop($event)">\n\t\t\t\t\t\t<ng-container *ngIf="!isTemplate(dropText)">{{dropText}}</ng-container>\n\t\t\t\t\t\t<ng-template *ngIf="isTemplate(dropText)" [ngTemplateOutlet]="dropText"></ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t\t<button\n\t\t\t\t\t*ngIf="!drop"\n\t\t\t\t\ttype="button"\n\t\t\t\t\t[ibmButton]="buttonType"\n\t\t\t\t\t(click)="fileInput.click()"\n\t\t\t\t\t[attr.for]="fileUploaderId"\n\t\t\t\t\t[size]="size"\n\t\t\t\t\t[disabled]="disabled">\n\t\t\t\t\t{{buttonText}}\n\t\t\t\t</button>\n\t\t\t\t<input\n\t\t\t\t\t#fileInput\n\t\t\t\t\ttype="file"\n\t\t\t\t\tclass="bx--file-input"\n\t\t\t\t\t[accept]="accept"\n\t\t\t\t\t[id]="fileUploaderId"\n\t\t\t\t\t[multiple]="multiple"\n\t\t\t\t\ttabindex="-1"\n\t\t\t\t\t(change)="onFilesAdded()"\n\t\t\t\t\t[disabled]="disabled"/>\n\t\t\t\t<div class="bx--file-container">\n\t\t\t\t\t<ng-container *ngFor="let fileItem of files">\n\t\t\t\t\t\t<ibm-file [fileItem]="fileItem" (remove)="removeFile(fileItem)"></ibm-file>\n\t\t\t\t\t\t<div *ngIf="fileItem.invalid" class="bx--form-requirement">\n\t\t\t\t\t\t\t{{fileItem.invalidText}}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #skeletonTemplate>\n\t\t\t<div class="bx--skeleton__text" style="width: 100px"></div>\n\t\t\t<div class="bx--skeleton__text" style="width: 225px"></div>\n\t\t\t<button ibmButton skeleton="true"></button>\n\t\t</ng-template>\n\t',providers:[{provide:e.NG_VALUE_ACCESSOR,useExisting:c,multi:!0}]}]}],c.ctorParameters=function(){return[{type:n.I18n}]},c.propDecorators={buttonText:[{type:i.Input}],buttonType:[{type:i.Input}],title:[{type:i.Input}],description:[{type:i.Input}],accept:[{type:i.Input}],multiple:[{type:i.Input}],skeleton:[{type:i.Input}],size:[{type:i.Input}],drop:[{type:i.Input}],dropText:[{type:i.Input}],fileUploaderId:[{type:i.Input}],fileInput:[{type:i.ViewChild,args:["fileInput",{"static":!1}]}],files:[{type:i.Input}],disabled:[{type:i.Input}],filesChange:[{type:i.Output}]},c);function c(t){this.i18n=t,this.buttonText=this.i18n.get().FILE_UPLOADER.OPEN,this.buttonType="primary",this.accept=[],this.multiple=!0,this.skeleton=!1,this.drop=!1,this.fileUploaderId="file-uploader-"+c.fileUploaderCount,this.files=new Set,this.disabled=!1,this.filesChange=new i.EventEmitter,this.dragOver=!1,this.onTouchedCallback=s,this.onChangeCallback=s,c.fileUploaderCount++}var u=(Object.defineProperty(f.prototype,"isInvalidText",{get:function(){return this.fileItem.invalidText},enumerable:!0,configurable:!0}),f.prototype.ngOnDestroy=function(){this.remove.emit()},f.decorators=[{type:i.Component,args:[{selector:"ibm-file",template:'\n\t\t<p class="bx--file-filename">{{fileItem.file.name}}</p>\n\t\t<span\n\t\t\t*ngIf="fileItem.state === \'edit\'"\n\t\t\tclass="bx--file__state-container"\n\t\t\t(click)="remove.emit()"\n\t\t\t(keyup.enter)="remove.emit()"\n\t\t\t(keyup.space)="remove.emit()"\n\t\t\ttabindex="0">\n\t\t\t<svg\n\t\t\t\t*ngIf="isInvalidText"\n\t\t\t\tibmIcon="warning--filled"\n\t\t\t\tclass="bx--file--invalid"\n\t\t\t\tsize="16">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\tibmIcon="close"\n\t\t\t\tsize="16"\n\t\t\t\tclass="bx--file-close"\n\t\t\t\t[ariaLabel]="translations.REMOVE_BUTTON">\n\t\t\t</svg>\n\t\t</span>\n\t\t<span *ngIf="fileItem.state === \'upload\'">\n\t\t\t<div class="bx--inline-loading__animation">\n\t\t\t\t<ibm-loading size="sm"></ibm-loading>\n\t\t\t</div>\n\t\t</span>\n\t\t<span\n\t\t\t*ngIf="fileItem.state === \'complete\'"\n\t\t\tclass="bx--file__state-container"\n\t\t\ttabindex="0">\n\n\t\t\t<svg\n\t\t\t\tibmIcon="checkmark--filled"\n\t\t\t\tsize="16"\n\t\t\t\tclass="bx--file-complete"\n\t\t\t\t[ariaLabel]="translations.CHECKMARK">\n\t\t\t</svg>\n\t\t</span>\n\t'}]}],f.ctorParameters=function(){return[{type:n.I18n}]},f.propDecorators={translations:[{type:i.Input}],fileItem:[{type:i.Input}],remove:[{type:i.Output}],selectedFile:[{type:i.HostBinding,args:["class.bx--file__selected-file"]}],isInvalidText:[{type:i.HostBinding,args:["class.bx--file__selected-file--invalid"]}]},f);function f(t){this.i18n=t,this.translations=this.i18n.get().FILE_UPLOADER,this.remove=new i.EventEmitter,this.selectedFile=!0}var d=(m.decorators=[{type:i.NgModule,args:[{declarations:[p,u],exports:[p,u],imports:[o.CommonModule,l.ButtonModule,a.LoadingModule,r.IconModule]}]}],m);function m(){}t.FileUploader=p,t.FileComponent=u,t.FileUploaderModule=d,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=carbon-components-angular-file-uploader.umd.min.js.map