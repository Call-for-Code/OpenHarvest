{"version":3,"sources":["ng://carbon-components-angular/tabs/tab-header.component.ts","ng://carbon-components-angular/tabs/tab-header-group.component.ts","ng://carbon-components-angular/tabs/tab.component.ts","ng://carbon-components-angular/tabs/tab-headers.component.ts","ng://carbon-components-angular/tabs/tabs.component.ts","ng://carbon-components-angular/tabs/tabs.module.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tViewChild,\n\tElementRef,\n\tOutput,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { Tab } from \"./tab.component\";\nimport { EventEmitter } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-tab-header\",\n\ttemplate: `\n\t\t<li\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--tabs__nav-item--selected bx--tabs--scrollable__nav-item--selected': active,\n\t\t\t\t'bx--tabs__nav-item--disabled bx--tabs--scrollable__nav-item--disabled': disabled\n\t\t\t}\"\n\t\t\tclass=\"bx--tabs--scrollable__nav-item\"\n\t\t\trole=\"presentation\"\n\t\t\t(click)=\"selectTab()\">\n\t\t\t<button\n\t\t\t\t#tabItem\n\t\t\t\t[attr.aria-selected]=\"active\"\n\t\t\t\tdraggable=\"false\"\n\t\t\t\tclass=\"bx--tabs--scrollable__nav-link\"\n\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t[title]=\"title\"\n\t\t\t\t[attr.tabindex]=\"(active? 0 : -1)\"\n\t\t\t\trole=\"tab\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</button>\n\t\t</li>\n\t`\n})\n\nexport class TabHeader implements AfterViewInit {\n\t/**\n\t * Indicates whether the `Tab` is active/selected.\n\t * Determines whether it's `TabPanel` is rendered.\n\t */\n\t@Input() active = false;\n\t/**\n\t * Indicates whether or not the `Tab` item is disabled.\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * Reference to the corresponsing tab pane.\n\t */\n\t@Input() paneReference: Tab;\n\t@Input() title;\n\t/**\n\t * Set to 'true' to have pane reference cached and not reloaded on tab switching.\n\t */\n\t@Input() set cacheActive(shouldCache: boolean) {\n\t\tthis._cacheActive = shouldCache;\n\n\t\t// Updates the pane references associated with the tab header when cache active is changed.\n\t\tif (this.paneReference) {\n\t\t\tthis.paneReference.cacheActive = this.cacheActive;\n\t\t}\n\t}\n\n\t@Input() set paneTabIndex(tabIndex: number | null) {\n\t\tif (this.paneReference) {\n\t\t\tthis.paneReference.tabIndex = tabIndex;\n\t\t}\n\t}\n\n\tget cacheActive() {\n\t\treturn this._cacheActive;\n\t}\n\n\t/**\n\t * Value 'selected' to be emitted after a new `Tab` is selected.\n\t */\n\n\t@Output() selected = new EventEmitter<any>();\n\n\t// @ts-ignore\n\t@ViewChild(\"tabItem\", { static: true }) tabItem: ElementRef;\n\n\tprotected _cacheActive = false;\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\t\t\tthis.title = this.title ? this.title : this.tabItem.nativeElement.textContent;\n\t\t});\n\t}\n\n\tselectTab() {\n\t\tthis.tabItem.nativeElement.focus();\n\t\tif (!this.disabled) {\n\t\t\tthis.selected.emit();\n\t\t\tthis.active = true;\n\t\t\tif (this.paneReference) {\n\t\t\t\tthis.paneReference.active = true;\n\t\t\t}\n\t\t}\n\t}\n}\n","import {\n\tComponent,\n\tQueryList,\n\tInput,\n\tHostListener,\n\tContentChildren,\n\tAfterContentInit,\n\tElementRef,\n\tTemplateRef,\n\tOnChanges,\n\tSimpleChanges,\n\tChangeDetectorRef,\n\tViewChild,\n\tOnInit\n} from \"@angular/core\";\n\nimport { Subscription } from \"rxjs\";\nimport { EventService } from \"carbon-components-angular/utils\";\n\nimport { TabHeader } from \"./tab-header.component\";\n\n@Component({\n\tselector: \"ibm-tab-header-group\",\n\ttemplate: `\n\t<nav\n\t\tclass=\"bx--tabs bx--tabs--scrollable\"\n\t\t[ngClass]=\"{\n\t\t\t'bx--skeleton': skeleton,\n\t\t\t'bx--tabs--container bx--tabs--scrollable--container': type === 'container'\n\t\t}\"\n\t\trole=\"navigation\"\n\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t[attr.aria-labelledby]=\"ariaLabelledby\">\n\t\t<button\n\t\t\t#leftOverflowNavButton\n\t\t\ttype=\"button\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--tab--overflow-nav-button': hasHorizontalOverflow,\n\t\t\t\t'bx--tab--overflow-nav-button--hidden': leftOverflowNavButtonHidden\n\t\t\t}\"\n\t\t\t(click)=\"handleOverflowNavClick(-1)\"\n\t\t\t(mousedown)=\"handleOverflowNavMouseDown(-1)\"\n\t\t\t(mouseup)=\"handleOverflowNavMouseUp()\">\n\t\t\t<svg\n\t\t\t\tfocusable=\"false\"\n\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\twidth=\"16\"\n\t\t\t\theight=\"16\"\n\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\taria-hidden=\"true\">\n\t\t\t\t<path d=\"M5 8L10 3 10.7 3.7 6.4 8 10.7 12.3 10 13z\"></path>\n\t\t\t</svg>\n\t\t</button>\n\t\t<div *ngIf=\"!leftOverflowNavButtonHidden\" class=\"bx--tabs__overflow-indicator--left\"></div>\n\t\t<ul\n\t\t\t#tabList\n\t\t\tclass=\"bx--tabs--scrollable__nav\"\n\t\t\trole=\"tablist\"\n\t\t\t(scroll)=\"handleScroll()\">\n\t\t\t<li role=\"presentation\">\n\t\t\t\t<ng-container *ngIf=\"contentBefore\" [ngTemplateOutlet]=\"contentBefore\"></ng-container>\n\t\t\t</li>\n\t\t\t<ng-content></ng-content>\n\t\t\t<li role=\"presentation\">\n\t\t\t\t<ng-container *ngIf=\"contentAfter\" [ngTemplateOutlet]=\"contentAfter\"></ng-container>\n\t\t\t</li>\n\t\t</ul>\n\t\t<div *ngIf=\"!rightOverflowNavButtonHidden\" class=\"bx--tabs__overflow-indicator--right\"></div>\n\t\t<button\n\t\t\t#rightOverflowNavButton\n\t\t\ttype=\"button\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--tab--overflow-nav-button': hasHorizontalOverflow,\n\t\t\t\t'bx--tab--overflow-nav-button--hidden': rightOverflowNavButtonHidden\n\t\t\t}\"\n\t\t\t(click)=\"handleOverflowNavClick(1)\"\n\t\t\t(mousedown)=\"handleOverflowNavMouseDown(1)\"\n\t\t\t(mouseup)=\"handleOverflowNavMouseUp()\">\n\t\t\t<svg\n\t\t\t\tfocusable=\"false\"\n\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\twidth=\"16\"\n\t\t\t\theight=\"16\"\n\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\taria-hidden=\"true\">\n\t\t\t\t<path d=\"M11 8L6 13 5.3 12.3 9.6 8 5.3 3.7 6 3z\"></path>\n\t\t\t</svg>\n\t\t</button>\n\t</nav>\n\t`\n})\nexport class TabHeaderGroup implements AfterContentInit, OnChanges, OnInit {\n\t/**\n\t * Set to 'true' to have tabs automatically activated and have their content displayed when they receive focus.\n\t */\n\t@Input() followFocus: boolean;\n\t/**\n\t * Set to `true` to put tabs in a loading state.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Sets the aria label on the nav element.\n\t */\n\t@Input() ariaLabel: string;\n\t/**\n\t * Sets the aria labelledby on the nav element.\n\t */\n\t@Input() ariaLabelledby: string;\n\n\t@Input() contentAfter: TemplateRef<any>;\n\n\t@Input() contentBefore: TemplateRef<any>;\n\n\t/**\n\t * Set to 'true' to have all pane references associated with each tab header\n\t * in the tab header group cached and not reloaded on tab switching.\n\t */\n\t@Input() cacheActive = false;\n\n\t@Input() isNavigation = false;\n\t@Input() type: \"default\" | \"container\" = \"default\";\n\n\t/**\n\t * ContentChildren of all the tabHeaders.\n\t */\n\t@ContentChildren(TabHeader) tabHeaderQuery: QueryList<TabHeader>;\n\t// @ts-ignore\n\t@ViewChild(\"tabList\", { static: true }) headerContainer;\n\t// @ts-ignore\n\t@ViewChild(\"rightOverflowNavButton\", { static: true }) rightOverflowNavButton;\n\t// @ts-ignore\n\t@ViewChild(\"leftOverflowNavButton\", { static: true }) leftOverflowNavButton;\n\t/**\n\t * Keeps track of all the subscriptions to the tab header selection events.\n\t */\n\tselectedSubscriptionTracker = new Subscription();\n\n\t/**\n\t * Controls the manual focusing done by tabbing through headings.\n\t */\n\tpublic currentSelectedIndex = 0;\n\n\tpublic get hasHorizontalOverflow() {\n\t\tconst tabList = this.headerContainer.nativeElement;\n\t\treturn tabList.scrollWidth > tabList.clientWidth;\n\t}\n\n\tpublic get leftOverflowNavButtonHidden() {\n\t\tconst tabList = this.headerContainer.nativeElement;\n\t\treturn !this.hasHorizontalOverflow || !tabList.scrollLeft;\n\t}\n\n\tpublic get rightOverflowNavButtonHidden() {\n\t\tconst tabList = this.headerContainer.nativeElement;\n\t\treturn !this.hasHorizontalOverflow ||\n\t\t\t(tabList.scrollLeft + tabList.clientWidth) === tabList.scrollWidth;\n\t}\n\n\t// width of the overflow buttons\n\tOVERFLOW_BUTTON_OFFSET = 40;\n\n\tprivate _cacheActive = false;\n\n\tprivate overflowNavInterval;\n\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected changeDetectorRef: ChangeDetectorRef,\n\t\tprotected eventService: EventService\n\t) { }\n\n\t// keyboard accessibility\n\t/**\n\t * Controls the keydown events used for tabbing through the headings.\n\t */\n\t@HostListener(\"keydown\", [\"$event\"])\n\tkeyboardInput(event) {\n\t\tlet tabHeadersArray = Array.from<any>(this.tabHeaderQuery);\n\n\t\tif (event.key === \"Right\" || event.key === \"ArrowRight\") {\n\t\t\tif (this.currentSelectedIndex < tabHeadersArray.length - 1) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus && !tabHeadersArray[this.currentSelectedIndex + 1].disabled) {\n\t\t\t\t\ttabHeadersArray[this.currentSelectedIndex + 1].selectTab();\n\t\t\t\t} else {\n\t\t\t\t\ttabHeadersArray[this.currentSelectedIndex + 1].tabItem.nativeElement.focus();\n\t\t\t\t\tthis.currentSelectedIndex++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus && !tabHeadersArray[0].disabled) {\n\t\t\t\t\ttabHeadersArray[0].selectTab();\n\t\t\t\t} else {\n\t\t\t\t\ttabHeadersArray[0].tabItem.nativeElement.focus();\n\t\t\t\t\tthis.currentSelectedIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (event.key === \"Left\" || event.key === \"ArrowLeft\") {\n\t\t\tif (this.currentSelectedIndex > 0) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus && !tabHeadersArray[this.currentSelectedIndex - 1].disabled) {\n\t\t\t\t\ttabHeadersArray[this.currentSelectedIndex - 1].selectTab();\n\t\t\t\t} else {\n\t\t\t\t\ttabHeadersArray[this.currentSelectedIndex - 1].tabItem.nativeElement.focus();\n\t\t\t\t\tthis.currentSelectedIndex--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus && !tabHeadersArray[tabHeadersArray.length - 1].disabled) {\n\t\t\t\t\ttabHeadersArray[tabHeadersArray.length - 1].selectTab();\n\t\t\t\t} else {\n\t\t\t\t\ttabHeadersArray[tabHeadersArray.length - 1].tabItem.nativeElement.focus();\n\t\t\t\t\tthis.currentSelectedIndex = tabHeadersArray.length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (event.key === \"Home\") {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.followFocus && !tabHeadersArray[0].disabled) {\n\t\t\t\ttabHeadersArray[0].selectTab();\n\t\t\t} else {\n\t\t\t\ttabHeadersArray[0].tabItem.nativeElement.focus();\n\t\t\t\tthis.currentSelectedIndex = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (event.key === \"End\") {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.followFocus && !tabHeadersArray[tabHeadersArray.length - 1].disabled) {\n\t\t\t\ttabHeadersArray[tabHeadersArray.length - 1].selectTab();\n\t\t\t} else {\n\t\t\t\ttabHeadersArray[tabHeadersArray.length - 1].tabItem.nativeElement.focus();\n\t\t\t\tthis.currentSelectedIndex = tabHeadersArray.length - 1;\n\t\t\t}\n\t\t}\n\n\t\t// `\"Spacebar\"` is IE11 specific value\n\t\tif ((event.key === \" \" || event.key === \"Spacebar\") && !this.followFocus) {\n\t\t\ttabHeadersArray[this.currentSelectedIndex].selectTab();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.eventService.on(window as any, \"resize\", () => this.handleScroll());\n\t}\n\n\tngAfterContentInit() {\n\t\tthis.selectedSubscriptionTracker.unsubscribe();\n\n\t\tif (this.tabHeaderQuery) {\n\t\t\tthis.tabHeaderQuery.toArray()\n\t\t\t\t.forEach(tabHeader => {\n\t\t\t\t\ttabHeader.cacheActive = this.cacheActive;\n\t\t\t\t\ttabHeader.paneTabIndex = this.isNavigation ? null : 0;\n\t\t\t\t});\n\t\t}\n\n\t\tconst selectedSubscriptions = this.tabHeaderQuery.toArray().forEach(tabHeader => {\n\t\t\ttabHeader.selected.subscribe(() => {\n\t\t\t\tthis.currentSelectedIndex = this.tabHeaderQuery.toArray().indexOf(tabHeader);\n\t\t\t\t// The Filter takes the current selected tab out, then all other headers are\n\t\t\t\t// deactivated and their associated pane references are also deactivated.\n\t\t\t\tthis.tabHeaderQuery.toArray().filter(header => header !== tabHeader)\n\t\t\t\t\t.forEach(filteredHeader => {\n\t\t\t\t\t\tfilteredHeader.active = false;\n\t\t\t\t\t\tif (filteredHeader.paneReference) {\n\t\t\t\t\t\t\tfilteredHeader.paneReference.active = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tthis.selectedSubscriptionTracker.add(selectedSubscriptions);\n\n\t\tsetTimeout(() => this.tabHeaderQuery.toArray()[this.currentSelectedIndex].selectTab());\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.tabHeaderQuery) {\n\t\t\tif (changes.cacheActive) {\n\t\t\t\tthis.tabHeaderQuery.toArray().forEach(tabHeader => tabHeader.cacheActive = this.cacheActive);\n\t\t\t}\n\n\t\t\tif (changes.isNavigation) {\n\t\t\t\tthis.tabHeaderQuery.toArray()\n\t\t\t\t\t.forEach(tabHeader => tabHeader.paneTabIndex = this.isNavigation ? null : 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getSelectedTab(): any {\n\t\tconst selected =  this.tabHeaderQuery.toArray()[this.currentSelectedIndex];\n\t\tif (selected) {\n\t\t\treturn selected;\n\t\t}\n\t\treturn {\n\t\t\theadingIsTemplate: false,\n\t\t\theading: \"\"\n\t\t};\n\t}\n\n\tpublic handleScroll() {\n\t\tthis.changeDetectorRef.markForCheck();\n\t}\n\n\tpublic handleOverflowNavClick(direction: number, multiplier = 15) {\n\t\tconst tabList = this.headerContainer.nativeElement;\n\n\t\tconst { clientWidth, scrollLeft, scrollWidth } = tabList;\n\t\tif (direction === 1 && !scrollLeft) {\n\t\t\ttabList.scrollLeft += this.OVERFLOW_BUTTON_OFFSET;\n\t\t}\n\n\t\ttabList.scrollLeft += direction * multiplier;\n\n\t\tconst leftEdgeReached =\n\t\t\tdirection === -1 && scrollLeft < this.OVERFLOW_BUTTON_OFFSET;\n\t\tconst rightEdgeReached =\n\t\t\tdirection === 1 &&\n\t\t\tscrollLeft + clientWidth >= scrollWidth - this.OVERFLOW_BUTTON_OFFSET;\n\n\t\tif (leftEdgeReached) {\n\t\t\tthis.rightOverflowNavButton.nativeElement.focus();\n\t\t}\n\t\tif (rightEdgeReached) {\n\t\t\tthis.leftOverflowNavButton.nativeElement.focus();\n\t\t}\n\t}\n\n\tpublic handleOverflowNavMouseDown(direction: number) {\n\t\tconst tabList = this.headerContainer.nativeElement;\n\n\t\tthis.overflowNavInterval = setInterval(() => {\n\t\t\tconst { clientWidth, scrollLeft, scrollWidth } = tabList;\n\n\t\t\t// clear interval if scroll reaches left or right edge\n\t\t\tconst leftEdgeReached = direction === -1 && scrollLeft < this.OVERFLOW_BUTTON_OFFSET;\n\t\t\tconst rightEdgeReached =\n\t\t\t\tdirection === 1 &&\n\t\t\t\tscrollLeft + clientWidth >= scrollWidth - this.OVERFLOW_BUTTON_OFFSET;\n\n\t\t\tif (leftEdgeReached || rightEdgeReached) {\n\t\t\t\tclearInterval(this.overflowNavInterval);\n\t\t\t}\n\n\t\t\t// account for overflow button appearing and causing tablist width change\n\t\t\tthis.handleOverflowNavClick(direction);\n\t\t});\n\t}\n\n\tpublic handleOverflowNavMouseUp() {\n\t\tclearInterval(this.overflowNavInterval);\n\t}\n}\n","import {\n\tComponent,\n\tOnInit,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tContentChild,\n\tTemplateRef,\n\tHostBinding\n} from \"@angular/core\";\n\n\nlet nextId = 0;\n\n/**\n* The `Tab` component is a child of the `Tabs` component.\n* It represents one `Tab` item and its content within a panel of other `Tab` items.\n*\n*\n* `Tab` takes a string or `TemplateRef` for the header, and any content for the body of the tab.\n* Disabled states should be handled by the application (ie. switch to the tab, but display some\n* indication as to _why_ the tab is disabled).\n*\n* When the tab is selected the `select` output will be triggered.\n* The `select` output will also be triggered for the active tab when the tabs are loaded or updated.\n*\n*\n* Tab with string header:\n*\n* ```html\n* <ibm-tab heading='tab1'>\n* \ttab 1 content\n* </ibm-tab>\n* ```\n*\n* Tab with custom header:\n*\n* ```html\n* <ng-template #tabHeading>\n* \t<svg ibmIcon=\"facebook\"\n* \t\tsize=\"sm\"\n* \t\tstyle=\"margin-right: 7px;\">\n* \t</svg>\n* \tHello Tab 1\n* </ng-template>\n* <ibm-tabs>\n* \t<ibm-tab [heading]=\"tabHeading\">\n* \t\tTab 1 content <svg ibmIcon=\"alert\" size=\"lg\"></svg>\n* \t</ibm-tab>\n* \t<ibm-tab heading='Tab2'>\n* \t\tTab 2 content\n* \t</ibm-tab>\n* \t<ibm-tab heading='Tab3'>\n* \t\tTab 3 content\n* \t</ibm-tab>\n* </ibm-tabs>\n* ```\n*/\n@Component({\n\tselector: \"ibm-tab\",\n\ttemplate: `\n\t\t<div\n\t\t\t[attr.tabindex]=\"tabIndex\"\n\t\t\trole=\"tabpanel\"\n\t\t\t*ngIf=\"shouldRender()\"\n\t\t\tclass=\"bx--tab-content\"\n\t\t\t[ngStyle]=\"{'display': active ? null : 'none'}\"\n\t\t\t[attr.aria-labelledby]=\"id + '-header'\"\n\t\t\taria-live=\"polite\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t`\n})\nexport class Tab implements OnInit {\n\t/**\n\t * Boolean value reflects if the `Tab` is using a custom template for the heading.\n\t * Default value is false.\n\t */\n\tpublic headingIsTemplate = false;\n\n\t/**\n\t * The `Tab`'s title to be displayed or custom temaplate for the `Tab` heading.\n\t */\n\t@Input() heading: string | TemplateRef<any>;\n\t/**\n\t * Optional override for the `tabItem's`'s title attribute which is set in `TabHeaders`.\n\t * `tabItem`'s title attribute is automatically set to `heading`.\n\t *\n\t * You might want to use this if you set `heading` to a `TemplateRef`.\n\t */\n\t@Input() title: string;\n\t/**\n\t * Allows the user to pass data to the custom template for the `Tab` heading.\n\t */\n\t@Input() context: any;\n\t/**\n\t * Indicates whether the `Tab` is active/selected.\n\t * Determines whether it's `TabPanel` is rendered.\n\t */\n\t@Input() active = false;\n\t/**\n\t * Indicates whether or not the `Tab` item is disabled.\n\t */\n\t@Input() disabled = false;\n\n\t@Input() tabIndex = 0;\n\t// do we need id's?\n\t/**\n\t * Sets the id of the `Tab`. Will be uniquely generated if not provided.\n\t */\n\t@Input() id = `n-tab-${nextId++}`;\n\t/**\n\t * Set to true to have Tab items cached and not reloaded on tab switching.\n\t */\n\t@Input() set cacheActive(shouldCache: boolean) {\n\t\tthis._cacheActive = shouldCache;\n\t}\n\t/**\n\t * Value 'selected' to be emitted after a new `Tab` is selected.\n\t */\n\t@Output() selected: EventEmitter<void> = new EventEmitter<void>();\n\n\t/**\n\t * Used to set the id property on the element.\n\t */\n\t@HostBinding(\"attr.id\") attrClass = this.id;\n\n\tget cacheActive() {\n\t\treturn this._cacheActive;\n\t}\n\n\tprotected _cacheActive = false;\n\n\t/**\n\t * Checks for custom heading template on initialization and updates the value\n\t * of the boolean 'headingIsTemplate'.\n\t */\n\tngOnInit() {\n\t\tif (this.heading instanceof TemplateRef) {\n\t\t\tthis.headingIsTemplate = true;\n\t\t}\n\t}\n\n\t/**\n\t * Emit the status of the `Tab`, specifically 'select' and 'selected' properties.\n\t */\n\tdoSelect() {\n\t\tthis.selected.emit();\n\t}\n\n\t/**\n\t* Returns value indicating whether this `Tab` should be rendered in a `TabPanel`.\n\t*/\n\tshouldRender() {\n\t\treturn this.active || this.cacheActive;\n\t}\n}\n","import {\n\tComponent,\n\tQueryList,\n\tInput,\n\tHostListener,\n\tViewChild,\n\tContentChildren,\n\tAfterContentInit,\n\tViewChildren,\n\tElementRef,\n\tTemplateRef,\n\tOnChanges,\n\tSimpleChanges,\n\tOnInit,\n\tChangeDetectorRef\n} from \"@angular/core\";\nimport { EventService } from \"carbon-components-angular/utils\";\n\nimport { Tab } from \"./tab.component\";\n\n/**\n * The `TabHeaders` component contains the `Tab` items and controls scroll functionality\n * if content has overflow.\n */\n@Component({\n\tselector: \"ibm-tab-headers\",\n\ttemplate: `\n\t\t<nav\n\t\t\tclass=\"bx--tabs--scrollable\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--skeleton': skeleton,\n\t\t\t\t'bx--tabs--container bx--tabs--scrollable--container': type === 'container'\n\t\t\t}\"\n\t\t\trole=\"navigation\"\n\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t[attr.aria-labelledby]=\"ariaLabelledby\">\n\t\t\t<button\n\t\t\t\t#leftOverflowNavButton\n\t\t\t\ttype=\"button\"\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t'bx--tab--overflow-nav-button': hasHorizontalOverflow,\n\t\t\t\t\t'bx--tab--overflow-nav-button--hidden': leftOverflowNavButtonHidden\n\t\t\t\t}\"\n\t\t\t\t(click)=\"handleOverflowNavClick(-1)\"\n\t\t\t\t(mousedown)=\"handleOverflowNavMouseDown(-1)\"\n\t\t\t\t(mouseup)=\"handleOverflowNavMouseUp()\">\n\t\t\t\t<svg\n\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\twidth=\"16\"\n\t\t\t\t\theight=\"16\"\n\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t<path d=\"M5 8L10 3 10.7 3.7 6.4 8 10.7 12.3 10 13z\"></path>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t\t<div *ngIf=\"!leftOverflowNavButtonHidden\" class=\"bx--tabs__overflow-indicator--left\"></div>\n\t\t\t<ul\n\t\t\t\t#tabList\n\t\t\t\tclass=\"bx--tabs--scrollable__nav\"\n\t\t\t\trole=\"tablist\"\n\t\t\t\t(scroll)=\"handleScroll()\">\n\t\t\t\t<li role=\"presentation\">\n\t\t\t\t\t<ng-container *ngIf=\"contentBefore\" [ngTemplateOutlet]=\"contentBefore\"></ng-container>\n\t\t\t\t</li>\n\t\t\t\t<li\n\t\t\t\t\t*ngFor=\"let tab of tabs; let i = index;\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'bx--tabs__nav-item--selected bx--tabs--scrollable__nav-item--selected': tab.active,\n\t\t\t\t\t\t'bx--tabs__nav-item--disabled bx--tabs--scrollable__nav-item--disabled': tab.disabled\n\t\t\t\t\t}\"\n\t\t\t\t\tclass=\"bx--tabs--scrollable__nav-item\"\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\t(click)=\"selectTab(tabItem, tab, i)\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t#tabItem\n\t\t\t\t\t\t[attr.aria-selected]=\"tab.active\"\n\t\t\t\t\t\t[attr.tabindex]=\"(tab.active?0:-1)\"\n\t\t\t\t\t\t[attr.aria-controls]=\"tab.id\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"tab.disabled\"\n\t\t\t\t\t\t(focus)=\"onTabFocus(tabItem, i)\"\n\t\t\t\t\t\t(click)=\"$event.preventDefault()\"\n\t\t\t\t\t\tdraggable=\"false\"\n\t\t\t\t\t\tid=\"{{tab.id}}-header\"\n\t\t\t\t\t\tclass=\"bx--tabs--scrollable__nav-link\"\n\t\t\t\t\t\t[title]=\"tab.title ? tab.title : tab.heading\"\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\trole=\"tab\">\n\t\t\t\t\t\t<ng-container *ngIf=\"!tab.headingIsTemplate\">\n\t\t\t\t\t\t\t{{ tab.heading }}\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t*ngIf=\"tab.headingIsTemplate\"\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tab.heading\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{$implicit: tab.context}\">\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t\t<li role=\"presentation\">\n\t\t\t\t\t<ng-container *ngIf=\"contentAfter\" [ngTemplateOutlet]=\"contentAfter\"></ng-container>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<div *ngIf=\"!rightOverflowNavButtonHidden\" class=\"bx--tabs__overflow-indicator--right\"></div>\n\t\t\t<button\n\t\t\t\t#rightOverflowNavButton\n\t\t\t\ttype=\"button\"\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t'bx--tab--overflow-nav-button': hasHorizontalOverflow,\n\t\t\t\t\t'bx--tab--overflow-nav-button--hidden': rightOverflowNavButtonHidden\n\t\t\t\t}\"\n\t\t\t\t(click)=\"handleOverflowNavClick(1)\"\n\t\t\t\t(mousedown)=\"handleOverflowNavMouseDown(1)\"\n\t\t\t\t(mouseup)=\"handleOverflowNavMouseUp()\">\n\t\t\t\t<svg\n\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\twidth=\"16\"\n\t\t\t\t\theight=\"16\"\n\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t<path d=\"M11 8L6 13 5.3 12.3 9.6 8 5.3 3.7 6 3z\"></path>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</nav>\n\t`\n})\n\nexport class TabHeaders implements AfterContentInit, OnChanges, OnInit {\n\t/**\n\t * List of `Tab` components.\n\t */\n\t// disable the next line because we need to rename the input\n\t// tslint:disable-next-line\n\t@Input(\"tabs\") tabInput: QueryList<Tab>;\n\t/**\n\t * Set to 'true' to have `Tab` items cached and not reloaded on tab switching.\n\t * Duplicate from `n-tabs` to support standalone headers\n\t */\n\t@Input() cacheActive = false;\n\t/**\n\t * Set to 'true' to have tabs automatically activated and have their content displayed when they receive focus.\n\t */\n\t@Input() followFocus: boolean;\n\t/**\n\t * Set to `true` to put tabs in a loading state.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Sets the aria label on the nav element.\n\t */\n\t@Input() ariaLabel: string;\n\t/**\n\t * Sets the aria labelledby on the nav element.\n\t */\n\t@Input() ariaLabelledby: string;\n\n\t@Input() contentBefore: TemplateRef<any>;\n\t@Input() contentAfter: TemplateRef<any>;\n\n\t@Input() type: \"default\" | \"container\" = \"default\";\n\n\t/**\n\t * Gets the Unordered List element that holds the `Tab` headings from the view DOM.\n\t */\n\t// @ts-ignore\n\t@ViewChild(\"tabList\", { static: true }) headerContainer;\n\t// @ts-ignore\n\t@ViewChild(\"rightOverflowNavButton\", { static: true }) rightOverflowNavButton;\n\t// @ts-ignore\n\t@ViewChild(\"leftOverflowNavButton\", { static: true }) leftOverflowNavButton;\n\t/**\n\t * ContentChild of all the n-tabs\n\t */\n\t@ContentChildren(Tab) tabQuery: QueryList<Tab>;\n\t/**\n\t * set to tabQuery if tabInput is empty\n\t */\n\tpublic tabs: QueryList<Tab>;\n\t/**\n\t * The index of the first visible tab.\n\t */\n\tpublic firstVisibleTab = 0;\n\t/**\n\t * The DOM element containing the `Tab` headings displayed.\n\t */\n\t@ViewChildren(\"tabItem\") allTabHeaders: QueryList<ElementRef>;\n\t/**\n\t * Controls the manual focusing done by tabbing through headings.\n\t */\n\tpublic currentSelectedTab: number;\n\n\tpublic get hasHorizontalOverflow() {\n\t\tconst tabList = this.headerContainer.nativeElement;\n\t\treturn tabList.scrollWidth > tabList.clientWidth;\n\t}\n\n\tpublic get leftOverflowNavButtonHidden() {\n\t\tconst tabList = this.headerContainer.nativeElement;\n\t\treturn !this.hasHorizontalOverflow || !tabList.scrollLeft;\n\t}\n\n\tpublic get rightOverflowNavButtonHidden() {\n\t\tconst tabList = this.headerContainer.nativeElement;\n\t\treturn !this.hasHorizontalOverflow ||\n\t\t\t(tabList.scrollLeft + tabList.clientWidth) === tabList.scrollWidth;\n\t}\n\n\t// width of the overflow buttons\n\tOVERFLOW_BUTTON_OFFSET = 40;\n\n\tprivate overflowNavInterval;\n\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected changeDetectorRef: ChangeDetectorRef,\n\t\tprotected eventService: EventService\n\t) { }\n\n\t// keyboard accessibility\n\t/**\n\t * Controls the keydown events used for tabbing through the headings.\n\t */\n\t@HostListener(\"keydown\", [\"$event\"])\n\tkeyboardInput(event) {\n\t\tlet tabsArray = Array.from<any>(this.tabs);\n\n\t\t// \"Right\" is an ie11 specific value\n\t\tif (event.key === \"Right\" || event.key === \"ArrowRight\") {\n\t\t\tif (this.currentSelectedTab < this.allTabHeaders.length - 1) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus) {\n\t\t\t\t\tthis.selectTab(event.target, tabsArray[this.currentSelectedTab + 1], this.currentSelectedTab);\n\t\t\t\t}\n\t\t\t\tthis.allTabHeaders.toArray()[this.currentSelectedTab + 1].nativeElement.focus();\n\t\t\t} else {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus) {\n\t\t\t\t\tthis.selectTab(event.target, tabsArray[0], 0);\n\t\t\t\t}\n\t\t\t\tthis.allTabHeaders.first.nativeElement.focus();\n\t\t\t}\n\t\t}\n\n\t\t// \"Left\" is an ie11 specific value\n\t\tif (event.key === \"Left\" || event.key === \"ArrowLeft\") {\n\t\t\tif (this.currentSelectedTab > 0) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus) {\n\t\t\t\t\tthis.selectTab(event.target, tabsArray[this.currentSelectedTab - 1], this.currentSelectedTab);\n\t\t\t\t}\n\t\t\t\tthis.allTabHeaders.toArray()[this.currentSelectedTab - 1].nativeElement.focus();\n\t\t\t} else {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus) {\n\t\t\t\t\tthis.selectTab(event.target, tabsArray[this.allTabHeaders.length - 1], this.allTabHeaders.length);\n\t\t\t\t}\n\t\t\t\tthis.allTabHeaders.toArray()[this.allTabHeaders.length - 1].nativeElement.focus();\n\t\t\t}\n\t\t}\n\n\t\tif (event.key === \"Home\") {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.followFocus) {\n\t\t\t\tthis.selectTab(event.target, tabsArray[0], 0);\n\t\t\t}\n\t\t\tthis.allTabHeaders.toArray()[0].nativeElement.focus();\n\t\t}\n\n\t\tif (event.key === \"End\") {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.followFocus) {\n\t\t\t\tthis.selectTab(event.target, tabsArray[this.allTabHeaders.length - 1], this.allTabHeaders.length);\n\t\t\t}\n\t\t\tthis.allTabHeaders.toArray()[this.allTabHeaders.length - 1].nativeElement.focus();\n\t\t}\n\n\t\t// `\"Spacebar\"` is IE11 specific value\n\t\tif ((event.key === \" \" || event.key === \"Spacebar\") && !this.followFocus) {\n\t\t\tthis.selectTab(event.target, tabsArray[this.currentSelectedTab], this.currentSelectedTab);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.eventService.on(window as any, \"resize\", () => this.handleScroll());\n\t}\n\n\tngAfterContentInit() {\n\t\tif (!this.tabInput) {\n\t\t\tthis.tabs = this.tabQuery;\n\t\t} else {\n\t\t\tthis.tabs = this.tabInput;\n\t\t}\n\n\t\tthis.tabs.forEach(tab => tab.cacheActive = this.cacheActive);\n\t\tthis.tabs.changes.subscribe(() => {\n\t\t\tthis.setFirstTab();\n\t\t});\n\t\tthis.setFirstTab();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.tabs && changes.cacheActive) {\n\t\t\tthis.tabs.forEach(tab => tab.cacheActive = this.cacheActive);\n\t\t}\n\t}\n\n\t/**\n\t * Controls manually focusing tabs.\n\t */\n\tpublic onTabFocus(ref: HTMLElement, index: number) {\n\t\tthis.currentSelectedTab = index;\n\t\t// reset scroll left because we're already handling it\n\t\tthis.headerContainer.nativeElement.parentElement.scrollLeft = 0;\n\t}\n\n\tpublic getSelectedTab(): any {\n\t\tconst selected = this.tabs.find(tab => tab.active);\n\t\tif (selected) {\n\t\t\treturn selected;\n\t\t}\n\t\treturn { headingIsTemplate: false, heading: \"\" };\n\t}\n\n\t/**\n\t * Selects `Tab` 'tab' and moves it into view on the view DOM if it is not already.\n\t */\n\tpublic selectTab(ref: HTMLElement, tab: Tab, tabIndex: number) {\n\t\tif (tab.disabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentSelectedTab = tabIndex;\n\t\tthis.tabs.forEach(_tab => _tab.active = false);\n\t\ttab.active = true;\n\t\ttab.doSelect();\n\t}\n\n\tpublic handleScroll() {\n\t\tthis.changeDetectorRef.markForCheck();\n\t}\n\n\tpublic handleOverflowNavClick(direction: number, multiplier = 15) {\n\t\tconst tabList = this.headerContainer.nativeElement;\n\n\t\tconst { clientWidth, scrollLeft, scrollWidth } = tabList;\n\t\tif (direction === 1 && !scrollLeft) {\n\t\t\ttabList.scrollLeft += this.OVERFLOW_BUTTON_OFFSET;\n\t\t}\n\n\t\ttabList.scrollLeft += direction * multiplier;\n\n\t\tconst leftEdgeReached =\n\t\t\tdirection === -1 && scrollLeft < this.OVERFLOW_BUTTON_OFFSET;\n\t\tconst rightEdgeReached =\n\t\t\tdirection === 1 &&\n\t\t\tscrollLeft + clientWidth >= scrollWidth - this.OVERFLOW_BUTTON_OFFSET;\n\n\t\tif (leftEdgeReached) {\n\t\t\tthis.rightOverflowNavButton.nativeElement.focus();\n\t\t}\n\t\tif (rightEdgeReached) {\n\t\t\tthis.leftOverflowNavButton.nativeElement.focus();\n\t\t}\n\t}\n\n\tpublic handleOverflowNavMouseDown(direction: number) {\n\t\tconst tabList = this.headerContainer.nativeElement;\n\n\t\tthis.overflowNavInterval = setInterval(() => {\n\t\t\tconst { clientWidth, scrollLeft, scrollWidth } = tabList;\n\n\t\t\t// clear interval if scroll reaches left or right edge\n\t\t\tconst leftEdgeReached = direction === -1 && scrollLeft < this.OVERFLOW_BUTTON_OFFSET;\n\t\t\tconst rightEdgeReached =\n\t\t\t\tdirection === 1 &&\n\t\t\t\tscrollLeft + clientWidth >= scrollWidth - this.OVERFLOW_BUTTON_OFFSET;\n\n\t\t\tif (leftEdgeReached || rightEdgeReached) {\n\t\t\t\tclearInterval(this.overflowNavInterval);\n\t\t\t}\n\n\t\t\t// account for overflow button appearing and causing tablist width change\n\t\t\tthis.handleOverflowNavClick(direction);\n\t\t});\n\t}\n\n\tpublic handleOverflowNavMouseUp() {\n\t\tclearInterval(this.overflowNavInterval);\n\t}\n\n\t/**\n\t * Determines which `Tab` is initially selected.\n\t */\n\tprotected setFirstTab() {\n\t\tsetTimeout(() => {\n\t\t\tlet firstTab = this.tabs.find(tab => tab.active);\n\t\t\tif (!firstTab && this.tabs.first) {\n\t\t\t\tfirstTab = this.tabs.first;\n\t\t\t\tfirstTab.active = true;\n\t\t\t}\n\t\t\tif (firstTab) {\n\t\t\t\tfirstTab.doSelect();\n\t\t\t}\n\t\t});\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tContentChildren,\n\tQueryList,\n\tAfterContentInit,\n\tContentChild,\n\tOnChanges,\n\tSimpleChanges\n} from \"@angular/core\";\nimport { Tab } from \"./tab.component\";\nimport { TabHeaders } from \"./tab-headers.component\";\n\n\n/**\n * Build out your application's tabs using this component.\n * This is the parent of the `Tab` and `TabHeader` components.\n *\n * [See demo](../../?path=/story/tabs--basic)\n *\n * `Tabs` expects a set of `n-tab` elements\n *\n * ```html\n * <ibm-tabs>\n * \t<ibm-tab heading='tab1'>\n * \t\ttab 1 content\n * \t</ibm-tab>\n * \t<ibm-tab heading='tab1'>\n * \t\ttab 2 content\n * \t</ibm-tab>\n * \t<!-- ... -->\n * \t<ibm-tab heading='tab1'>\n * \t\ttab n content\n * \t</ibm-tab>\n * </ibm-tabs>\n * ```\n *\n * <example-url>../../iframe.html?id=tabs--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-tabs\",\n\ttemplate: `\n\t\t\t<ibm-tab-headers\n\t\t\t\t*ngIf=\"hasTabHeaders() && position === 'top'\"\n\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t[tabs]=\"tabs\"\n\t\t\t\t[followFocus]=\"followFocus\"\n\t\t\t\t[cacheActive]=\"cacheActive\"\n\t\t\t\t[contentBefore]=\"before\"\n\t\t\t\t[contentAfter]=\"after\"\n\t\t\t\t[ariaLabel]=\"ariaLabel\"\n\t\t\t\t[ariaLabelledby]=\"ariaLabelledby\"\n\t\t\t\t[type]=\"type\">\n\t\t\t</ibm-tab-headers>\n\t\t\t<ng-content></ng-content>\n\t\t\t<ng-template #before>\n\t\t\t\t<ng-content select=\"[before]\"></ng-content>\n\t\t\t</ng-template>\n\t\t\t<ng-template #after>\n\t\t\t\t<ng-content select=\"[after]\"></ng-content>\n\t\t\t</ng-template>\n\t\t\t<ibm-tab-headers\n\t\t\t\t*ngIf=\"hasTabHeaders() && position === 'bottom'\"\n\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t[tabs]=\"tabs\"\n\t\t\t\t[cacheActive]=\"cacheActive\"\n\t\t\t\t[type]=\"type\">\n\t\t\t</ibm-tab-headers>\n\t`\n})\nexport class Tabs implements AfterContentInit, OnChanges {\n\t/**\n\t * Takes either the string value 'top' or 'bottom' to place TabHeader\n\t * relative to the `TabPanel`s.\n\t */\n\t@Input() position: \"top\" | \"bottom\" = \"top\";\n\t/**\n\t * Set to 'true' to have `Tab` items cached and not reloaded on tab switching.\n\t */\n\t@Input() cacheActive = false;\n\t/**\n\t * Set to 'true' to have tabs automatically activated and have their content displayed when they receive focus.\n\t */\n\t@Input() followFocus = true;\n\t/**\n\t * Set to `true` to put tabs in a loading state.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Set to `true` to have the tabIndex of the all tabpanels be -1.\n\t */\n\t@Input() isNavigation = false;\n\t/**\n\t * Sets the aria label on the `TabHeader`s nav element.\n\t */\n\t@Input() ariaLabel: string;\n\t/**\n\t * Sets the aria labelledby on the `TabHeader`s nav element.\n\t */\n\t@Input() ariaLabelledby: string;\n\t/**\n\t * Sets the type of the `TabHeader`s\n\t */\n\t@Input() type: \"default\" | \"container\" = \"default\";\n\n\t/**\n\t * Maintains a `QueryList` of the `Tab` elements and updates if `Tab`s are added or removed.\n\t */\n\t@ContentChildren(Tab, { descendants: false }) tabs: QueryList<Tab>;\n\t/**\n\t * Content child of the projected header component\n\t */\n\t// @ts-ignore\n\t@ContentChild(TabHeaders, { static: false }) tabHeaders;\n\n\t/**\n\t * After content is initialized update `Tab`s to cache (if turned on) and set the initial\n\t * selected Tab item.\n\t */\n\tngAfterContentInit() {\n\t\tif (this.tabHeaders) {\n\t\t\tthis.tabHeaders.cacheActive = this.cacheActive;\n\t\t}\n\n\t\tthis.tabs.forEach(tab => {\n\t\t\ttab.tabIndex = this.isNavigation ? null : 0;\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.tabHeaders && changes.cacheActive) {\n\t\t\tthis.tabHeaders.cacheActive = this.cacheActive;\n\t\t}\n\n\t\tif (this.tabs && changes.isNavigation) {\n\t\t\tthis.tabs.forEach(tab => {\n\t\t\t\ttab.tabIndex = this.isNavigation ? null : 0;\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * true if the n-tab's are passed directly to the component as children\n\t */\n\thasTabHeaders() {\n\t\treturn this.tabs.length > 0;\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { UtilsModule } from \"carbon-components-angular/utils\";\n\nimport { Tabs } from \"./tabs.component\";\nimport { Tab } from \"./tab.component\";\nimport { TabHeaders } from \"./tab-headers.component\";\nimport { TabHeader } from \"./tab-header.component\";\nimport { TabHeaderGroup } from \"./tab-header-group.component\";\n\n@NgModule({\n\tdeclarations: [\n\t\tTabs,\n\t\tTab,\n\t\tTabHeaders,\n\t\tTabHeader,\n\t\tTabHeaderGroup\n\t],\n\texports: [\n\t\tTabs,\n\t\tTab,\n\t\tTabHeaders,\n\t\tTabHeader,\n\t\tTabHeaderGroup\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tUtilsModule\n\t]\n})\nexport class TabsModule {}\n"],"names":["Object","defineProperty","TabHeader","prototype","this","_cacheActive","shouldCache","paneReference","cacheActive","tabIndex","ngAfterViewInit","_this","setTimeout","title","tabItem","nativeElement","textContent","selectTab","focus","disabled","selected","emit","active","Component","args","selector","template","Input","Output","ViewChild","static","EventEmitter","TabHeaderGroup","tabList","headerContainer","scrollWidth","clientWidth","hasHorizontalOverflow","scrollLeft","keyboardInput","event","tabHeadersArray","Array","from","tabHeaderQuery","key","currentSelectedIndex","length","preventDefault","followFocus","ngOnInit","eventService","on","window","handleScroll","ngAfterContentInit","selectedSubscriptionTracker","unsubscribe","toArray","forEach","tabHeader","paneTabIndex","isNavigation","selectedSubscriptions","subscribe","indexOf","filter","header","filteredHeader","add","ngOnChanges","changes","getSelectedTab","headingIsTemplate","heading","changeDetectorRef","markForCheck","handleOverflowNavClick","direction","multiplier","OVERFLOW_BUTTON_OFFSET","leftEdgeReached","rightEdgeReached","rightOverflowNavButton","leftOverflowNavButton","handleOverflowNavMouseDown","overflowNavInterval","setInterval","clearInterval","handleOverflowNavMouseUp","ElementRef","ChangeDetectorRef","EventService","ContentChildren","HostListener","elementRef","skeleton","type","Subscription","nextId","Tab","TemplateRef","doSelect","shouldRender","HostBinding","id","attrClass","TabHeaders","tabsArray","tabs","currentSelectedTab","allTabHeaders","target","first","tabInput","tabQuery","tab","setFirstTab","onTabFocus","ref","index","parentElement","find","_tab","firstTab","ViewChildren","firstVisibleTab","Tabs","tabHeaders","hasTabHeaders","descendants","ContentChild","position","NgModule","declarations","exports","imports","CommonModule","UtilsModule","TabsModule"],"mappings":"okBAwDCA,OAAAC,eAAaC,EAAAC,UAAA,cAAW,C,IAexB,WACC,OAAOC,KAAKC,c,IAhBb,SAAyBC,GACxBF,KAAKC,aAAeC,EAGhBF,KAAKG,gBACRH,KAAKG,cAAcC,YAAcJ,KAAKI,c,gCAIxCR,OAAAC,eAAaC,EAAAC,UAAA,eAAY,C,IAAzB,SAA0BM,GACrBL,KAAKG,gBACRH,KAAKG,cAAcE,SAAWA,I,gCAmBhCP,EAAAC,UAAAO,gBAAA,WAAA,IAAAC,EAAAP,KACCQ,WAAW,WACVD,EAAKE,MAAQF,EAAKE,MAAQF,EAAKE,MAAQF,EAAKG,QAAQC,cAAcC,eAIpEd,EAAAC,UAAAc,UAAA,WACCb,KAAKU,QAAQC,cAAcG,QACtBd,KAAKe,WACTf,KAAKgB,SAASC,OACdjB,KAAKkB,QAAS,EACVlB,KAAKG,gBACRH,KAAKG,cAAce,QAAS,K,oBAtF/BC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,iBACVC,SAAU,iqB,gCA6BTC,EAAAA,Q,gBAIAA,EAAAA,Q,qBAIAA,EAAAA,Q,aACAA,EAAAA,Q,mBAIAA,EAAAA,Q,oBASAA,EAAAA,Q,gBAcAC,EAAAA,S,eAGAC,EAAAA,UAASL,KAAA,CAAC,UAAW,CAAEM,UAAQ,OAoBjC5B,GA1FA,SAAAA,IA+BUE,KAAAkB,QAAS,EAITlB,KAAAe,UAAW,EAgCVf,KAAAgB,SAAW,IAAIW,EAAAA,aAKf3B,KAAAC,cAAe,E,OC8DzBL,OAAAC,eAAW+B,EAAA7B,UAAA,wBAAqB,C,IAAhC,WACC,IAAM8B,EAAU7B,KAAK8B,gBAAgBnB,cACrC,OAAOkB,EAAQE,YAAcF,EAAQG,a,gCAGtCpC,OAAAC,eAAW+B,EAAA7B,UAAA,8BAA2B,C,IAAtC,WACC,IAAM8B,EAAU7B,KAAK8B,gBAAgBnB,cACrC,OAAQX,KAAKiC,wBAA0BJ,EAAQK,Y,gCAGhDtC,OAAAC,eAAW+B,EAAA7B,UAAA,+BAA4B,C,IAAvC,WACC,IAAM8B,EAAU7B,KAAK8B,gBAAgBnB,cACrC,OAAQX,KAAKiC,uBACXJ,EAAQK,WAAaL,EAAQG,cAAiBH,EAAQE,a,gCAqBzDH,EAAA7B,UAAAoC,cADA,SACcC,GACb,IAAIC,EAAkBC,MAAMC,KAAUvC,KAAKwC,gBAEzB,UAAdJ,EAAMK,KAAiC,eAAdL,EAAMK,MAC9BzC,KAAK0C,qBAAuBL,EAAgBM,OAAS,GACxDP,EAAMQ,iBACF5C,KAAK6C,cAAgBR,EAAgBrC,KAAK0C,qBAAuB,GAAG3B,SACvEsB,EAAgBrC,KAAK0C,qBAAuB,GAAG7B,aAE/CwB,EAAgBrC,KAAK0C,qBAAuB,GAAGhC,QAAQC,cAAcG,QACrEd,KAAK0C,0BAGNN,EAAMQ,iBACF5C,KAAK6C,cAAgBR,EAAgB,GAAGtB,SAC3CsB,EAAgB,GAAGxB,aAEnBwB,EAAgB,GAAG3B,QAAQC,cAAcG,QACzCd,KAAK0C,qBAAuB,KAKb,SAAdN,EAAMK,KAAgC,cAAdL,EAAMK,MACD,EAA5BzC,KAAK0C,sBACRN,EAAMQ,iBACF5C,KAAK6C,cAAgBR,EAAgBrC,KAAK0C,qBAAuB,GAAG3B,SACvEsB,EAAgBrC,KAAK0C,qBAAuB,GAAG7B,aAE/CwB,EAAgBrC,KAAK0C,qBAAuB,GAAGhC,QAAQC,cAAcG,QACrEd,KAAK0C,0BAGNN,EAAMQ,iBACF5C,KAAK6C,cAAgBR,EAAgBA,EAAgBM,OAAS,GAAG5B,SACpEsB,EAAgBA,EAAgBM,OAAS,GAAG9B,aAE5CwB,EAAgBA,EAAgBM,OAAS,GAAGjC,QAAQC,cAAcG,QAClEd,KAAK0C,qBAAuBL,EAAgBM,OAAS,KAKtC,SAAdP,EAAMK,MACTL,EAAMQ,iBACF5C,KAAK6C,cAAgBR,EAAgB,GAAGtB,SAC3CsB,EAAgB,GAAGxB,aAEnBwB,EAAgB,GAAG3B,QAAQC,cAAcG,QACzCd,KAAK0C,qBAAuB,IAIZ,QAAdN,EAAMK,MACTL,EAAMQ,iBACF5C,KAAK6C,cAAgBR,EAAgBA,EAAgBM,OAAS,GAAG5B,SACpEsB,EAAgBA,EAAgBM,OAAS,GAAG9B,aAE5CwB,EAAgBA,EAAgBM,OAAS,GAAGjC,QAAQC,cAAcG,QAClEd,KAAK0C,qBAAuBL,EAAgBM,OAAS,IAKpC,MAAdP,EAAMK,KAA6B,aAAdL,EAAMK,KAAwBzC,KAAK6C,aAC5DR,EAAgBrC,KAAK0C,sBAAsB7B,aAI7Ce,EAAA7B,UAAA+C,SAAA,WAAA,IAAAvC,EAAAP,KACCA,KAAK+C,aAAaC,GAAGC,OAAe,SAAU,WAAM,OAAA1C,EAAK2C,kBAG1DtB,EAAA7B,UAAAoD,mBAAA,WAAA,IAAA5C,EAAAP,KACCA,KAAKoD,4BAA4BC,cAE7BrD,KAAKwC,gBACRxC,KAAKwC,eAAec,UAClBC,QAAQ,SAAAC,GACRA,EAAUpD,YAAcG,EAAKH,YAC7BoD,EAAUC,aAAelD,EAAKmD,aAAe,KAAO,IAIvD,IAAMC,EAAwB3D,KAAKwC,eAAec,UAAUC,QAAQ,SAAAC,GACnEA,EAAUxC,SAAS4C,UAAU,WAC5BrD,EAAKmC,qBAAuBnC,EAAKiC,eAAec,UAAUO,QAAQL,GAGlEjD,EAAKiC,eAAec,UAAUQ,OAAO,SAAAC,GAAU,OAAAA,IAAWP,IACxDD,QAAQ,SAAAS,GACRA,EAAe9C,QAAS,EACpB8C,EAAe7D,gBAClB6D,EAAe7D,cAAce,QAAS,SAK3ClB,KAAKoD,4BAA4Ba,IAAIN,GAErCnD,WAAW,WAAM,OAAAD,EAAKiC,eAAec,UAAU/C,EAAKmC,sBAAsB7B,eAG3Ee,EAAA7B,UAAAmE,YAAA,SAAYC,GAAZ,IAAA5D,EAAAP,KACKA,KAAKwC,iBACJ2B,EAAQ/D,aACXJ,KAAKwC,eAAec,UAAUC,QAAQ,SAAAC,GAAa,OAAAA,EAAUpD,YAAcG,EAAKH,cAG7E+D,EAAQT,cACX1D,KAAKwC,eAAec,UAClBC,QAAQ,SAAAC,GAAa,OAAAA,EAAUC,aAAelD,EAAKmD,aAAe,KAAO,MAKvE9B,EAAA7B,UAAAqE,eAAP,WACC,IAAMpD,EAAYhB,KAAKwC,eAAec,UAAUtD,KAAK0C,sBACrD,OAAI1B,GAGG,CACNqD,mBAAmB,EACnBC,QAAS,KAIJ1C,EAAA7B,UAAAmD,aAAP,WACClD,KAAKuE,kBAAkBC,gBAGjB5C,EAAA7B,UAAA0E,uBAAP,SAA8BC,EAAmBC,QAAA,IAAAA,IAAAA,EAAA,IAChD,IAAM9C,EAAU7B,KAAK8B,gBAAgBnB,cAE7BqB,EAAAH,EAAAG,YAAaE,EAAAL,EAAAK,WAAYH,EAAAF,EAAAE,YACf,IAAd2C,GAAoBxC,IACvBL,EAAQK,YAAclC,KAAK4E,wBAG5B/C,EAAQK,YAAcwC,EAAYC,EAElC,IAAME,GACU,IAAfH,GAAoBxC,EAAalC,KAAK4E,uBACjCE,EACS,IAAdJ,GACAxC,EAAaF,GAAeD,EAAc/B,KAAK4E,uBAE5CC,GACH7E,KAAK+E,uBAAuBpE,cAAcG,QAEvCgE,GACH9E,KAAKgF,sBAAsBrE,cAAcG,SAIpCc,EAAA7B,UAAAkF,2BAAP,SAAkCP,GAAlC,IAAAnE,EAAAP,KACO6B,EAAU7B,KAAK8B,gBAAgBnB,cAErCX,KAAKkF,oBAAsBC,YAAY,WAC9B,IAAAnD,EAAAH,EAAAG,YAAaE,EAAAL,EAAAK,WAAYH,EAAAF,EAAAE,YAG3B8C,GAAiC,IAAfH,GAAoBxC,EAAa3B,EAAKqE,uBACxDE,EACS,IAAdJ,GACAxC,EAAaF,GAAeD,EAAcxB,EAAKqE,wBAE5CC,GAAmBC,IACtBM,cAAc7E,EAAK2E,qBAIpB3E,EAAKkE,uBAAuBC,MAIvB9C,EAAA7B,UAAAsF,yBAAP,WACCD,cAAcpF,KAAKkF,sB,oBAhVpB/D,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,uBACVC,SAAU,m4E,yCAhBVgE,EAAAA,Y,MAIAC,EAAAA,mB,MAMQC,EAAAA,gB,qCAkFPjE,EAAAA,Q,gBAIAA,EAAAA,Q,iBAIAA,EAAAA,Q,sBAIAA,EAAAA,Q,oBAEAA,EAAAA,Q,qBAEAA,EAAAA,Q,mBAMAA,EAAAA,Q,oBAEAA,EAAAA,Q,YACAA,EAAAA,Q,sBAKAkE,EAAAA,gBAAerE,KAAA,CAACtB,K,uBAEhB2B,EAAAA,UAASL,KAAA,CAAC,UAAW,CAAEM,UAAQ,M,8BAE/BD,EAAAA,UAASL,KAAA,CAAC,yBAA0B,CAAEM,UAAQ,M,6BAE9CD,EAAAA,UAASL,KAAA,CAAC,wBAAyB,CAAEM,UAAQ,M,qBA4C7CgE,EAAAA,aAAYtE,KAAA,CAAC,UAAW,CAAC,cAoL3BQ,GA9LC,SAAAA,EACW+D,EACApB,EACAxB,GAFA/C,KAAA2F,WAAAA,EACA3F,KAAAuE,kBAAAA,EACAvE,KAAA+C,aAAAA,EArEF/C,KAAA4F,UAAW,EAkBX5F,KAAAI,aAAc,EAEdJ,KAAA0D,cAAe,EACf1D,KAAA6F,KAAgC,UAezC7F,KAAAoD,4BAA8B,IAAI0C,EAAAA,aAK3B9F,KAAA0C,qBAAuB,EAmB9B1C,KAAA4E,uBAAyB,GAEjB5E,KAAAC,cAAe,ECzJxB,IAAI8F,EAAS,EA8CbC,GAwDCpG,OAAAC,eAAamG,EAAAjG,UAAA,cAAW,C,IAaxB,WACC,OAAOC,KAAKC,c,IAdb,SAAyBC,GACxBF,KAAKC,aAAeC,G,gCAsBrB8F,EAAAjG,UAAA+C,SAAA,WACK9C,KAAKsE,mBAAmB2B,EAAAA,cAC3BjG,KAAKqE,mBAAoB,IAO3B2B,EAAAjG,UAAAmG,SAAA,WACClG,KAAKgB,SAASC,QAMf+E,EAAAjG,UAAAoG,aAAA,WACC,OAAOnG,KAAKkB,QAAUlB,KAAKI,a,oBAhG5Be,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,UACVC,SAAU,+T,iCAuBTC,EAAAA,Q,aAOAA,EAAAA,Q,eAIAA,EAAAA,Q,cAKAA,EAAAA,Q,gBAIAA,EAAAA,Q,gBAEAA,EAAAA,Q,UAKAA,EAAAA,Q,mBAIAA,EAAAA,Q,gBAMAC,EAAAA,S,iBAKA4E,EAAAA,YAAWhF,KAAA,CAAC,cA+Bd4E,GAlGA,SAAAA,IAoBQhG,KAAAqE,mBAAoB,EAqBlBrE,KAAAkB,QAAS,EAITlB,KAAAe,UAAW,EAEXf,KAAAK,SAAW,EAKXL,KAAAqG,GAAK,SAASN,IAUb/F,KAAAgB,SAA+B,IAAIW,EAAAA,aAKrB3B,KAAAsG,UAAYtG,KAAKqG,GAM/BrG,KAAAC,cAAe,EC3G1B,IAAAsG,GA2KC3G,OAAAC,eAAW0G,EAAAxG,UAAA,wBAAqB,C,IAAhC,WACC,IAAM8B,EAAU7B,KAAK8B,gBAAgBnB,cACrC,OAAOkB,EAAQE,YAAcF,EAAQG,a,gCAGtCpC,OAAAC,eAAW0G,EAAAxG,UAAA,8BAA2B,C,IAAtC,WACC,IAAM8B,EAAU7B,KAAK8B,gBAAgBnB,cACrC,OAAQX,KAAKiC,wBAA0BJ,EAAQK,Y,gCAGhDtC,OAAAC,eAAW0G,EAAAxG,UAAA,+BAA4B,C,IAAvC,WACC,IAAM8B,EAAU7B,KAAK8B,gBAAgBnB,cACrC,OAAQX,KAAKiC,uBACXJ,EAAQK,WAAaL,EAAQG,cAAiBH,EAAQE,a,gCAmBzDwE,EAAAxG,UAAAoC,cADA,SACcC,GACb,IAAIoE,EAAYlE,MAAMC,KAAUvC,KAAKyG,MAGnB,UAAdrE,EAAMK,KAAiC,eAAdL,EAAMK,MAC9BzC,KAAK0G,mBAAqB1G,KAAK2G,cAAchE,OAAS,GACzDP,EAAMQ,iBACF5C,KAAK6C,aACR7C,KAAKa,UAAUuB,EAAMwE,OAAQJ,EAAUxG,KAAK0G,mBAAqB,GAAI1G,KAAK0G,oBAE3E1G,KAAK2G,cAAcrD,UAAUtD,KAAK0G,mBAAqB,GAAG/F,cAAcG,UAExEsB,EAAMQ,iBACF5C,KAAK6C,aACR7C,KAAKa,UAAUuB,EAAMwE,OAAQJ,EAAU,GAAI,GAE5CxG,KAAK2G,cAAcE,MAAMlG,cAAcG,UAKvB,SAAdsB,EAAMK,KAAgC,cAAdL,EAAMK,MACH,EAA1BzC,KAAK0G,oBACRtE,EAAMQ,iBACF5C,KAAK6C,aACR7C,KAAKa,UAAUuB,EAAMwE,OAAQJ,EAAUxG,KAAK0G,mBAAqB,GAAI1G,KAAK0G,oBAE3E1G,KAAK2G,cAAcrD,UAAUtD,KAAK0G,mBAAqB,GAAG/F,cAAcG,UAExEsB,EAAMQ,iBACF5C,KAAK6C,aACR7C,KAAKa,UAAUuB,EAAMwE,OAAQJ,EAAUxG,KAAK2G,cAAchE,OAAS,GAAI3C,KAAK2G,cAAchE,QAE3F3C,KAAK2G,cAAcrD,UAAUtD,KAAK2G,cAAchE,OAAS,GAAGhC,cAAcG,UAI1D,SAAdsB,EAAMK,MACTL,EAAMQ,iBACF5C,KAAK6C,aACR7C,KAAKa,UAAUuB,EAAMwE,OAAQJ,EAAU,GAAI,GAE5CxG,KAAK2G,cAAcrD,UAAU,GAAG3C,cAAcG,SAG7B,QAAdsB,EAAMK,MACTL,EAAMQ,iBACF5C,KAAK6C,aACR7C,KAAKa,UAAUuB,EAAMwE,OAAQJ,EAAUxG,KAAK2G,cAAchE,OAAS,GAAI3C,KAAK2G,cAAchE,QAE3F3C,KAAK2G,cAAcrD,UAAUtD,KAAK2G,cAAchE,OAAS,GAAGhC,cAAcG,SAIxD,MAAdsB,EAAMK,KAA6B,aAAdL,EAAMK,KAAwBzC,KAAK6C,aAC5D7C,KAAKa,UAAUuB,EAAMwE,OAAQJ,EAAUxG,KAAK0G,oBAAqB1G,KAAK0G,qBAIxEH,EAAAxG,UAAA+C,SAAA,WAAA,IAAAvC,EAAAP,KACCA,KAAK+C,aAAaC,GAAGC,OAAe,SAAU,WAAM,OAAA1C,EAAK2C,kBAG1DqD,EAAAxG,UAAAoD,mBAAA,WAAA,IAAA5C,EAAAP,KACMA,KAAK8G,SAGT9G,KAAKyG,KAAOzG,KAAK8G,SAFjB9G,KAAKyG,KAAOzG,KAAK+G,SAKlB/G,KAAKyG,KAAKlD,QAAQ,SAAAyD,GAAO,OAAAA,EAAI5G,YAAcG,EAAKH,cAChDJ,KAAKyG,KAAKtC,QAAQP,UAAU,WAC3BrD,EAAK0G,gBAENjH,KAAKiH,eAGNV,EAAAxG,UAAAmE,YAAA,SAAYC,GAAZ,IAAA5D,EAAAP,KACKA,KAAKyG,MAAQtC,EAAQ/D,aACxBJ,KAAKyG,KAAKlD,QAAQ,SAAAyD,GAAO,OAAAA,EAAI5G,YAAcG,EAAKH,eAO3CmG,EAAAxG,UAAAmH,WAAP,SAAkBC,EAAkBC,GACnCpH,KAAK0G,mBAAqBU,EAE1BpH,KAAK8B,gBAAgBnB,cAAc0G,cAAcnF,WAAa,GAGxDqE,EAAAxG,UAAAqE,eAAP,WACC,IAAMpD,EAAWhB,KAAKyG,KAAKa,KAAK,SAAAN,GAAO,OAAAA,EAAI9F,SAC3C,OAAIF,GAGG,CAAEqD,mBAAmB,EAAOC,QAAS,KAMtCiC,EAAAxG,UAAAc,UAAP,SAAiBsG,EAAkBH,EAAU3G,GACxC2G,EAAIjG,WAIRf,KAAK0G,mBAAqBrG,EAC1BL,KAAKyG,KAAKlD,QAAQ,SAAAgE,GAAQ,OAAAA,EAAKrG,QAAS,IACxC8F,EAAI9F,QAAS,EACb8F,EAAId,aAGEK,EAAAxG,UAAAmD,aAAP,WACClD,KAAKuE,kBAAkBC,gBAGjB+B,EAAAxG,UAAA0E,uBAAP,SAA8BC,EAAmBC,QAAA,IAAAA,IAAAA,EAAA,IAChD,IAAM9C,EAAU7B,KAAK8B,gBAAgBnB,cAE7BqB,EAAAH,EAAAG,YAAaE,EAAAL,EAAAK,WAAYH,EAAAF,EAAAE,YACf,IAAd2C,GAAoBxC,IACvBL,EAAQK,YAAclC,KAAK4E,wBAG5B/C,EAAQK,YAAcwC,EAAYC,EAElC,IAAME,GACU,IAAfH,GAAoBxC,EAAalC,KAAK4E,uBACjCE,EACS,IAAdJ,GACAxC,EAAaF,GAAeD,EAAc/B,KAAK4E,uBAE5CC,GACH7E,KAAK+E,uBAAuBpE,cAAcG,QAEvCgE,GACH9E,KAAKgF,sBAAsBrE,cAAcG,SAIpCyF,EAAAxG,UAAAkF,2BAAP,SAAkCP,GAAlC,IAAAnE,EAAAP,KACO6B,EAAU7B,KAAK8B,gBAAgBnB,cAErCX,KAAKkF,oBAAsBC,YAAY,WAC9B,IAAAnD,EAAAH,EAAAG,YAAaE,EAAAL,EAAAK,WAAYH,EAAAF,EAAAE,YAG3B8C,GAAiC,IAAfH,GAAoBxC,EAAa3B,EAAKqE,uBACxDE,EACS,IAAdJ,GACAxC,EAAaF,GAAeD,EAAcxB,EAAKqE,wBAE5CC,GAAmBC,IACtBM,cAAc7E,EAAK2E,qBAIpB3E,EAAKkE,uBAAuBC,MAIvB6B,EAAAxG,UAAAsF,yBAAP,WACCD,cAAcpF,KAAKkF,sBAMVqB,EAAAxG,UAAAkH,YAAV,WAAA,IAAA1G,EAAAP,KACCQ,WAAW,WACV,IAAIgH,EAAWjH,EAAKkG,KAAKa,KAAK,SAAAN,GAAO,OAAAA,EAAI9F,UACpCsG,GAAYjH,EAAKkG,KAAKI,SAC1BW,EAAWjH,EAAKkG,KAAKI,OACZ3F,QAAS,GAEfsG,GACHA,EAAStB,c,oBA7XZ/E,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,kBACVC,SAAU,2yH,yCAjBVgE,EAAAA,Y,MAKAC,EAAAA,mB,MAEQC,EAAAA,gB,kCAyHPjE,EAAAA,MAAKH,KAAA,CAAC,U,mBAKNG,EAAAA,Q,mBAIAA,EAAAA,Q,gBAIAA,EAAAA,Q,iBAIAA,EAAAA,Q,sBAIAA,EAAAA,Q,qBAEAA,EAAAA,Q,oBACAA,EAAAA,Q,YAEAA,EAAAA,Q,uBAMAE,EAAAA,UAASL,KAAA,CAAC,UAAW,CAAEM,UAAQ,M,8BAE/BD,EAAAA,UAASL,KAAA,CAAC,yBAA0B,CAAEM,UAAQ,M,6BAE9CD,EAAAA,UAASL,KAAA,CAAC,wBAAyB,CAAEM,UAAQ,M,gBAI7C+D,EAAAA,gBAAerE,KAAA,CAAC4E,K,qBAYhByB,EAAAA,aAAYrG,KAAA,CAAC,a,qBAqCbsE,EAAAA,aAAYtE,KAAA,CAAC,UAAW,CAAC,cAuL3BmF,GAjMC,SAAAA,EACWZ,EACApB,EACAxB,GAFA/C,KAAA2F,WAAAA,EACA3F,KAAAuE,kBAAAA,EACAvE,KAAA+C,aAAAA,EA7EF/C,KAAAI,aAAc,EAQdJ,KAAA4F,UAAW,EAaX5F,KAAA6F,KAAgC,UAsBlC7F,KAAA0H,gBAAkB,EA2BzB1H,KAAA4E,uBAAyB,GC7K1B,IAAA+C,GAgFCA,EAAA5H,UAAAoD,mBAAA,WAAA,IAAA5C,EAAAP,KACKA,KAAK4H,aACR5H,KAAK4H,WAAWxH,YAAcJ,KAAKI,aAGpCJ,KAAKyG,KAAKlD,QAAQ,SAAAyD,GACjBA,EAAI3G,SAAWE,EAAKmD,aAAe,KAAO,KAI5CiE,EAAA5H,UAAAmE,YAAA,SAAYC,GAAZ,IAAA5D,EAAAP,KACKA,KAAK4H,YAAczD,EAAQ/D,cAC9BJ,KAAK4H,WAAWxH,YAAcJ,KAAKI,aAGhCJ,KAAKyG,MAAQtC,EAAQT,cACxB1D,KAAKyG,KAAKlD,QAAQ,SAAAyD,GACjBA,EAAI3G,SAAWE,EAAKmD,aAAe,KAAO,KAQ7CiE,EAAA5H,UAAA8H,cAAA,WACC,OAA0B,EAAnB7H,KAAKyG,KAAK9D,Q,oBA1GlBxB,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,WACVC,SAAU,42B,kCAkCTC,EAAAA,Q,mBAIAA,EAAAA,Q,mBAIAA,EAAAA,Q,gBAIAA,EAAAA,Q,oBAIAA,EAAAA,Q,iBAIAA,EAAAA,Q,sBAIAA,EAAAA,Q,YAIAA,EAAAA,Q,YAKAkE,EAAAA,gBAAerE,KAAA,CAAC4E,EAAK,CAAE8B,aAAa,M,kBAKpCC,EAAAA,aAAY3G,KAAA,CAACmF,EAAY,CAAE7E,UAAQ,OAkCrCiG,GA5GA,SAAAA,IAoCU3H,KAAAgI,SAA6B,MAI7BhI,KAAAI,aAAc,EAIdJ,KAAA6C,aAAc,EAId7C,KAAA4F,UAAW,EAIX5F,KAAA0D,cAAe,EAYf1D,KAAA6F,KAAgC,U,2BC7FzCoC,EAAAA,SAAQ7G,KAAA,CAAC,CACT8G,aAAc,CACbP,EACA3B,EACAO,EACAzG,EACA8B,GAEDuG,QAAS,CACRR,EACA3B,EACAO,EACAzG,EACA8B,GAEDwG,QAAS,CACRC,EAAAA,aACAC,EAAAA,iBAGuBC,GApBzB,SAAAA,K"}