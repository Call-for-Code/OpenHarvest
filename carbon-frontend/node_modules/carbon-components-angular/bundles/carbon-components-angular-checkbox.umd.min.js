/**
 *
 * carbon-angular v0.0.0 | carbon-components-angular-checkbox.umd.min.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("carbon-components-angular/checkbox",["exports","@angular/core","@angular/forms","@angular/common"],t):t((e["carbon-components-angular"]=e["carbon-components-angular"]||{},e["carbon-components-angular"].checkbox={}),e.ng.core,e.ng.forms,e.ng.common)}(this,function(t,n,e,i){"use strict";var a;(a=t.CheckboxState||(t.CheckboxState={}))[a.Init=0]="Init",a[a.Indeterminate=1]="Indeterminate",a[a.Checked=2]="Checked",a[a.Unchecked=3]="Unchecked";var o=function(){},r=(Object.defineProperty(c.prototype,"ariaLabel",{get:function(){return this._ariaLabel},set:function(e){this._ariaLabel=e},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"ariaLabelledby",{get:function(){return this._ariaLabelledby},set:function(e){this._ariaLabelledby=e},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"indeterminate",{get:function(){return this._indeterminate},set:function(e){e!==this._indeterminate&&(this._indeterminate=e,this._indeterminate?this.transitionCheckboxState(t.CheckboxState.Indeterminate):this.transitionCheckboxState(this.checked?t.CheckboxState.Checked:t.CheckboxState.Unchecked),this.inputCheckbox.nativeElement.indeterminate=e,this.changeDetectorRef.markForCheck(),this.indeterminateChange.emit(this._indeterminate))},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"checked",{get:function(){return this._checked},set:function(e){this.setChecked(e,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"checkboxWrapperClass",{get:function(){return!this.inline},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"formItemClass",{get:function(){return!this.inline},enumerable:!0,configurable:!0}),c.prototype.toggle=function(){this.setChecked(!this.checked,!0)},c.prototype.writeValue=function(e){this.setChecked(!!e,!0)},c.prototype.registerOnChange=function(e){this.propagateChange=e},c.prototype.registerOnTouched=function(e){this.onTouched=e},c.prototype.focusOut=function(){this.onTouched()},c.prototype.onChange=function(e){e.stopPropagation()},c.prototype.onClick=function(e){if(this.click.observers.length)return e.preventDefault(),void this.click.emit();this.disabled||(this.toggle(),this.transitionCheckboxState(this._checked?t.CheckboxState.Checked:t.CheckboxState.Unchecked),this.emitChangeEvent())},c.prototype.transitionCheckboxState=function(e){this.currentCheckboxState=e},c.prototype.emitChangeEvent=function(){var e=new o;e.source=this,e.checked=this.checked,this.change.emit(e),this.checkedChange.emit(this.checked),this.propagateChange(this.checked)},c.prototype.ngAfterViewInit=function(){this.indeterminate&&(this.inputCheckbox.nativeElement.indeterminate=!0)},c.prototype.setChecked=function(e,t){var n=this;e!==this._checked&&(this._checked=e,t&&this._indeterminate&&(this._indeterminate=!1,Promise.resolve().then(function(){n.indeterminateChange.emit(n._indeterminate)})),this.changeDetectorRef.markForCheck())},c.checkboxCount=0,c.decorators=[{type:n.Component,args:[{selector:"ibm-checkbox",template:'\n\t\t<div class="bx--form-item bx--checkbox-wrapper">\n\t\t\t<input\n\t\t\t\t#inputCheckbox\n\t\t\t\tclass="bx--checkbox"\n\t\t\t\ttype="checkbox"\n\t\t\t\t[id]="id + \'_input\'"\n\t\t\t\t[value]="value"\n\t\t\t\t[name]="name"\n\t\t\t\t[required]="required"\n\t\t\t\t[checked]="checked"\n\t\t\t\t[disabled]="disabled"\n\t\t\t\t[attr.aria-labelledby]="ariaLabelledby"\n\t\t\t\t[attr.aria-checked]="(indeterminate ? \'mixed\' : checked)"\n\t\t\t\t(change)="onChange($event)"\n\t\t\t\t(click)="onClick($event)">\n\t\t\t<label\n\t\t\t\t[for]="id + \'_input\'"\n\t\t\t\t[attr.aria-label]="ariaLabel"\n\t\t\t\tclass="bx--checkbox-label"\n\t\t\t\t[ngClass]="{\n\t\t\t\t\t\'bx--skeleton\' : skeleton\n\t\t\t\t}">\n\t\t\t\t<span [ngClass]="{\'bx--visually-hidden\' : hideLabel}" class="bx--checkbox-label-text">\n\t\t\t\t\t<ng-content></ng-content>\n\t\t\t\t</span>\n\t\t\t</label>\n\t\t</div>\n\t',providers:[{provide:e.NG_VALUE_ACCESSOR,useExisting:c,multi:!0}],changeDetection:n.ChangeDetectionStrategy.OnPush}]}],c.ctorParameters=function(){return[{type:n.ChangeDetectorRef}]},c.propDecorators={size:[{type:n.Input}],nested:[{type:n.Input}],inline:[{type:n.Input}],disabled:[{type:n.Input}],skeleton:[{type:n.Input}],hideLabel:[{type:n.Input}],name:[{type:n.Input}],id:[{type:n.Input}],required:[{type:n.Input}],value:[{type:n.Input}],ariaLabel:[{type:n.Input,args:["aria-label"]}],_ariaLabel:[{type:n.Input,args:["ariaLabel"]}],ariaLabelledby:[{type:n.Input,args:["aria-labelledby"]}],_ariaLabelledby:[{type:n.Input,args:["ariaLabelledby"]}],indeterminate:[{type:n.Input}],checked:[{type:n.Input}],checkboxWrapperClass:[{type:n.HostBinding,args:["class.bx--checkbox-wrapper"]}],formItemClass:[{type:n.HostBinding,args:["class.bx--form-item"]}],click:[{type:n.Output}],change:[{type:n.Output}],checkedChange:[{type:n.Output}],indeterminateChange:[{type:n.Output}],inputCheckbox:[{type:n.ViewChild,args:["inputCheckbox",{"static":!1}]}],focusOut:[{type:n.HostListener,args:["focusout"]}]},c);function c(e){this.changeDetectorRef=e,this.size="md",this.inline=!1,this.disabled=!1,this.skeleton=!1,this.hideLabel=!1,this.id="checkbox-"+c.checkboxCount,this._ariaLabel="",this.click=new n.EventEmitter,this.change=new n.EventEmitter,this.checkedChange=new n.EventEmitter,this.indeterminateChange=new n.EventEmitter,this._checked=!1,this._indeterminate=!1,this.currentCheckboxState=t.CheckboxState.Init,this.onTouched=function(){},this.propagateChange=function(e){},c.checkboxCount++}var h=(s.decorators=[{type:n.NgModule,args:[{declarations:[r],exports:[r],imports:[i.CommonModule,e.FormsModule]}]}],s);function s(){}t.Checkbox=r,t.CheckboxChange=o,t.CheckboxModule=h,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=carbon-components-angular-checkbox.umd.min.js.map