{"version":3,"sources":["ng://carbon-components-angular/content-switcher/content-switcher-option.directive.ts","ng://carbon-components-angular/content-switcher/content-switcher.component.ts","ng://carbon-components-angular/content-switcher/content-switcher.module.ts"],"sourcesContent":["import {\n\tDirective,\n\tHostBinding,\n\tInput,\n\tHostListener,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmContentOption]\"\n})\nexport class ContentSwitcherOption {\n\t/**\n\t * Used to activate the option. Only one option may be `active` at a time\n\t */\n\t@Input() set active (value: boolean) {\n\t\tthis._active = value;\n\t\tthis.selectedClass = value;\n\t\tthis.ariaSelected = value;\n\t\tthis.tabindex = value ? \"0\" : \"-1\";\n\t}\n\n\tget active() {\n\t\treturn this._active;\n\t}\n\n\t/**\n\t * Internal name for the option.\n\t * Should be something that identifies the option to the application.\n\t * Accessible from the `ContentSwitcher` `selected` emitter\n\t */\n\t@Input() name = \"option\";\n\n\t/**\n\t * Emits when the option is selected.\n\t */\n\t@Output() selected = new EventEmitter<boolean>();\n\n\t@Output() onClick = new EventEmitter<MouseEvent>();\n\n\t@Output() onFocus = new EventEmitter<FocusEvent>();\n\n\t@HostBinding(\"class\") switcherClass = \"bx--content-switcher-btn\";\n\t@HostBinding(\"class.bx--content-switcher--selected\") selectedClass = false;\n\t@HostBinding(\"attr.role\") role = \"tab\";\n\t@HostBinding(\"attr.aria-selected\") ariaSelected = false;\n\t@HostBinding(\"attr.tabIndex\") tabindex = \"-1\";\n\n\tprotected _active = false;\n\n\t@HostListener(\"click\", [\"$event\"])\n\thostClick(event: MouseEvent) {\n\t\tthis.onClick.emit(event);\n\t\t// skip setting and emitting if the option is already active\n\t\tif (this.active) { return; }\n\t\tthis.active = true;\n\t\tthis.selected.emit(true);\n\t}\n\n\t@HostListener(\"focus\", [\"$event\"])\n\tdoFocus(event: FocusEvent) {\n\t\tthis.onFocus.emit(event);\n\t\t// skip setting and emitting if the option is already active\n\t\tif (this.active) { return; }\n\t\tthis.active = true;\n\t\tthis.selected.emit(true);\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tContentChildren,\n\tQueryList,\n\tOutput,\n\tEventEmitter,\n\tAfterViewInit,\n\tHostListener,\n\tElementRef\n} from \"@angular/core\";\nimport { ContentSwitcherOption } from \"./content-switcher-option.directive\";\nimport { isFocusInLastItem, isFocusInFirstItem } from \"carbon-components-angular/common\";\n\n/**\n * The content switcher can be used for toggling between distinct options.\n * Similar to tabs, but without an associated content panel\n *\n * [See demo](../../?path=/story/content-switcher--basic)\n *\n * ```html\n * <ibm-content-switcher (selected)=\"selected($event)\">\n *\t\t<button ibmContentOption>First section</button>\n *\t\t<button ibmContentOption>Second section</button>\n *\t\t<button ibmContentOption>Third section</button>\n *\t</ibm-content-switcher>\n *\t```\n *\n * <example-url>../../iframe.html?id=content-switcher--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-content-switcher\",\n\ttemplate: `\n\t\t<div\n\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\tclass=\"bx--content-switcher\"\n\t\t\t[class.bx--content-switcher--light]=\"theme === 'light'\"\n\t\t\trole=\"tablist\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t`\n})\nexport class ContentSwitcher implements AfterViewInit {\n\t@Input() ariaLabel = \"content switcher\";\n\t/**\n\t * `light` or `dark` content switcher theme\n\t */\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n\n\t/**\n\t * Emits the activated `ContentSwitcherOption`\n\t */\n\t@Output() selected = new EventEmitter<ContentSwitcherOption>();\n\n\t@ContentChildren(ContentSwitcherOption) options: QueryList<ContentSwitcherOption>;\n\n\tconstructor(protected elementRef: ElementRef) {}\n\n\tngAfterViewInit() {\n\t\tconst firstActive = this.options.find(option => option.active);\n\t\t// delay setting active until the DOM has settled\n\t\tif (!firstActive) {\n\t\t\tsetTimeout(() => this.options.first.active = true);\n\t\t}\n\t\t// subscribe to each item, emit when one is selected, and reset the active states\n\t\tthis.options.forEach(option => {\n\t\t\toption.selected.subscribe((_: boolean) => {\n\t\t\t\tconst active = option;\n\t\t\t\tthis.options.forEach(option => {\n\t\t\t\t\tif (option !== active) {\n\t\t\t\t\t\toption.active = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.selected.emit(active);\n\t\t\t});\n\t\t});\n\t}\n\n\t@HostListener(\"keydown\", [\"$event\"])\n\thostkeys(event: KeyboardEvent) {\n\t\tconst buttonList = Array.from<any>(this.elementRef.nativeElement.querySelectorAll(\"[ibmContentOption]\"));\n\n\t\tswitch (event.key) {\n\t\t\tcase \"Right\": // IE specific value\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!isFocusInLastItem(event, buttonList))  {\n\t\t\t\t\tconst index = buttonList.findIndex(item => item === event.target);\n\t\t\t\t\tbuttonList[index + 1].focus();\n\t\t\t\t} else {\n\t\t\t\t\tbuttonList[0].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Left\": // IE specific value\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!isFocusInFirstItem(event, buttonList))  {\n\t\t\t\t\tconst index = buttonList.findIndex(item => item === event.target);\n\t\t\t\t\tbuttonList[index - 1].focus();\n\t\t\t\t} else {\n\t\t\t\t\tbuttonList[buttonList.length - 1].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Home\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbuttonList[0].focus();\n\t\t\t\tbreak;\n\n\t\t\tcase \"End\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbuttonList[buttonList.length - 1].focus();\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ContentSwitcher } from \"./content-switcher.component\";\nimport { ContentSwitcherOption } from \"./content-switcher-option.directive\";\n\n@NgModule({\n\tdeclarations: [\n\t\tContentSwitcher,\n\t\tContentSwitcherOption\n\t],\n\texports: [\n\t\tContentSwitcher,\n\t\tContentSwitcherOption\n\t],\n\timports: [CommonModule]\n})\nexport class ContentSwitcherModule { }\n"],"names":["Object","defineProperty","ContentSwitcherOption","prototype","this","_active","value","selectedClass","ariaSelected","tabindex","hostClick","event","onClick","emit","active","selected","doFocus","onFocus","Directive","args","selector","Input","Output","HostBinding","HostListener","name","EventEmitter","switcherClass","role","ContentSwitcher","ngAfterViewInit","_this","options","find","option","setTimeout","first","forEach","subscribe","_","hostkeys","index","buttonList","Array","from","elementRef","nativeElement","querySelectorAll","key","preventDefault","isFocusInLastItem","focus","findIndex","item","target","isFocusInFirstItem","length","Component","template","ElementRef","ContentChildren","ariaLabel","theme","NgModule","declarations","exports","imports","CommonModule","ContentSwitcherModule"],"mappings":"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"}