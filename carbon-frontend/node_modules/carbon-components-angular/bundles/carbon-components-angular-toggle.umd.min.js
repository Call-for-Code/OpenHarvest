/**
 *
 * carbon-angular v0.0.0 | carbon-components-angular-toggle.umd.min.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("carbon-components-angular/checkbox"),require("@angular/core"),require("@angular/forms"),require("@angular/common"),require("carbon-components-angular/i18n")):"function"==typeof define&&define.amd?define("carbon-components-angular/toggle",["exports","carbon-components-angular/checkbox","@angular/core","@angular/forms","@angular/common","carbon-components-angular/i18n"],e):e((t["carbon-components-angular"]=t["carbon-components-angular"]||{},t["carbon-components-angular"].toggle={}),t["carbon-components-angular"].checkbox,t.ng.core,t.ng.forms,t.ng.common,t["carbon-components-angular"].i18n)}(this,function(t,e,o,n,a,r){"use strict";var l,c=function(t,e){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};(l=t.ToggleState||(t.ToggleState={}))[l.Init=0]="Init",l[l.Indeterminate=1]="Indeterminate",l[l.Checked=2]="Checked",l[l.Unchecked=3]="Unchecked";var s,i,u,g=function(){},p=(s=e.Checkbox,c(i=b,u=s),i.prototype=null===u?Object.create(u):(f.prototype=u.prototype,new f),Object.defineProperty(b.prototype,"offText",{get:function(){return this._offValues.value},set:function(t){this._offValues.override(t)},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"onText",{get:function(){return this._onValues.value},set:function(t){this._onValues.override(t)},enumerable:!0,configurable:!0}),b.prototype.getOffText=function(){return this._offValues.subject},b.prototype.getOnText=function(){return this._onValues.subject},b.prototype.emitChangeEvent=function(){var t=new g;t.source=this,t.checked=this.checked,this.change.emit(t),this.checkedChange.emit(this.checked),this.propagateChange(this.checked)},b.prototype.isTemplate=function(t){return t instanceof o.TemplateRef},b.toggleCount=0,b.decorators=[{type:o.Component,args:[{selector:"ibm-toggle",template:'\n\t\t<label *ngIf="label" [id]="ariaLabelledby" class="bx--label">\n\t\t\t<ng-container *ngIf="!isTemplate(label)">{{label}}</ng-container>\n\t\t\t<ng-template *ngIf="isTemplate(label)" [ngTemplateOutlet]="label"></ng-template>\n\t\t</label>\n\t\t<input\n\t\t\tclass="bx--toggle-input"\n\t\t\ttype="checkbox"\n\t\t\t[ngClass]="{\n\t\t\t\t\'bx--toggle-input--small\': size === \'sm\',\n\t\t\t\t\'bx--skeleton\': skeleton\n\t\t\t}"\n\t\t\t[id]="id"\n\t\t\t[value]="value"\n\t\t\t[name]="name"\n\t\t\t[required]="required"\n\t\t\t[checked]="checked"\n\t\t\t[disabled]="disabled"\n\t\t\t[attr.aria-labelledby]="ariaLabelledby"\n\t\t\t[attr.aria-checked]="checked"\n\t\t\t(change)="onChange($event)"\n\t\t\t(click)="onClick($event)">\n\t\t<label\n\t\t\tclass="bx--toggle-input__label"\n\t\t\t[for]="id"\n\t\t\t[ngClass]="{\n\t\t\t\t\'bx--skeleton\': skeleton\n\t\t\t}">\n\t\t\t<span class="bx--toggle__switch">\n\t\t\t\t<span class="bx--toggle__text--off">{{(!skeleton ? getOffText() : null) | async }}</span>\n\t\t\t\t<span class="bx--toggle__text--on">{{(!skeleton ? getOnText() : null) | async}}</span>\n\t\t\t</span>\n\t\t</label>\n\t',providers:[{provide:n.NG_VALUE_ACCESSOR,useExisting:b,multi:!0}]}]}],b.ctorParameters=function(){return[{type:o.ChangeDetectorRef},{type:r.I18n}]},b.propDecorators={offText:[{type:o.Input}],onText:[{type:o.Input}],label:[{type:o.Input}],size:[{type:o.Input}],skeleton:[{type:o.Input}],change:[{type:o.Output}]},b);function f(){this.constructor=i}function b(t,e){var n=s.call(this,t)||this;return n.changeDetectorRef=t,n.i18n=e,n.size="md",n.skeleton=!1,n.id="toggle-"+b.toggleCount,n.change=new o.EventEmitter,n._offValues=n.i18n.getOverridable("TOGGLE.OFF"),n._onValues=n.i18n.getOverridable("TOGGLE.ON"),b.toggleCount++,n}var d=(m.decorators=[{type:o.NgModule,args:[{declarations:[p],exports:[p],imports:[a.CommonModule,n.FormsModule,r.I18nModule]}]}],m);function m(){}t.ToggleChange=g,t.Toggle=p,t.ToggleModule=d,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=carbon-components-angular-toggle.umd.min.js.map