/**
 *
 * carbon-angular v0.0.0 | carbon-components-angular-number-input.umd.min.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common"),require("carbon-components-angular/i18n"),require("carbon-components-angular/icon")):"function"==typeof define&&define.amd?define("carbon-components-angular/number-input",["exports","@angular/core","@angular/forms","@angular/common","carbon-components-angular/i18n","carbon-components-angular/icon"],e):e((t["carbon-components-angular"]=t["carbon-components-angular"]||{},t["carbon-components-angular"]["number-input"]={}),t.ng.core,t.ng.forms,t.ng.common,t["carbon-components-angular"].i18n,t["carbon-components-angular"].icon)}(this,function(t,e,n,i,a,r){"use strict";var o=function(){},l=(Object.defineProperty(s.prototype,"value",{get:function(){return this._value},set:function(t){this._value=""!==t&&null!==t?Number(t):null},enumerable:!0,configurable:!0}),Object.defineProperty(s.prototype,"decrementLabel",{get:function(){return this._decrementLabel.value},set:function(t){this._decrementLabel.override(t)},enumerable:!0,configurable:!0}),Object.defineProperty(s.prototype,"incrementLabel",{get:function(){return this._incrementLabel.value},set:function(t){this._incrementLabel.override(t)},enumerable:!0,configurable:!0}),s.prototype.writeValue=function(t){this.value=t},s.prototype.registerOnChange=function(t){this.propagateChange=t},s.prototype.registerOnTouched=function(t){this.onTouched=t},s.prototype.focusOut=function(){this.onTouched()},s.prototype.setDisabledState=function(t){this.disabled=t},s.prototype.onIncrement=function(){(null===this.max||this.value+this.step<=this.max)&&(this.value+=this.step,this.value=parseFloat(this.value.toPrecision(this.precision)),this.emitChangeEvent())},s.prototype.onDecrement=function(){(null===this.min||this.value-this.step>=this.min)&&(this.value-=this.step,this.value=parseFloat(this.value.toPrecision(this.precision)),this.emitChangeEvent())},s.prototype.getDecrementLabel=function(){return this._decrementLabel.subject},s.prototype.getIncrementLabel=function(){return this._incrementLabel.subject},s.prototype.emitChangeEvent=function(){var t=new o;t.source=this,t.value=this.value,this.change.emit(t),this.propagateChange(this.value)},s.prototype.onNumberInputChange=function(t){this.value=t.target.value,this.emitChangeEvent()},s.prototype.isTemplate=function(t){return t instanceof e.TemplateRef},s.numberCount=0,s.decorators=[{type:e.Component,args:[{selector:"ibm-number",template:'\n\t\t<label *ngIf="skeleton && label" class="bx--label bx--skeleton"></label>\n\t\t<label *ngIf="!skeleton && label" [for]="id" class="bx--label">\n\t\t\t<ng-container *ngIf="!isTemplate(label)">{{label}}</ng-container>\n\t\t\t<ng-template *ngIf="isTemplate(label)" [ngTemplateOutlet]="label"></ng-template>\n\t\t</label>\n\t\t<div\n\t\t\tdata-numberinput\n\t\t\t[attr.data-invalid]="(invalid ? true : null)"\n\t\t\tclass="bx--number"\n\t\t\t[ngClass]="{\n\t\t\t\t\'bx--number--light\': theme === \'light\',\n\t\t\t\t\'bx--number--nolabel\': !label,\n\t\t\t\t\'bx--number--helpertext\': helperText,\n\t\t\t\t\'bx--skeleton\' : skeleton,\n\t\t\t\t\'bx--number--sm\': size === \'sm\',\n\t\t\t\t\'bx--number--xl\': size === \'xl\'\n\t\t\t}">\n\t\t\t<div class="bx--number__input-wrapper">\n\t\t\t\t<input\n\t\t\t\t\ttype="number"\n\t\t\t\t\t[id]="id"\n\t\t\t\t\t[value]="value"\n\t\t\t\t\t[attr.min]="min"\n\t\t\t\t\t[attr.max]="max"\n\t\t\t\t\t[attr.step]="step"\n\t\t\t\t\t[disabled]="disabled"\n\t\t\t\t\t[required]="required"\n\t\t\t\t\t(input)="onNumberInputChange($event)"/>\n\t\t\t\t<svg\n\t\t\t\t\t*ngIf="!skeleton && invalid"\n\t\t\t\t\tibmIcon="warning--filled"\n\t\t\t\t\tsize="16"\n\t\t\t\t\tclass="bx--number__invalid">\n\t\t\t\t</svg>\n\t\t\t\t<div *ngIf="!skeleton" class="bx--number__controls">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass="bx--number__control-btn up-icon"\n\t\t\t\t\t\ttype="button"\n\t\t\t\t\t\taria-live="polite"\n\t\t\t\t\t\taria-atomic="true"\n\t\t\t\t\t\t[attr.aria-label]="getIncrementLabel() | async"\n\t\t\t\t\t\t(click)="onIncrement()">\n\t\t\t\t\t\t<svg ibmIcon="caret--up" size="16"></svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass="bx--number__control-btn down-icon"\n\t\t\t\t\t\ttype="button"\n\t\t\t\t\t\taria-live="polite"\n\t\t\t\t\t\taria-atomic="true"\n\t\t\t\t\t\t[attr.aria-label]="getDecrementLabel() | async"\n\t\t\t\t\t\t(click)="onDecrement()">\n\t\t\t\t\t\t<svg ibmIcon="caret--down" size="16"></svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf="helperText && !invalid" class="bx--form__helper-text">\n\t\t\t\t<ng-container *ngIf="!isTemplate(helperText)">{{helperText}}</ng-container>\n\t\t\t\t<ng-template *ngIf="isTemplate(helperText)" [ngTemplateOutlet]="helperText"></ng-template>\n\t\t\t</div>\n\t\t\t<div *ngIf="invalid" class="bx--form-requirement">\n\t\t\t\t<ng-container *ngIf="!isTemplate(invalidText)">{{invalidText}}</ng-container>\n\t\t\t\t<ng-template *ngIf="isTemplate(invalidText)" [ngTemplateOutlet]="invalidText"></ng-template>\n\t\t\t</div>\n\t\t</div>\n\t',providers:[{provide:n.NG_VALUE_ACCESSOR,useExisting:s,multi:!0}]}]}],s.ctorParameters=function(){return[{type:a.I18n}]},s.propDecorators={containerClass:[{type:e.HostBinding,args:["class.bx--form-item"]}],theme:[{type:e.Input}],disabled:[{type:e.Input}],skeleton:[{type:e.Input}],invalid:[{type:e.Input}],id:[{type:e.Input}],size:[{type:e.Input}],required:[{type:e.Input}],value:[{type:e.Input}],min:[{type:e.Input}],max:[{type:e.Input}],label:[{type:e.Input}],helperText:[{type:e.Input}],invalidText:[{type:e.Input}],step:[{type:e.Input}],precision:[{type:e.Input}],change:[{type:e.Output}],decrementLabel:[{type:e.Input}],incrementLabel:[{type:e.Input}],focusOut:[{type:e.HostListener,args:["focusout"]}]},s);function s(t){this.i18n=t,this.containerClass=!0,this.theme="dark",this.disabled=!1,this.skeleton=!1,this.invalid=!1,this.id="number-"+s.numberCount,this.size="md",this.min=null,this.max=null,this.step=1,this.change=new e.EventEmitter,this._value=0,this._decrementLabel=this.i18n.getOverridable("NUMBER.DECREMENT"),this._incrementLabel=this.i18n.getOverridable("NUMBER.INCREMENT"),this.onTouched=function(){},this.propagateChange=function(t){},s.numberCount++}var u=(p.decorators=[{type:e.NgModule,args:[{declarations:[l],exports:[l],imports:[n.FormsModule,i.CommonModule,a.I18nModule,r.IconModule]}]}],p);function p(){}t.Number=l,t.NumberChange=o,t.NumberComponent=l,t.NumberModule=u,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=carbon-components-angular-number-input.umd.min.js.map