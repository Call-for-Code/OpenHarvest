{"version":3,"file":"carbon-components-angular-button.umd.js.map","sources":["ng://carbon-components-angular/button/button.directive.ts","ng://carbon-components-angular/button/button.module.ts","ng://carbon-components-angular/button/carbon-components-angular-button.ts"],"sourcesContent":["import {\n\tDirective,\n\tHostBinding,\n\tInput,\n\tOnInit\n} from \"@angular/core\";\nimport { ButtonSize, ButtonType } from \"./button.types\";\n\n/**\n * A convenience directive for applying styling to a button.\n *\n * [See demo](../../?path=/story/button--basic)\n *\n * Example:\n *\n * ```html\n * <button ibmButton>A button</button>\n * <button ibmButton=\"secondary\">A secondary button</button>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/button/code) for more detail.\n *\n * <example-url>../../iframe.html?id=button--basic</example-url>\n */\n@Directive({\n\tselector: \"[ibmButton]\"\n})\nexport class Button implements OnInit {\n\t/**\n\t * sets the button type\n\t */\n\t@Input() ibmButton: ButtonType = \"primary\";\n\t/**\n\t * Specify the size of the button\n\t */\n\t@Input() size: ButtonSize;\n\t/**\n\t * If assistive text is used, this specifies the placement.\n\t * Possible placements are `top`, `bottom`, `left`, `right`.\n\t * If assistive text is not used, this can be left undefined.\n\t */\n\t@Input() assistiveTextPlacement: \"top\" | \"bottom\" | \"left\" | \"right\" = \"top\";\n\t/**\n\t * If assistive text is used, this specifies the alignment.\n\t * Possible alignments are `center`, `start`, `end`.\n\t * If assistive text is not used, this can be left undefined.\n\t */\n\t@Input() assistiveTextAlignment: \"center\" | \"start\" | \"end\" = \"center\";\n\n\t// a whole lot of HostBindings ... this way we don't have to touch the elementRef directly\n\t@HostBinding(\"class.bx--btn\") get baseClass() {\n\t\treturn !this.toolbarAction;\n\t}\n\t@HostBinding(\"class.bx--btn--primary\") get primaryButton() {\n\t\treturn this.ibmButton === \"primary\";\n\t}\n\t@HostBinding(\"class.bx--btn--secondary\") get secondaryButton() {\n\t\treturn this.ibmButton === \"secondary\";\n\t}\n\t@HostBinding(\"class.bx--btn--tertiary\") get tertiaryButton() {\n\t\treturn this.ibmButton === \"tertiary\";\n\t}\n\t@HostBinding(\"class.bx--btn--ghost\") get ghostButton() {\n\t\treturn this.ibmButton === \"ghost\";\n\t}\n\t@HostBinding(\"class.bx--btn--danger\") get dangerButton() {\n\t\treturn this.ibmButton === \"danger\" || this.ibmButton === \"danger--primary\";\n\t}\n\t@HostBinding(\"class.bx--skeleton\") @Input() skeleton = false;\n\t@HostBinding(\"class.bx--btn--sm\") get smallSize() {\n\t\treturn this.size === \"sm\";\n\t}\n\t@HostBinding(\"class.bx--btn--field\") get fieldSize() {\n\t\treturn this.size === \"field\";\n\t}\n\t@HostBinding(\"class.bx--toolbar-action\") toolbarAction = false;\n\t@HostBinding(\"class.bx--overflow-menu\") overflowMenu = false;\n\t@HostBinding(\"class.bx--btn--icon-only\") @Input() iconOnly = false;\n\n\t/**\n\t * `hasAssistiveText` input specifies whether the button contains assistive text or not.\n\t * Assistive text can be utilized as follows:\n\t * ```typescript\n\t *\t<button\n\t *\t\tibmButton=\"tertiary\"\n\t *\t\t[iconOnly]=\"true\"\n\t *\t\t[hasAssistiveText]=\"true\"\n\t *\t\tassistiveTextPlacement=\"top\"\n\t *\t\tassistiveTextAlignment=\"center\">\n\t *\t\t<svg class=\"bx--btn__icon\" ibmIconCopy size=\"20\"></svg>\n\t *\t\t<span class=\"bx--assistive-text\">Icon description</span>\n\t *\t</button>\n\t * ```\n\t */\n\t@HostBinding(\"class.bx--tooltip__trigger\")\n\t@HostBinding(\"class.bx--tooltip--a11y\") @Input() hasAssistiveText = false;\n\n\t@HostBinding(\"class.bx--tooltip--align-center\") get isAssistiveTextCenterAligned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextAlignment === \"center\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--align-start\") get isAssistiveTextStartAligned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextAlignment === \"start\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--align-end\") get isAssistiveTextEndAligned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextAlignment === \"end\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--top\") get isAssistiveTextTopPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"top\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--bottom\") get isAssistiveTextBottomPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"bottom\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--left\") get isAssistiveTextLeftPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"left\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--right\") get isAssistiveTextRightPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"right\";\n\t}\n\n\tngOnInit() {\n\t\tif (!this.ibmButton) {\n\t\t\tthis.ibmButton = \"primary\";\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Button } from \"./button.directive\";\n\n@NgModule({\n\tdeclarations: [Button],\n\texports: [Button],\n\timports: [CommonModule]\n})\nexport class ButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Directive","Input","HostBinding","NgModule","CommonModule"],"mappings":"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"}
