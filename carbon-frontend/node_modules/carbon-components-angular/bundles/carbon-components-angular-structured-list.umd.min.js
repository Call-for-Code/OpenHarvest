/**
 *
 * carbon-angular v0.0.0 | carbon-components-angular-structured-list.umd.min.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/forms"),require("@angular/core"),require("@angular/common"),require("carbon-components-angular/icon")):"function"==typeof define&&define.amd?define("carbon-components-angular/structured-list",["exports","@angular/forms","@angular/core","@angular/common","carbon-components-angular/icon"],e):e((t["carbon-components-angular"]=t["carbon-components-angular"]||{},t["carbon-components-angular"]["structured-list"]={}),t.ng.forms,t.ng.core,t.ng.common,t["carbon-components-angular"].icon)}(this,function(t,e,n,o,s){"use strict";var r=(i.decorators=[{type:n.Component,args:[{selector:"ibm-list-column",template:'\n\t\t<span *ngIf="skeleton"></span>\n\t\t<ng-content></ng-content>\n\t'}]}],i.propDecorators={skeleton:[{type:n.Input}],isHeaderColumn:[{type:n.HostBinding,args:["class.bx--structured-list-th"]}],isBodyColumn:[{type:n.HostBinding,args:["class.bx--structured-list-td"]}],nowrap:[{type:n.HostBinding,args:["class.bx--structured-list-content--nowrap"]},{type:n.Input}]},i);function i(){this.skeleton=!1,this.isHeaderColumn=!0,this.isBodyColumn=!0,this.nowrap=!1}var c=(Object.defineProperty(a.prototype,"skeleton",{get:function(){return this._skeleton},set:function(t){this._skeleton=t,this.updateChildren()},enumerable:!0,configurable:!0}),a.prototype.ngAfterContentInit=function(){this.columns.forEach(function(t){t.isBodyColumn=!1,t.isHeaderColumn=!0}),this.updateChildren()},a.prototype.updateChildren=function(){var e=this;this.columns&&this.columns.toArray().forEach(function(t){return t.skeleton=e.skeleton})},a.decorators=[{type:n.Component,args:[{selector:"ibm-list-header",template:'\n\t\t<div class="bx--structured-list-row bx--structured-list-row--header-row">\n\t\t\t<ng-content></ng-content>\n\t\t\t<div *ngIf="selection" class="bx--structured-list-th"></div>\n\t\t</div>\n\t'}]}],a.propDecorators={wrapper:[{type:n.HostBinding,args:["class.bx--structured-list-thead"]}],skeleton:[{type:n.Input}],columns:[{type:n.ContentChildren,args:[r]}]},a);function a(){this.wrapper=!0,this.selection=!1,this._skeleton=!1}var u=(l.prototype.ngAfterContentInit=function(){this.columns.forEach(function(t){t.isBodyColumn=!0,t.isHeaderColumn=!1})},l.prototype.onclick=function(){this.selection&&this.input.nativeElement.click()},l.prototype.onChange=function(t){this.change.emit(t)},l.decorators=[{type:n.Component,args:[{selector:"ibm-list-row",template:'\n\t\t<ng-content></ng-content>\n\t\t<ng-container *ngIf="selection">\n\t\t\t<input\n\t\t\t\t#input\n\t\t\t\ttabindex="-1"\n\t\t\t\tclass="bx--structured-list-input"\n\t\t\t\ttype="radio"\n\t\t\t\t[value]="value"\n\t\t\t\t[name]="name"\n\t\t\t\t[title]="label"\n\t\t\t\t(change)="onChange($event)"\n\t\t\t\t[checked]="selected"/>\n\t\t\t<div class="bx--structured-list-td">\n\t\t\t\t<svg ibmIcon="checkmark--filled" size="16" class="bx--structured-list-svg"></svg>\n\t\t\t</div>\n\t\t</ng-container>\n\t'}]}],l.propDecorators={selected:[{type:n.Input},{type:n.HostBinding,args:["class.bx--structured-list-row--selected"]}],label:[{type:n.Input},{type:n.HostBinding,args:["attr.aria-label"]}],value:[{type:n.Input}],change:[{type:n.Output}],wrapper:[{type:n.HostBinding,args:["class.bx--structured-list-row"]}],tabindex:[{type:n.HostBinding,args:["attr.tabindex"]}],columns:[{type:n.ContentChildren,args:[r]}],input:[{type:n.ViewChild,args:["input",{"static":!1}]}],onclick:[{type:n.HostListener,args:["click"]}]},l);function l(){this.selected=!1,this.change=new n.EventEmitter,this.selection=!1,this.name="list",this.wrapper=!0,this.tabindex=this.selection?"0":null}var p=(Object.defineProperty(d.prototype,"skeleton",{get:function(){return this._skeleton},set:function(t){this._skeleton=t,this.updateChildren()},enumerable:!0,configurable:!0}),d.prototype.ngAfterContentInit=function(){var e=this,n=function(t){t.selection=e.selection};this.headers.forEach(n),this.rows.forEach(function(t){n(t),t.name=e.name,t.tabindex=e.selection?"0":"null",t.change.subscribe(function(){e.selected.emit({value:t.value,selected:t.selected,name:e.name}),e.onChange(t.value)})}),this.updateChildren()},d.prototype.writeValue=function(e){this.rows&&this.rows.forEach(function(t){t.value===e?t.selected=!0:t.selected=!1})},d.prototype.registerOnChange=function(t){this.onChange=t},d.prototype.registerOnTouched=function(t){this.onTouched=t},d.prototype.updateChildren=function(){var e=this;this.headers&&this.headers.toArray().forEach(function(t){return t.skeleton=e.skeleton})},d.listCount=0,d.decorators=[{type:n.Component,args:[{selector:"ibm-structured-list",template:"\n\t\t<section\n\t\t\tclass=\"bx--structured-list\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--structured-list--border': border,\n\t\t\t\t'bx--structured-list--selection': selection,\n\t\t\t\t'bx--structured-list--condensed': condensed,\n\t\t\t\t'bx--structured-list-content--nowrap': nowrap,\n\t\t\t\t'bx--skeleton': skeleton\n\t\t\t}\">\n\t\t\t<ng-content select=\"ibm-list-header\"></ng-content>\n\t\t\t<div class=\"bx--structured-list-tbody\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</div>\n\t\t</section>\n\t",providers:[{provide:e.NG_VALUE_ACCESSOR,useExisting:d,multi:!0}]}]}],d.propDecorators={selection:[{type:n.Input}],border:[{type:n.Input}],condensed:[{type:n.Input}],nowrap:[{type:n.Input}],name:[{type:n.Input}],skeleton:[{type:n.Input}],selected:[{type:n.Output}],rows:[{type:n.ContentChildren,args:[u]}],headers:[{type:n.ContentChildren,args:[c]}]},d);function d(){this.selection=!1,this.border=!1,this.condensed=!1,this.nowrap=!1,this.name="structured-list-"+d.listCount++,this.selected=new n.EventEmitter,this._skeleton=!1,this.onChange=function(t){},this.onTouched=function(){}}var h=(g.decorators=[{type:n.NgModule,args:[{declarations:[p,u,c,r],exports:[p,u,c,r],imports:[o.CommonModule,s.IconModule]}]}],g);function g(){}t.ListColumn=r,t.ListHeader=c,t.ListRow=u,t.StructuredList=p,t.StructuredListModule=h,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=carbon-components-angular-structured-list.umd.min.js.map