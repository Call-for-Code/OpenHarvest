{"version":3,"sources":["ng://carbon-components-angular/progress-indicator/progress-indicator.component.ts","ng://carbon-components-angular/progress-indicator/progress-indicator.module.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter, OnChanges, SimpleChanges\n} from \"@angular/core\";\nimport { ExperimentalService } from \"carbon-components-angular/experimental\";\nimport { Step } from \"./progress-indicator-step.interface\";\n\n/**\n * [See demo](../../?path=/story/progress-indicator--basic)\n *\n * <example-url>../../iframe.html?id=progress-indicator--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-progress-indicator\",\n\ttemplate: `\n\t<ul\n\t\tdata-progress\n\t\tdata-progress-current\n\t\tclass=\"bx--progress\"\n\t\t[ngClass]=\"{\n\t\t\t'bx--skeleton': skeleton,\n\t\t\t'bx--progress--vertical': (orientation === 'vertical'),\n\t\t\t'bx--progress--space-equal': spacing === 'equal' && orientation !== 'vertical'\n\t\t}\">\n\t\t<li\n\t\t\tclass=\"bx--progress-step bx--progress-step--{{step.state[0]}}\"\n\t\t\t*ngFor=\"let step of steps; let i = index\"\n\t\t\t[ngClass]=\"{'bx--progress-step--disabled' : step.disabled}\">\n\t\t\t<div class=\"bx--progress-step-button bx--progress-step-button--unclickable\" role=\"button\" tabindex=\"-1\">\n\t\t\t\t<svg ibmIcon=\"checkmark--outline\" size=\"16\" *ngIf=\"step.state.includes('complete')\"></svg>\n\t\t\t\t<svg *ngIf=\"step.state.includes('current')\">\n\t\t\t\t\t<path d=\"M 7, 7 m -7, 0 a 7,7 0 1,0 14,0 a 7,7 0 1,0 -14,0\" ></path>\n\t\t\t\t</svg>\n\t\t\t\t<svg *ngIf=\"step.state.includes('incomplete')\">\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M8 1C4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm0 13c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z\">\n\t\t\t\t\t</path>\n\t\t\t\t</svg>\n\t\t\t\t<svg ibmIcon=\"warning\" size=\"16\" *ngIf=\"step.state.includes('error')\" class=\"bx--progress__warning\"></svg>\n\t\t\t\t<p\n\t\t\t\t\tclass=\"bx--progress-label\"\n\t\t\t\t\t*ngIf=\"step.tooltip\"\n\t\t\t\t\t[ibmTooltip]=\"step.tooltip.content\"\n\t\t\t\t\t[trigger]=\"step.tooltip.trigger\"\n\t\t\t\t\t[placement]=\"step.tooltip.placement\"\n\t\t\t\t\t[title]=\"step.tooltip.title\"\n\t\t\t\t\t[gap]=\"step.tooltip.gap\"\n\t\t\t\t\t[appendInline]=\"step.tooltip.appendInline\"\n\t\t\t\t\t[data]=\"step.tooltip.data\"\n\t\t\t\t\t(click)=\"stepSelected.emit({ step: step, index: i })\">\n\t\t\t\t\t{{step.text}}\n\t\t\t\t</p>\n\t\t\t\t<p class=\"bx--progress-label\" *ngIf=\"!step.tooltip\" (click)=\"stepSelected.emit({ step: step, index: i })\">{{step.text}}</p>\n\t\t\t\t<p *ngIf=\"step.optionalText\" class=\"bx--progress-optional\">{{step.optionalText}}</p>\n\t\t\t\t<span class=\"bx--progress-line\"></span>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\n\t`\n})\nexport class ProgressIndicator implements OnChanges {\n\tstatic skeletonSteps(stepCount: number) {\n\t\tconst steps = [];\n\t\tfor (let i = 0; i < stepCount; i++) {\n\t\t\tsteps.push({\"state\": [\"incomplete\"]});\n\t\t}\n\n\t\treturn steps;\n\t}\n\n\t@Output() stepSelected = new EventEmitter<{ step: Step, index: number }>();\n\n\t@Input() steps: Array<Step>;\n\t@Input() orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\n\t@Input() skeleton = false;\n\t@Input() spacing: \"default\" | \"equal\" = \"default\";\n\n\t@Input() get current() {\n\t\treturn this.steps.findIndex(step => step.state.includes(\"current\"));\n\t}\n\tset current(current: number) {\n\t\tthis._current = current;\n\t}\n\tprivate _current: number;\n\n\tconstructor(protected experimental: ExperimentalService) {}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.steps || changes.current) {\n\t\t\tthis.setProgressIndicatorStates();\n\t\t}\n\t}\n\n\tprivate setProgressIndicatorStates() {\n\t\tif (this.steps === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._current === undefined || this._current < 0) {\n\t\t\tfor (let i = 0; i < this.steps.length; i++) {\n\t\t\t\tthis.steps[i].state[0] = \"incomplete\";\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._current > this.steps.length - 1) {\n\t\t\tfor (let i = 0; i < this.steps.length; i++) {\n\t\t\t\tthis.steps[i].state[0] = \"complete\";\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.steps[this._current].state[0] = \"current\";\n\t\tfor (let i = 0; i < this._current; i++) {\n\t\t\tthis.steps[i].state[0] = \"complete\";\n\t\t}\n\t\tfor (let i = this._current + 1; i < this.steps.length; i++) {\n\t\t\tthis.steps[i].state[0] = \"incomplete\";\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ProgressIndicator } from \"./progress-indicator.component\";\nimport { DialogModule } from \"carbon-components-angular/dialog\";\nimport { ExperimentalModule } from \"carbon-components-angular/experimental\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tProgressIndicator\n\t],\n\texports: [\n\t\tProgressIndicator\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tDialogModule,\n\t\tExperimentalModule,\n\t\tIconModule\n\t]\n})\nexport class ProgressIndicatorModule { }\n"],"names":["ProgressIndicator","skeletonSteps","stepCount","steps","i","push","state","Object","defineProperty","prototype","this","findIndex","step","includes","current","_current","ngOnChanges","changes","setProgressIndicatorStates","undefined","length","Component","args","selector","template","ExperimentalService","Output","Input","experimental","stepSelected","EventEmitter","orientation","skeleton","spacing","NgModule","declarations","exports","imports","CommonModule","DialogModule","ExperimentalModule","IconModule","ProgressIndicatorModule"],"mappings":"yzBAcA,IAAAA,GAiDQA,EAAAC,cAAP,SAAqBC,GAEpB,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,EAAIF,EAAWE,IAC9BD,EAAME,KAAK,CAACC,MAAS,CAAC,gBAGvB,OAAOH,GAURI,OAAAC,eAAaR,EAAAS,UAAA,UAAO,C,IAApB,WACC,OAAOC,KAAKP,MAAMQ,UAAU,SAAAC,GAAQ,OAAAA,EAAKN,MAAMO,SAAS,c,IAEzD,SAAYC,GACXJ,KAAKK,SAAWD,G,gCAMjBd,EAAAS,UAAAO,YAAA,SAAYC,IACPA,EAAQd,OAASc,EAAQH,UAC5BJ,KAAKQ,8BAIClB,EAAAS,UAAAS,2BAAR,WACC,GAAIR,KAAKP,QAAUgB,UAInB,GAAIT,KAAKK,WAAaI,WAAaT,KAAKK,SAAW,EAClD,IAAK,IAAIX,EAAI,EAAGA,EAAIM,KAAKP,MAAMiB,OAAQhB,IACtCM,KAAKP,MAAMC,GAAGE,MAAM,GAAK,kBAK3B,GAAII,KAAKK,SAAWL,KAAKP,MAAMiB,OAAS,EACvC,IAAShB,EAAI,EAAGA,EAAIM,KAAKP,MAAMiB,OAAQhB,IACtCM,KAAKP,MAAMC,GAAGE,MAAM,GAAK,eAF3B,CAOA,IADAI,KAAKP,MAAMO,KAAKK,UAAUT,MAAM,GAAK,UAC5BF,EAAI,EAAGA,EAAIM,KAAKK,SAAUX,IAClCM,KAAKP,MAAMC,GAAGE,MAAM,GAAK,WAE1B,IAASF,EAAIM,KAAKK,SAAW,EAAGX,EAAIM,KAAKP,MAAMiB,OAAQhB,IACtDM,KAAKP,MAAMC,GAAGE,MAAM,GAAK,e,oBAxG3Be,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,yBACVC,SAAU,++D,yCAVFC,EAAAA,uB,sCAkEPC,EAAAA,S,aAEAC,EAAAA,Q,mBACAA,EAAAA,Q,gBACAA,EAAAA,Q,eACAA,EAAAA,Q,eAEAA,EAAAA,SA0CF3B,GAlCC,SAAAA,EAAsB4B,GAAAlB,KAAAkB,aAAAA,EAfZlB,KAAAmB,aAAe,IAAIC,EAAAA,aAGpBpB,KAAAqB,YAAyC,aACzCrB,KAAAsB,UAAW,EACXtB,KAAAuB,QAA+B,U,2BCrExCC,EAAAA,SAAQZ,KAAA,CAAC,CACTa,aAAc,CACbnC,GAEDoC,QAAS,CACRpC,GAEDqC,QAAS,CACRC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,mBACAC,EAAAA,gBAGqCC,GAdvC,SAAAA,K"}