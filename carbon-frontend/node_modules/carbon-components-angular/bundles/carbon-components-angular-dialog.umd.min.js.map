{"version":3,"sources":["ng://carbon-components-angular/dialog/dialog-config.interface.ts","ng://carbon-components-angular/dialog/dialog.service.ts","node_modules/tslib/tslib.es6.js","ng://carbon-components-angular/dialog/dialog.component.ts","ng://carbon-components-angular/dialog/dialog.directive.ts","ng://carbon-components-angular/dialog/tooltip/tooltip.component.ts","ng://carbon-components-angular/dialog/tooltip/tooltip-definition.component.ts","ng://carbon-components-angular/dialog/tooltip/tooltip-icon.component.ts","ng://carbon-components-angular/dialog/tooltip/tooltip.directive.ts","ng://carbon-components-angular/dialog/tooltip/ellipsis-tooltip.directive.ts","ng://carbon-components-angular/dialog/overflow-menu/overflow-menu-pane.component.ts","ng://carbon-components-angular/dialog/overflow-menu/overflow-menu-custom-pane.component.ts","ng://carbon-components-angular/dialog/overflow-menu/overflow-menu.directive.ts","ng://carbon-components-angular/dialog/overflow-menu/overflow-menu.component.ts","ng://carbon-components-angular/dialog/overflow-menu/overflow-menu-option.component.ts","ng://carbon-components-angular/dialog/dialog.module.ts"],"sourcesContent":["import { ElementRef, TemplateRef } from \"@angular/core\";\n\n/**\n * An enum of the various reasons a dialog may close. For use with `CloseMeta` and `shouldClose`\n *\n * It's expected that `interaction` will be a common closure reason.\n */\nexport enum CloseReasons {\n\t/**\n\t * For when the component is closed by being destroyed\n\t */\n\tdestroyed,\n\t/**\n\t * For use in cases where the dialog closes for programmatic reasons other than destruction\n\t */\n\tprogrammatic,\n\t/**\n\t * interaction reasons will also provide a target for the interaction\n\t */\n\tinteraction,\n\t/**\n\t * For use in cases where the dialog closes due to being hidden\n\t */\n\thidden\n}\n\n/**\n * Interface representing various metadata that can be passed to `shouldClose` and the `close` event\n */\nexport interface CloseMeta {\n\treason: CloseReasons;\n\ttarget?: EventTarget;\n}\n\n/**\n * Data structure for definig properties of a `Dialog` component.\n **/\nexport interface DialogConfig {\n\t/**\n\t * Title for the `Dialog` header.\n\t */\n\ttitle?: string;\n\t/**\n\t * Body content for the `Dialog`.\n\t */\n\tcontent: string | TemplateRef<any>;\n\t/**\n\t * Parameter for triggering `Dialog` display.\n\t */\n\ttrigger?: \"click\" | \"hover\" | \"mouseenter\";\n\t/**\n\t * Parameter for triggering the `Dialog` close event.\n\t */\n\tcloseTrigger?: \"mouseout\" | \"mouseleave\";\n\t/**\n\t * Callback to control the closing behaviour. return `true` to close, and `false` to prevent closing\n\t */\n\tshouldClose?: (meta?: CloseMeta) => boolean;\n\t/**\n\t * If true the dialog will close when hidden (by scrolling or otherwise going out of the viewport)\n\t * If false the dialog will stay open until explicitly closed\n\t * When true this closure method can be picked up via `CloseReasons.hidden`\n\t */\n\tcloseWhenHidden?: boolean;\n\t/**\n\t * Parameter defining the placement in which the `Dialog` appears.\n\t */\n\tplacement?: string;\n\t/**\n\t * Used to set the offset of the `Dialog` relative to the content it\n\t * is associated to.\n\t */\n\tgap?: number;\n\t/**\n\t * Reference to the Parent element that links the `Dialog`.\n\t */\n\tparentRef?: ElementRef;\n\t/**\n\t * Set to `true` to open the dialog next to the triggering component\n\t */\n\tappendInline?: boolean;\n\t/**\n\t * Config object passed to the rendered component. (Optional)\n\t */\n\tdata?: Object;\n\t/**\n\t * Additional arbitrary properties (mostly for internal/extended component use)\n\t */\n\t[propName: string]: any;\n\t/**\n\t * Classes to add to the dialog container\n\t */\n\twrapperClass?: string;\n\t/**\n\t * This specifies any vertical and horizontal offset for the position of the dialog\n\t */\n\toffset?: { x: number, y: number };\n\t/**\n\t * This prevents the dialog from being toggled\n\t */\n\tdisabled?: boolean;\n}\n","import {\n\tInjector,\n\tComponentRef,\n\tComponentFactory,\n\tComponentFactoryResolver,\n\tInjectable,\n\tViewContainerRef\n} from \"@angular/core\";\nimport { CloseReasons, DialogConfig } from \"./dialog-config.interface\";\nimport { PlaceholderService } from \"carbon-components-angular/placeholder\";\nimport { Dialog } from \"./dialog.component\";\nimport { tabbableSelector } from \"carbon-components-angular/common\";\n\n/**\n * `Dialog` object to be injected into other components.\n */\n@Injectable()\nexport class DialogService {\n\t/**\n\t * Used in `singletonClickListen`, don't count on its existence and values.\n\t */\n\tprotected static listeningForBodyClicks = false;\n\n\t/**\n\t * A set of all known dialog components\n\t */\n\tprotected static dialogRefs = new Set<ComponentRef<Dialog>>();\n\n\t/**\n\t * Closes all known `Dialog`s. Does not focus any previous elements, since we can't know which would be correct\n\t */\n\tpublic static closeAll() {\n\t\tDialogService.dialogRefs.forEach(ref => ref.instance.doClose({\n\t\t\treason: CloseReasons.programmatic\n\t\t}));\n\t\tDialogService.dialogRefs.clear();\n\t}\n\n\t/**\n\t * The default component factory to use when creating dialogs\n\t */\n\tpublic componentFactory: ComponentFactory<any>;\n\n\t/**\n\t * Creates an instance of `DialogService`.\n\t */\n\tconstructor(\n\t\tprotected componentFactoryResolver: ComponentFactoryResolver,\n\t\tprotected injector: Injector,\n\t\tprotected placeholderService: PlaceholderService\n\t) {}\n\n\t/**\n\t * Set the context for the service. For example, the `component` property can be used to set the\n\t * default component that should be created by the service, for a given instance of the service.\n\t * @param options `{ component: any }` where `component` is a component that extends `dialog.component`\n\t */\n\tsetContext(options: { component: any }) {\n\t\tthis.componentFactory = this.componentFactoryResolver.resolveComponentFactory(options.component);\n\t}\n\n\t/**\n\t * If `dialogRef` is defined, the Dialog is already open. If\n\t * `dialogRef` is undefined, we create the `Dialog` component and reference to it.\n\t * A subscription is created to track if the `Dialog` should close.\n\t *\n\t * @param viewContainer a `ViewContainerRef` to instantiate the component against.\n\t * May be `null` if an `ibm-placeholder` exists and `dialogConfig.appendInline` is false\n\t * @param dialogConfig the `DialogConfig` for the component\n\t */\n\topen(viewContainer: ViewContainerRef, dialogConfig: DialogConfig, component?: any) {\n\t\tlet componentFactory = this.componentFactory;\n\t\tif (component) {\n\t\t\tcomponentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n\t\t}\n\n\t\tlet dialogRef;\n\t\tif (dialogConfig.appendInline) {\n\t\t\t// add our component to the view\n\t\t\tdialogRef = viewContainer.createComponent(componentFactory, 0, this.injector);\n\t\t} else if (!this.placeholderService.hasPlaceholderRef()) {\n\t\t\tdialogRef = viewContainer.createComponent(componentFactory, 0, this.injector);\n\t\t\tif (dialogRef) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\twindow.document.querySelector(\"body\").appendChild(dialogRef.location.nativeElement);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tdialogRef = this.placeholderService.createComponent(componentFactory, this.injector);\n\t\t}\n\n\t\t// keep track of all initialized dialogs\n\t\tDialogService.dialogRefs.add(dialogRef);\n\n\t\t// initialize some extra options\n\t\tdialogConfig[\"previouslyFocusedElement\"] = document.activeElement;\n\t\tdialogRef.instance.dialogConfig = dialogConfig;\n\n\t\tdialogRef.instance.elementRef.nativeElement.focus();\n\n\t\treturn dialogRef as ComponentRef<Dialog>;\n\t}\n\n\t/**\n\t * On close of `Dialog` item, sets focus back to previous item, unsets\n\t * the current `dialogRef` item. Unsubscribes to the event of `Dialog` close.\n\t *\n\t * @param dialogRef the dialogRef to close\n\t */\n\tclose(dialogRef: ComponentRef<Dialog>) {\n\t\t// to handle the case where we have a null `this.dialogRef`\n\t\tif (!dialogRef) { return; }\n\n\t\tconst elementToFocus = dialogRef.instance.dialogConfig[\"previouslyFocusedElement\"];\n\n\t\tdialogRef.destroy();\n\n\t\t// update the globally tracked dialogRefs\n\t\tif (DialogService.dialogRefs.has(dialogRef)) {\n\t\t\tDialogService.dialogRefs.delete(dialogRef);\n\t\t}\n\n\t\t// Keeps the focus on the dialog trigger if there are no focusable elements. Change focus to previously focused element\n\t\t// if there are focusable elements in the dialog.\n\t\tif (!dialogRef.location.nativeElement.querySelectorAll(tabbableSelector)) {\n\t\t\telementToFocus.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Closes all known `Dialog`s. Does not focus any previous elements, since we can't know which would be correct\n\t *\n\t * @deprecated since v4. Use the static `DialogService.closeAll` instead\n\t */\n\tcloseAll() {\n\t\tDialogService.closeAll();\n\t}\n\t/**\n\t * Fix for safari hijacking clicks.\n\t *\n\t * Runs on `ngOnInit` of every dialog. Ensures we don't have multiple listeners\n\t * because having many of them could degrade performance in certain cases (and is\n\t * not necessary for our use case)\n\t *\n\t * This is an internally used function, can change at any point (even get removed)\n\t * and changes to it won't be considered a breaking change. Use at your own risk.\n\t */\n\tsingletonClickListen() {\n\t\tif (!DialogService.listeningForBodyClicks) {\n\t\t\tdocument.body.firstElementChild.addEventListener(\"click\", () => null, true);\n\t\t\tDialogService.listeningForBodyClicks = true;\n\t\t}\n\t}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tElementRef,\n\tViewChild,\n\tOnInit,\n\tAfterViewInit,\n\tOnDestroy,\n\tHostListener,\n\tOptional\n} from \"@angular/core\";\nimport {\n\tObservable,\n\tSubscription\n} from \"rxjs\";\n// the AbsolutePosition is required to import the declaration correctly\nimport Position, { position, AbsolutePosition, Positions } from \"@carbon/utils-position\";\nimport { cycleTabs, getFocusElementList } from \"carbon-components-angular/common\";\nimport { CloseMeta, CloseReasons, DialogConfig } from \"./dialog-config.interface\";\nimport { AnimationFrameService, ElementService } from \"carbon-components-angular/utils\";\n\n/**\n * Implements a `Dialog` that can be positioned anywhere on the page.\n * Used to implement a popover or tooltip.\n */\n@Component({\n\tselector: \"ibm-dialog\",\n\ttemplate: \"\"\n})\nexport class Dialog implements OnInit, AfterViewInit, OnDestroy {\n\t/**\n\t * Emits event that handles the closing of a `Dialog` object.\n\t */\n\t@Output() close: EventEmitter<CloseMeta> = new EventEmitter();\n\t/**\n\t * Receives `DialogConfig` interface object with properties of `Dialog`\n\t * explicitly defined.\n\t */\n\t@Input() dialogConfig: DialogConfig;\n\t/**\n\t * Maintains a reference to the view DOM element of the `Dialog`.\n\t */\n\t// @ts-ignore\n\t@ViewChild(\"dialog\", { static: false }) dialog: ElementRef;\n\n\t/**\n\t * Stores the data received from `dialogConfig`.\n\t */\n\tpublic data = {};\n\n\t/**\n\t * The placement of the `Dialog` is received from the `Position` service.\n\t */\n\tpublic placement: string;\n\n\tprotected visibilitySubscription = new Subscription();\n\n\tprotected animationFrameSubscription = new Subscription();\n\n\t/**\n\t * Handles offsetting the `Dialog` item based on the defined position\n\t * to not obscure the content beneath.\n\t */\n\tprotected addGap = {\n\t\t\"left\": pos => position.addOffset(pos, 0, -this.dialogConfig.gap),\n\t\t\"right\": pos => position.addOffset(pos, 0, this.dialogConfig.gap),\n\t\t\"top\": pos => position.addOffset(pos, -this.dialogConfig.gap),\n\t\t\"bottom\": pos => position.addOffset(pos, this.dialogConfig.gap),\n\t\t\"left-bottom\": pos => position.addOffset(pos, 0, -this.dialogConfig.gap),\n\t\t\"right-bottom\": pos => position.addOffset(pos, 0, this.dialogConfig.gap)\n\t};\n\n\t/**\n\t * Extra placements. Child classes can add to this for use in `placeDialog`.\n\t */\n\tprotected placements: Positions = {};\n\n\t/**\n\t * Creates an instance of `Dialog`.\n\t * @param elementRef\n\t * @param elementService\n\t */\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected elementService: ElementService,\n\t\t@Optional() protected animationFrameService: AnimationFrameService = null\n\t) {}\n\n\t/**\n\t * Initialize the `Dialog`, set the placement and gap, and add a `Subscription` to resize events.\n\t */\n\tngOnInit() {\n\t\tthis.placement = this.dialogConfig.placement.split(\",\")[0];\n\t\tthis.data = this.dialogConfig.data;\n\n\t\t// run any additional initialization code that consuming classes may have\n\t\tthis.onDialogInit();\n\t}\n\n\t/**\n\t * After the DOM is ready, focus is set and dialog is placed\n\t * in respect to the parent element.\n\t */\n\tngAfterViewInit() {\n\t\tconst dialogElement = this.dialog.nativeElement;\n\t\t// split the wrapper class list and apply separately to avoid IE\n\t\t// 1. throwing an error due to assigning a readonly property (classList)\n\t\t// 2. throwing a SyntaxError due to passing an empty string to `add`\n\t\tif (this.dialogConfig.wrapperClass) {\n\t\t\tfor (const extraClass of this.dialogConfig.wrapperClass.split(\" \")) {\n\t\t\t\tdialogElement.classList.add(extraClass);\n\t\t\t}\n\t\t}\n\n\t\t// only focus the dialog if there are focusable elements within the dialog\n\t\tif (getFocusElementList(this.dialog.nativeElement).length > 0) {\n\t\t\tdialogElement.focus();\n\t\t}\n\n\t\tconst parentElement = this.dialogConfig.parentRef.nativeElement;\n\n\t\tif (this.animationFrameService) {\n\t\t\tthis.animationFrameSubscription = this.animationFrameService.tick.subscribe(() => {\n\t\t\t\tthis.placeDialog();\n\t\t\t});\n\t\t}\n\n\t\tif (this.dialogConfig.closeWhenHidden) {\n\t\t\tthis.visibilitySubscription = this.elementService\n\t\t\t\t.visibility(parentElement, parentElement)\n\t\t\t\t.subscribe(value => {\n\t\t\t\t\tthis.placeDialog();\n\t\t\t\t\tif (!value.visible) {\n\t\t\t\t\t\tthis.doClose({\n\t\t\t\t\t\t\treason: CloseReasons.hidden\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis.placeDialog();\n\t\t// run afterDialogViewInit on the next tick\n\t\tsetTimeout(() => this.afterDialogViewInit());\n\t}\n\n\t/**\n\t * Empty method to be overridden by consuming classes to run any additional initialization code.\n\t */\n\tonDialogInit() {}\n\n\t/**\n\t * Empty method to be overridden by consuming classes to run any additional initialization code after the view is available.\n\t * NOTE: this does _not_ guarantee the dialog will be positioned, simply that it will exist in the DOM\n\t */\n\tafterDialogViewInit() {}\n\n\t/**\n\t * Uses the position service to position the `Dialog` in screen space\n\t */\n\tplaceDialog(): void {\n\t\tconst positionService = new Position(this.placements);\n\t\t// helper to find the position based on the current/given environment\n\t\tconst findPosition = (reference, target, placement) => {\n\t\t\tlet pos;\n\t\t\tif (this.dialogConfig.appendInline) {\n\t\t\t\tpos = this.addGap[placement](positionService.findRelative(reference, target, placement));\n\t\t\t} else {\n\t\t\t\tpos = this.addGap[placement](positionService.findAbsolute(reference, target, placement));\n\t\t\t}\n\n\t\t\tif (this.dialogConfig.offset) {\n\t\t\t\t// Apply vertical and horizontal offsets given through the dialogConfig\n\t\t\t\tpos.top = pos.top + this.dialogConfig.offset.y;\n\t\t\t\tpos.left = pos.left + this.dialogConfig.offset.x;\n\t\t\t}\n\n\t\t\treturn pos;\n\t\t};\n\n\t\tlet parentEl = this.dialogConfig.parentRef.nativeElement;\n\t\tlet el = this.dialog.nativeElement;\n\t\tlet dialogPlacement = this.placement;\n\n\t\t// split always returns an array, so we can just use the auto position logic\n\t\t// for single positions too\n\t\tconst placements = this.dialogConfig.placement.split(\",\");\n\n\t\t// find the best placement\n\t\tdialogPlacement = positionService.findBestPlacement(parentEl, el, placements);\n\n\t\t// calculate the final position\n\t\tconst pos = findPosition(parentEl, el, dialogPlacement);\n\n\t\t// update the element\n\t\tpositionService.setElement(el, pos);\n\t\tsetTimeout(() => { this.placement = dialogPlacement; });\n\t}\n\n\t/**\n\t * Sets up a KeyboardEvent to close `Dialog` with Escape key.\n\t * @param event\n\t */\n\t@HostListener(\"keydown\", [\"$event\"])\n\tescapeClose(event: KeyboardEvent) {\n\t\tswitch (event.key) {\n\t\t\tcase \"Esc\": // IE specific value\n\t\t\tcase \"Escape\": {\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\tthis.doClose({\n\t\t\t\t\treason: CloseReasons.interaction,\n\t\t\t\t\ttarget: event.target\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"Tab\": {\n\t\t\t\tcycleTabs(event, this.elementRef.nativeElement);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets up a event Listener to close `Dialog` if click event occurs outside\n\t * `Dialog` object.\n\t * @param event\n\t */\n\t@HostListener(\"document:click\", [\"$event\"])\n\tclickClose(event) {\n\t\tif (!this.elementRef.nativeElement.contains(event.target)\n\t\t\t&& !this.dialogConfig.parentRef.nativeElement.contains(event.target) ) {\n\t\t\tthis.doClose({\n\t\t\t\treason: CloseReasons.interaction,\n\t\t\t\ttarget: event.target\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Closes `Dialog` object by emitting the close event upwards to parents.\n\t */\n\tpublic doClose(meta: CloseMeta = { reason: CloseReasons.interaction }) {\n\t\tthis.close.emit(meta);\n\t}\n\n\t/**\n\t * At destruction of component, `Dialog` unsubscribes from all the subscriptions.\n\t */\n\tngOnDestroy() {\n\t\tthis.visibilitySubscription.unsubscribe();\n\t\tif (this.animationFrameSubscription) {\n\t\t\tthis.animationFrameSubscription.unsubscribe();\n\t\t}\n\t}\n}\n","import {\n\tDirective,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tOnInit,\n\tOnDestroy,\n\tElementRef,\n\tTemplateRef,\n\tViewContainerRef,\n\tOnChanges,\n\tHostBinding,\n\tSimpleChanges,\n\tComponentRef\n} from \"@angular/core\";\nimport { DialogService } from \"./dialog.service\";\nimport { CloseMeta, CloseReasons, DialogConfig } from \"./dialog-config.interface\";\nimport { EventService } from \"carbon-components-angular/utils\";\nimport { Dialog } from \"./dialog.component\";\n\n/**\n * A generic directive that can be inherited from to create dialogs (for example, a tooltip or popover)\n *\n * This class contains the relevant initialization code, specific templates, options, and additional inputs\n * should be specified in the derived class.\n *\n * NOTE: All child classes should add `DialogService` as a provider, otherwise they will lose context that\n * the service relies on.\n */\n@Directive({\n\tselector: \"[ibmDialog]\",\n\texportAs: \"ibmDialog\",\n\tproviders: [\n\t\tDialogService\n\t]\n})\nexport class DialogDirective implements OnInit, OnDestroy, OnChanges {\n\tstatic dialogCounter = 0;\n\t/**\n\t * Title for the dialog\n\t */\n\t@Input() title = \"\";\n\t/**\n\t * Dialog body content.\n\t */\n\t@Input() ibmDialog: string | TemplateRef<any>;\n\t/**\n\t * Defines how the Dialog is triggered.(Hover and click behave the same on mobile - both respond to a single tap).\n\t * Do not add focusable elements if trigger is `hover` or `mouseenter`.\n\t */\n\t@Input() trigger: \"click\" | \"hover\" | \"mouseenter\" = \"click\";\n\t/**\n\t * Defines how the Dialog close event is triggered.\n\t *\n\t * [See here](https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseleave_event)\n\t * for more on the difference between `mouseleave` and `mouseout`.\n\t *\n\t * Defaults to `click` when `trigger` is set to `click`.\n\t */\n\t@Input() closeTrigger: \"mouseout\" | \"mouseleave\" = \"mouseleave\";\n\t/**\n\t * Placement of the dialog, usually relative to the element the directive is on.\n\t */\n\t@Input() placement = \"left\";\n\t/**\n\t * This specifies any vertical and horizontal offset for the position of the dialog\n\t */\n\t@Input() offset: { x: number, y: number };\n\t/**\n\t * Classes to add to the dialog container\n\t */\n\t@Input() wrapperClass: string;\n\t/**\n\t * Spacing between the dialog and it's triggering element\n\t */\n\t@Input() gap = 0;\n\t/**\n\t * Set to `true` to open the dialog next to the triggering component\n\t */\n\t@Input() appendInline = false;\n\t/**\n\t * Optional data for templates\n\t */\n\t@Input() data = {};\n\n\t@Input() @HostBinding(\"attr.aria-expanded\") isOpen = false;\n\t/**\n\t * This prevents the dialog from being toggled\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * This input allows explicit control over how the dialog should close\n\t */\n\t@Input() shouldClose: (meta: CloseMeta) => boolean;\n\t/**\n\t * Config object passed to the rendered component\n\t */\n\tdialogConfig: DialogConfig;\n\t/**\n\t * Emits an event when the dialog is closed\n\t */\n\t@Output() onClose: EventEmitter<any> = new EventEmitter();\n\t/**\n\t * Emits an event when the dialog is opened\n\t */\n\t@Output() onOpen: EventEmitter<any> = new EventEmitter();\n\t/**\n\t * Emits an event when the state of `isOpen` changes. Allows `isOpen` to be double bound\n\t */\n\t@Output() isOpenChange = new EventEmitter<boolean>();\n\n\t@HostBinding(\"attr.role\") role = \"button\";\n\t@HostBinding(\"attr.aria-haspopup\") hasPopup = true;\n\t@HostBinding(\"attr.aria-owns\") get ariaOwns(): string {\n\t\treturn this.isOpen ? this.dialogConfig.compID : null;\n\t}\n\n\t/**\n\t * Keeps a reference to the currently opened dialog\n\t */\n\tprotected dialogRef: ComponentRef<Dialog>;\n\n\t/**\n\t * Creates an instance of DialogDirective.\n\t * @param elementRef\n\t * @param viewContainerRef\n\t * @param dialogService\n\t * @param eventService\n\t */\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected viewContainerRef: ViewContainerRef,\n\t\tprotected dialogService: DialogService,\n\t\tprotected eventService: EventService\n\t) {}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\t// set the config object (this can [and should!] be added to in child classes depending on what they need)\n\t\tthis.dialogConfig = {\n\t\t\ttitle: this.title,\n\t\t\tcontent: this.ibmDialog,\n\t\t\tplacement: this.placement,\n\t\t\tparentRef: this.elementRef,\n\t\t\tgap: this.gap,\n\t\t\ttrigger: this.trigger,\n\t\t\tcloseTrigger: this.closeTrigger,\n\t\t\tshouldClose: this.shouldClose || (() => true),\n\t\t\tappendInline: this.appendInline,\n\t\t\twrapperClass: this.wrapperClass,\n\t\t\tdata: this.data,\n\t\t\toffset: this.offset,\n\t\t\tdisabled: this.disabled\n\t\t};\n\n\t\tif (changes.isOpen) {\n\t\t\tif (changes.isOpen.currentValue) {\n\t\t\t\tthis.open();\n\t\t\t} else {\n\t\t\t\tthis.close({\n\t\t\t\t\treason: CloseReasons.programmatic\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Run any code a child class may need.\n\t\tthis.onDialogChanges(changes);\n\t\tthis.updateConfig();\n\t}\n\n\t/**\n\t * Sets the config object and binds events for hovering or clicking before\n\t * running code from child class.\n\t */\n\tngOnInit() {\n\t\t// fix for safari hijacking clicks\n\t\tthis.dialogService.singletonClickListen();\n\n\t\tconst element = this.elementRef.nativeElement;\n\n\t\tthis.eventService.on(element, \"keydown\", (event: KeyboardEvent) => {\n\t\t\t// \"Esc\" is an IE specific value\n\t\t\tif (event.target === this.dialogConfig.parentRef.nativeElement &&\n\t\t\t\t(event.key === \"Tab\" || event.key === \"Tab\" && event.shiftKey) ||\n\t\t\t\tevent.key === \"Escape\" || event.key === \"Esc\") {\n\t\t\t\tthis.close({\n\t\t\t\t\treason: CloseReasons.interaction,\n\t\t\t\t\ttarget: event.target\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// bind events for hovering or clicking the host\n\t\tif (this.trigger === \"hover\" || this.trigger === \"mouseenter\") {\n\t\t\tthis.eventService.on(element, \"mouseenter\", this.open.bind(this));\n\t\t\tthis.eventService.on(element, this.closeTrigger, (event) => {\n\t\t\t\tthis.close({\n\t\t\t\t\treason: CloseReasons.interaction,\n\t\t\t\t\ttarget: event.target\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.eventService.on(element, \"focus\", this.open.bind(this));\n\t\t\tthis.eventService.on(element, \"blur\", (event) => {\n\t\t\t\tthis.close({\n\t\t\t\t\treason: CloseReasons.interaction,\n\t\t\t\t\ttarget: event.target\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tthis.eventService.on(element, \"click\", (event) => {\n\t\t\t\tthis.toggle({\n\t\t\t\t\treason: CloseReasons.interaction,\n\t\t\t\t\ttarget: event.target\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.eventService.on(element, \"keydown\", (event: KeyboardEvent) => {\n\t\t\t\t// \"Spacebar\" is an IE specific value\n\t\t\t\tif (event.key === \"Enter\" || event.key === \" \" || event.key === \"Spacebar\") {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.open();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tDialogDirective.dialogCounter++;\n\t\tthis.dialogConfig.compID = \"dialog-\" + DialogDirective.dialogCounter;\n\n\t\t// run any code a child class may need\n\t\tthis.onDialogInit();\n\t\tthis.updateConfig();\n\t}\n\n\t/**\n\t * When the host dies, kill the popover.\n\t * - Useful for use in a modal or similar.\n\t */\n\tngOnDestroy() {\n\t\tthis.close({\n\t\t\treason: CloseReasons.destroyed\n\t\t});\n\t}\n\n\t/**\n\t * Helper method to call dialogService 'open'.\n\t * - Enforce accessibility by updating an aria attr for nativeElement.\n\t */\n\topen() {\n\t\t// don't allow dialogs to be opened if they're already open\n\t\tif (this.dialogRef || this.disabled) { return; }\n\n\t\t// actually open the dialog, emit events, and set the open state\n\t\tthis.dialogRef = this.dialogService.open(this.viewContainerRef, this.dialogConfig);\n\t\tthis.isOpen = true;\n\t\tthis.onOpen.emit();\n\t\tthis.isOpenChange.emit(true);\n\n\t\t// Handles emitting all the close events to clean everything up\n\t\t// Also enforce accessibility on close by updating an aria attr on the nativeElement.\n\t\tthis.dialogRef.instance.close.subscribe((meta: CloseMeta) => {\n\t\t\tif (!this.dialogRef) { return; }\n\t\t\tif (this.dialogConfig.shouldClose && this.dialogConfig.shouldClose(meta)) {\n\t\t\t\t// close the dialog, emit events, and clear out the open states\n\t\t\t\tthis.dialogService.close(this.dialogRef);\n\t\t\t\tthis.dialogRef = null;\n\t\t\t\tthis.isOpen = false;\n\t\t\t\tthis.onClose.emit();\n\t\t\t\tthis.isOpenChange.emit(false);\n\t\t\t}\n\t\t});\n\n\t\treturn this.dialogRef;\n\t}\n\n\t/**\n\t * Helper method to toggle the open state of the dialog\n\t */\n\ttoggle(meta: CloseMeta = { reason: CloseReasons.interaction }) {\n\t\tif (!this.isOpen) {\n\t\t\tthis.open();\n\t\t} else {\n\t\t\tthis.close(meta);\n\t\t}\n\t}\n\n\t/**\n\t * Helper method to close the dialogRef.\n\t */\n\tclose(meta: CloseMeta = { reason: CloseReasons.interaction }) {\n\t\tif (this.dialogRef) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.dialogRef.instance.doClose(meta);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Empty method for child classes to override and specify additional init steps.\n\t * Run after DialogDirective completes it's ngOnInit.\n\t */\n\tprotected onDialogInit() {}\n\n\t/**\n\t * Empty method for child to override and specify additional on changes steps.\n\t * run after DialogDirective completes it's ngOnChanges.\n\t */\n\tprotected onDialogChanges(_changes: SimpleChanges) {}\n\n\tprotected updateConfig() {}\n}\n","import {\n\tComponent,\n\tTemplateRef,\n\tHostBinding,\n\tElementRef,\n\tOptional\n} from \"@angular/core\";\nimport { getFocusElementList } from \"carbon-components-angular/common\";\n\nimport { Dialog } from \"../dialog.component\";\nimport { position } from \"@carbon/utils-position\";\nimport { AnimationFrameService, ElementService } from \"carbon-components-angular/utils\";\nimport { closestAttr } from \"carbon-components-angular/utils\";\n\n/**\n * Extend the `Dialog` component to create a tooltip for exposing content.\n */\n@Component({\n\tselector: \"ibm-tooltip\",\n\ttemplate: `\n\t\t<div\n\t\t\t#dialog\n\t\t\t[id]=\"dialogConfig.compID\"\n\t\t\t[attr.role]=\"role\"\n\t\t\t[attr.data-floating-menu-direction]=\"placement\"\n\t\t\tclass=\"bx--tooltip bx--tooltip--shown\">\n\t\t\t<span class=\"bx--tooltip__caret\" aria-hidden=\"true\"></span>\n\t\t\t<ng-template\n\t\t\t\t\t*ngIf=\"hasContentTemplate\"\n\t\t\t\t\t[ngTemplateOutlet]=\"dialogConfig.content\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{tooltip: this}\">\n\t\t\t</ng-template>\n\t\t\t<p\n\t\t\t\t*ngIf=\"!hasContentTemplate\">\n\t\t\t\t{{dialogConfig.content}}\n\t\t\t</p>\n\t\t</div>\n\t\t`\n})\nexport class Tooltip extends Dialog {\n\t@HostBinding(\"style.display\") style = \"inline-block\";\n\t/**\n\t * Value is set to `true` if the `Tooltip` is to display a `TemplateRef` instead of a string.\n\t */\n\tpublic hasContentTemplate = false;\n\t/**\n\t * Sets the role of the tooltip. If there's no focusable content we leave it as a `tooltip`,\n\t * if there _is_ focusable content we switch to the interactive `dialog` role.\n\t */\n\tpublic role = \"tooltip\";\n\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected elementService: ElementService,\n\t\t@Optional() protected animationFrameService: AnimationFrameService = null) {\n\t\tsuper(elementRef, elementService, animationFrameService);\n\t}\n\n\t/**\n\t * Check whether there is a template for the `Tooltip` content.\n\t */\n\tonDialogInit() {\n\t\tthis.addGap[\"bottom\"] = pos => {\n\t\t\tconst adjustedOffset = this.getAdjustOffset();\n\t\t\treturn position.addOffset(pos, 3 + adjustedOffset.top, 0 + adjustedOffset.left);\n\t\t};\n\t\tthis.addGap[\"top\"] = pos => {\n\t\t\tconst adjustedOffset = this.getAdjustOffset();\n\t\t\treturn position.addOffset(pos, -10 + adjustedOffset.top, 0 + adjustedOffset.left);\n\t\t};\n\t\tthis.addGap[\"left\"] = pos => {\n\t\t\tconst adjustedOffset = this.getAdjustOffset();\n\t\t\treturn position.addOffset(pos, -3 + adjustedOffset.top, -6 + adjustedOffset.left);\n\t\t};\n\t\tthis.addGap[\"right\"] = pos => {\n\t\t\tconst adjustedOffset = this.getAdjustOffset();\n\t\t\treturn position.addOffset(pos, -3 + adjustedOffset.top, 6 + adjustedOffset.left);\n\t\t};\n\n\t\tthis.hasContentTemplate = this.dialogConfig.content instanceof TemplateRef;\n\t}\n\n\tgetAdjustOffset() {\n\t\tconst closestWithPos = closestAttr(\"position\", [\"relative\", \"fixed\", \"absolute\"], this.elementRef.nativeElement.parentElement);\n\t\tconst topPos = closestWithPos ? closestWithPos.getBoundingClientRect().top * -1 : 0;\n\t\tconst leftPos = closestWithPos ? closestWithPos.getBoundingClientRect().left * -1 : 0;\n\n\t\treturn {top: topPos, left: leftPos};\n\t}\n\n\tafterDialogViewInit() {\n\t\tconst focusableElements = getFocusElementList(this.dialog.nativeElement);\n\t\tif (focusableElements.length > 0) {\n\t\t\tthis.role = \"dialog\";\n\t\t\tfocusableElements[0].focus();\n\t\t}\n\t}\n}\n","import { Component, Input, HostBinding } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-tooltip-definition\",\n\ttemplate: `\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--tooltip--bottom' : placement === 'bottom',\n\t\t\t\t'bx--tooltip--top' : placement === 'top',\n\t\t\t\t'bx--tooltip--align-start' : alignment === 'start',\n\t\t\t\t'bx--tooltip--align-center' : alignment === 'center',\n\t\t\t\t'bx--tooltip--align-end' : alignment === 'end'\n\t\t\t}\"\n\t\t\tclass=\"bx--tooltip__trigger bx--tooltip--a11y bx--tooltip__trigger--definition\"\n\t\t\t[attr.aria-describedby]=\"id\">\n\t\t\t<ng-content></ng-content>\n\t\t</button>\n\t\t<div class=\"bx--assistive-text\" [id]=\"id\" role=\"tooltip\">{{content}}</div>\n\t`\n})\nexport class TooltipDefinition {\n\tstatic tooltipItemCount = 0;\n\n\t@Input() id = `definition-tooltip-${TooltipDefinition.tooltipItemCount++}`;\n\t/**\n\t * Body content for the `TooltipDefinition`.\n\t */\n\t@Input() content: string;\n\t/**\n\t * The placement in which the `TooltipDefinition` appears.\n\t * Set to `\"top\"` to have it positioned above the trigger text\n\t */\n\t@Input() placement: \"bottom\" | \"top\" = \"bottom\";\n\n\t@Input() alignment: \"start\" | \"center\" | \"end\" = \"start\";\n\n\t@HostBinding(\"class.bx--tooltip--definition\") className = true;\n\t@HostBinding(\"class.bx--tooltip--a11y\") accessibility = true;\n}\n","import { Component, Input, HostBinding } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-tooltip-icon\",\n\ttemplate: `\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclass=\"bx--tooltip__trigger bx--tooltip--a11y\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--tooltip--bottom' : placement === 'bottom',\n\t\t\t\t'bx--tooltip--top' : placement === 'top',\n\t\t\t\t'bx--tooltip--left' : placement === 'left',\n\t\t\t\t'bx--tooltip--right' : placement === 'right',\n\t\t\t\t'bx--tooltip--align-start' : alignment === 'start',\n\t\t\t\t'bx--tooltip--align-center' : alignment === 'center',\n\t\t\t\t'bx--tooltip--align-end' : alignment === 'end'\n\t\t\t}\">\n\t\t\t<span class=\"bx--assistive-text\">{{content}}</span>\n\t\t\t<ng-content></ng-content>\n\t\t</button>\n\t`\n})\nexport class TooltipIcon {\n\t/**\n\t * Body content for the `TooltipIcon`.\n\t */\n\t@Input() content: string;\n\t/**\n\t * The placement in which the `TooltipIcon` appears.\n\t * Set to `\"top\"` to have it positioned above the icon\n\t */\n\t@Input() placement: \"bottom\" | \"top\" | \"left\" | \"right\" = \"bottom\";\n\n\t@Input() alignment: \"start\" | \"center\" | \"end\" = \"start\";\n\n\t@HostBinding(\"class.bx--tooltip-icon\") className = true;\n}\n","import {\n\tDirective,\n\tInput,\n\tTemplateRef,\n\tElementRef,\n\tInjector,\n\tComponentFactoryResolver,\n\tViewContainerRef,\n\tHostBinding\n} from \"@angular/core\";\nimport { DialogDirective } from \"../dialog.directive\";\nimport { Tooltip } from \"./tooltip.component\";\nimport { DialogService } from \"../dialog.service\";\nimport { EventService } from \"carbon-components-angular/utils\";\n\n\n/**\n * Directive for extending `Dialog` to create tooltips.\n *\n * [See demo](../../?path=/story/tooltip--basic)\n *\n * class: TooltipDirective (extends PopoverDirective)\n *\n *\n * selector: `nTooltip`\n *\n *\n * ```html\n * <button nTooltip=\"I am a tooltip\" placement=\"right\" trigger=\"mouseenter\" type=\"danger\">Tooltip Right</button>\n * <button nTooltip=\"I am a tooltip\" type=\"warning\">Tooltip Top warning on click</button>\n * ```\n *\n * <example-url>../../iframe.html?id=tooltip--basic</example-url>\n */\n@Directive({\n\tselector: \"[ibmTooltip]\",\n\texportAs: \"ibmTooltip\",\n\tproviders: [\n\t\tDialogService\n\t]\n})\nexport class TooltipDirective extends DialogDirective {\n\t/**\n\t * The string or template content to be exposed by the tooltip.\n\t */\n\t@Input() ibmTooltip: string | TemplateRef<any>;\n\t/**\n\t * Set tooltip type to reflect 'warning' or 'error' styles.\n\t */\n\t// tslint:disable-next-line:no-input-rename\n\t@Input(\"tooltip-type\") tooltipType: \"warning\" | \"error\" | \"\" = \"\";\n\n\t@HostBinding(\"tabindex\") tabIndex = 0;\n\n\t@HostBinding(\"class.bx--tooltip__trigger\") className = true;\n\n\t@HostBinding(\"attr.aria-describedby\") get descriptorId(): string {\n\t\treturn this.isOpen ? this.dialogConfig.compID : null;\n\t}\n\n\t/**\n\t * Creates an instance of `TooltipDirective`.\n\t */\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected viewContainerRef: ViewContainerRef,\n\t\tprotected dialogService: DialogService,\n\t\tprotected eventService: EventService\n\t) {\n\t\tsuper(elementRef, viewContainerRef, dialogService, eventService);\n\t\tdialogService.setContext({ component: Tooltip });\n\t}\n\n\tupdateConfig() {\n\t\tthis.dialogConfig.content = this.ibmTooltip;\n\t\tthis.dialogConfig.type = this.tooltipType;\n\t\tthis.dialogConfig.offset = this.offset;\n\t}\n}\n","import {\n\tDirective,\n\tInput,\n\tTemplateRef,\n\tElementRef,\n\tInjector,\n\tComponentFactoryResolver,\n\tViewContainerRef,\n\tHostListener\n} from \"@angular/core\";\nimport { TooltipDirective } from \"./tooltip.directive\";\nimport { DialogService } from \"../dialog.service\";\nimport { Tooltip } from \"./tooltip.component\";\n\n\n/**\n * A directive that creates a tooltip `Dialog` for exposing truncated text.\n *\n * class: EllipsisTooltip (extends PopoverDirective)\n *\n * selector: `nEllipsisTooltip`\n *\n * ```html\n * <div class=\"ellipsis\" nEllipsisTooltip>Tooltip for ellipsis because I can and I am really really long</div>\n * ```\n */\n@Directive({\n\tselector: \"[ibmEllipsisTooltip]\",\n\tproviders: [\n\t\tDialogService\n\t]\n})\nexport class EllipsisTooltip extends TooltipDirective {\n\t/**\n\t * If text is truncated, this appends the text to the dialog as content.\n\t * @returns null\n\t * @memberof EllipsisTooltip\n\t */\n\tupdateTooltipContent() {\n\t\tif (this.elementRef.nativeElement.scrollWidth <= this.elementRef.nativeElement.offsetWidth) {\n\t\t\tthis.disabled = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.disabled = false;\n\t\tthis.dialogConfig.content = this.elementRef.nativeElement.innerText;\n\t}\n\n\t@HostListener(\"click\")\n\tonClick() {\n\t\tif (this.trigger === \"click\") {\n\t\t\tthis.updateTooltipContent();\n\t\t}\n\t}\n\n\t@HostListener(\"mouseenter\")\n\tonHover() {\n\t\tif (this.trigger === \"hover\" || this.trigger === \"mouseenter\") {\n\t\t\tthis.updateTooltipContent();\n\t\t}\n\t}\n\n\t@HostListener(\"focus\")\n\tonFocus() {\n\t\tthis.updateTooltipContent();\n\t}\n}\n","import {\n\tComponent,\n\tHostListener,\n\tElementRef,\n\tAfterViewInit,\n\tOptional\n} from \"@angular/core\";\nimport { Dialog } from \"../dialog.component\";\nimport { position } from \"@carbon/utils-position\";\nimport { isFocusInLastItem, isFocusInFirstItem } from \"carbon-components-angular/common\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { ExperimentalService } from \"carbon-components-angular/experimental\";\nimport { AnimationFrameService, ElementService } from \"carbon-components-angular/utils\";\nimport { CloseReasons } from \"../dialog-config.interface\";\nimport { closestAttr } from \"carbon-components-angular/utils\";\n\n/**\n * Extend the `Dialog` component to create an overflow menu.\n *\n * Not used directly. See overflow-menu.component and overflow-menu.directive for more\n */\n@Component({\n\tselector: \"ibm-overflow-menu-pane\",\n\ttemplate: `\n\t\t<ul\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\"\n\t\t\t[ngClass]=\"{'bx--overflow-menu--flip': dialogConfig.flip}\"\n\t\t\trole=\"menu\"\n\t\t\t#dialog\n\t\t\tclass=\"bx--overflow-menu-options bx--overflow-menu-options--open\"\n\t\t\trole=\"menu\"\n\t\t\t(click)=\"onClose($event)\"\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\">\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"dialogConfig.content\"\n\t\t\t\t[ngTemplateOutletContext]=\"{overflowMenu: this}\">\n\t\t\t</ng-template>\n\t\t</ul>\n\t`\n})\nexport class OverflowMenuPane extends Dialog implements AfterViewInit {\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected i18n: I18n,\n\t\tprotected experimental: ExperimentalService,\n\t\t@Optional() protected animationFrameService: AnimationFrameService = null,\n\t\t// mark `elementService` as optional since making it mandatory would be a breaking change\n\t\t@Optional() protected elementService: ElementService = null) {\n\t\tsuper(elementRef, elementService, animationFrameService);\n\t}\n\n\tonDialogInit() {\n\t\tconst positionOverflowMenu = pos => {\n\t\t\tlet offset;\n\t\t\t/*\n\t\t\t* 20 is half the width of the overflow menu trigger element.\n\t\t\t* we also move the element by half of it's own width, since\n\t\t\t* position service will try and center everything\n\t\t\t*/\n\t\t\tconst closestRel = closestAttr(\"position\", [\"relative\", \"fixed\", \"absolute\"], this.elementRef.nativeElement);\n\t\t\tconst topFix = closestRel ? closestRel.getBoundingClientRect().top * -1 : 0;\n\t\t\tconst leftFix = closestRel ? closestRel.getBoundingClientRect().left * -1 : 0;\n\n\t\t\toffset = Math.round(this.dialog.nativeElement.offsetWidth / 2) - 20;\n\t\t\tif (this.dialogConfig.flip) {\n\t\t\t\treturn position.addOffset(pos, topFix, (-offset + leftFix));\n\t\t\t}\n\t\t\treturn position.addOffset(pos, topFix, (offset + leftFix));\n\t\t};\n\n\t\tthis.addGap[\"bottom\"] = positionOverflowMenu;\n\n\t\tthis.addGap[\"top\"] = positionOverflowMenu;\n\n\t\tif (!this.dialogConfig.menuLabel) {\n\t\t\tthis.dialogConfig.menuLabel = this.i18n.get().OVERFLOW_MENU.OVERFLOW;\n\t\t}\n\t}\n\n\t@HostListener(\"keydown\", [\"$event\"])\n\thostkeys(event: KeyboardEvent) {\n\t\tconst listItems = this.listItems();\n\n\t\tswitch (event.key) {\n\t\t\tcase \"Down\": // IE specific value\n\t\t\tcase \"ArrowDown\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!isFocusInLastItem(event, listItems))  {\n\t\t\t\t\tconst index = listItems.findIndex(item => item === event.target);\n\t\t\t\t\tlistItems[index + 1].focus();\n\t\t\t\t} else {\n\t\t\t\t\tlistItems[0].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Up\": // IE specific value\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!isFocusInFirstItem(event, listItems))  {\n\t\t\t\t\tconst index = listItems.findIndex(item => item === event.target);\n\t\t\t\t\tlistItems[index - 1].focus();\n\t\t\t\t} else {\n\t\t\t\t\tlistItems[listItems.length - 1].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Home\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tlistItems[0].focus();\n\t\t\t\tbreak;\n\n\t\t\tcase \"End\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tlistItems[listItems.length - 1].focus();\n\t\t\t\tbreak;\n\n\t\t\tcase \"Esc\": // IE specific value\n\t\t\tcase \"Escape\":\n\t\t\tcase \"Tab\":\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\tthis.doClose({\n\t\t\t\t\treason: CloseReasons.interaction,\n\t\t\t\t\ttarget: event.target\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault: break;\n\t\t}\n\t}\n\n\tonClose(event) {\n\t\tthis.doClose({\n\t\t\treason: CloseReasons.interaction,\n\t\t\ttarget: event.target\n\t\t});\n\t}\n\n\tafterDialogViewInit() {\n\t\tconst focusElementList = this.listItems();\n\t\tfocusElementList.forEach(button => {\n\t\t\t// Allows user to set tabindex to 0.\n\t\t\tif (button.getAttribute(\"tabindex\") === null) {\n\t\t\t\tbutton.tabIndex = -1;\n\t\t\t}\n\t\t});\n\t\tif (focusElementList[0]) {\n\t\t\tfocusElementList[0].tabIndex = 0;\n\t\t\tfocusElementList[0].focus();\n\t\t}\n\t}\n\n\tprotected listItems() {\n\t\tconst selector = \".bx--overflow-menu-options__option:not([disabled]) .bx--overflow-menu-options__btn\";\n\t\treturn Array.from<HTMLElement>(this.elementRef.nativeElement.querySelectorAll(selector));\n\t}\n}\n","import { AfterViewInit, Component, ElementRef, Optional } from \"@angular/core\";\nimport { position } from \"@carbon/utils-position\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { AnimationFrameService, ElementService } from \"carbon-components-angular/utils\";\nimport { closestAttr } from \"carbon-components-angular/utils\";\nimport { Dialog } from \"../dialog.component\";\n\n@Component({\n\tselector: \"ibm-overflow-custom-menu-pane\",\n\ttemplate: `\n\t\t<div\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\"\n\t\t\t[ngClass]=\"{'bx--overflow-menu--flip': dialogConfig.flip}\"\n\t\t\tclass=\"bx--overflow-menu-options bx--overflow-menu-options--open\"\n\t\t\trole=\"menu\"\n\t\t\t(click)=\"doClose()\"\n\t\t\t#dialog\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\">\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"dialogConfig.content\"\n\t\t\t\t[ngTemplateOutletContext]=\"{overflowMenu: this}\">\n\t\t\t</ng-template>\n\t\t</div>\n\t`\n})\nexport class OverflowMenuCustomPane extends Dialog implements AfterViewInit {\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected i18n: I18n,\n\t\t@Optional() protected animationFrameService: AnimationFrameService = null,\n\t\t// mark `elementService` as optional since making it mandatory would be a breaking change\n\t\t@Optional() protected elementService: ElementService = null\n\t) {\n\t\tsuper(elementRef, elementService, animationFrameService);\n\t}\n\n\tonDialogInit() {\n\t\tconst positionOverflowMenu = pos => {\n\t\t\tlet offset;\n\t\t\t/*\n\t\t\t* 20 is half the width of the overflow menu trigger element.\n\t\t\t* we also move the element by half of it's own width, since\n\t\t\t* position service will try and center everything\n\t\t\t*/\n\t\t\tconst closestRel = closestAttr(\"position\", [\"relative\", \"fixed\", \"absolute\"], this.elementRef.nativeElement);\n\t\t\tconst topFix = closestRel ? closestRel.getBoundingClientRect().top * -1 : 0;\n\t\t\tconst leftFix = closestRel ? closestRel.getBoundingClientRect().left * -1 : 0;\n\n\t\t\toffset = Math.round(this.dialog.nativeElement.offsetWidth / 2) - 20;\n\t\t\tif (this.dialogConfig.flip) {\n\t\t\t\treturn position.addOffset(pos, topFix, (-offset + leftFix));\n\t\t\t}\n\t\t\treturn position.addOffset(pos, topFix, (offset + leftFix));\n\t\t};\n\n\t\tthis.addGap[\"bottom\"] = positionOverflowMenu;\n\n\t\tthis.addGap[\"top\"] = positionOverflowMenu;\n\n\t\tif (!this.dialogConfig.menuLabel) {\n\t\t\tthis.dialogConfig.menuLabel = this.i18n.get().OVERFLOW_MENU.OVERFLOW;\n\t\t}\n\t}\n}\n","import {\n\tDirective,\n\tElementRef,\n\tViewContainerRef,\n\tInput,\n\tTemplateRef,\n\tHostListener,\n\tAfterContentInit\n} from \"@angular/core\";\nimport { DialogDirective } from \"../dialog.directive\";\nimport { DialogService } from \"../dialog.service\";\nimport { OverflowMenuPane } from \"./overflow-menu-pane.component\";\nimport { OverflowMenuCustomPane } from \"./overflow-menu-custom-pane.component\";\nimport { EventService } from \"carbon-components-angular/utils\";\n\n\n/**\n * Directive for extending `Dialog` to create overflow menus.\n *\n * class: OverflowMenuDirective (extends DialogDirective)\n *\n *\n * selector: `ibmOverflowMenu`\n *\n *\n * ```html\n * <div [ibmOverflowMenu]=\"templateRef\"></div>\n * <ng-template #templateRef>\n * \t<!-- overflow menu options here -->\n * </ng-template>\n * ```\n *\n * ```html\n * <div [ibmOverflowMenu]=\"templateRef\" [customPane]=\"true\"></div>\n * <ng-template #templateRef>\n *  <!-- custom content goes here -->\n * </ng-template>\n * ```\n */\n@Directive({\n\tselector: \"[ibmOverflowMenu]\",\n\texportAs: \"ibmOverflowMenu\",\n\tproviders: [\n\t\tDialogService\n\t]\n})\nexport class OverflowMenuDirective extends DialogDirective implements AfterContentInit {\n\t/**\n\t * Takes a template ref of `OverflowMenuOptions`s\n\t */\n\t@Input() ibmOverflowMenu: TemplateRef<any>;\n\t/**\n\t * Controls wether the overflow menu is flipped\n\t */\n\t@Input() flip = false;\n\t/**\n\t * This specifies any vertical and horizontal offset for the position of the dialog\n\t */\n\t@Input() offset: { x: number, y: number };\n\t/**\n\t * Classes to add to the dialog container\n\t */\n\t@Input() wrapperClass = \"\";\n\t/**\n\t * Set to true to for custom content\n\t */\n\t@Input() customPane = false;\n\n\t/**\n\t * Creates an instance of `OverflowMenuDirective`.\n\t */\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected viewContainerRef: ViewContainerRef,\n\t\tprotected dialogService: DialogService,\n\t\tprotected eventService: EventService\n\t) {\n\t\tsuper(elementRef, viewContainerRef, dialogService, eventService);\n\t}\n\n\tngAfterContentInit() {\n\t\tthis.dialogService.setContext({ component: this.customPane ? OverflowMenuCustomPane : OverflowMenuPane });\n\t}\n\n\tupdateConfig() {\n\t\tthis.dialogConfig.content = this.ibmOverflowMenu;\n\t\tthis.dialogConfig.flip = this.flip;\n\t\tthis.dialogConfig.offset = this.offset;\n\t\tthis.dialogConfig.wrapperClass = this.wrapperClass;\n\t}\n\n\t@HostListener(\"keydown\", [\"$event\"])\n\thostkeys(event: KeyboardEvent) {\n\t\tswitch (event.key) {\n\t\t\tcase \"Enter\":\n\t\t\tcase \" \":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import {\n\tComponent,\n\tContentChild,\n\tElementRef,\n\tEventEmitter,\n\tInput,\n\tOutput,\n\tTemplateRef,\n\tViewEncapsulation\n} from \"@angular/core\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { OverflowMenuDirective } from \"./overflow-menu.directive\";\n\n/**\n * The OverFlow menu component encapsulates the OverFlowMenu directive, and the menu iconography into one convienent component\n *\n * [See demo](../../?path=/story/overflow-menu--basic)\n *\n * html:\n * ```\n * <ibm-overflow-menu>\n *\t<ibm-overflow-menu-option>Option 1</ibm-overflow-menu-option>\n *\t<ibm-overflow-menu-option>Option 2</ibm-overflow-menu-option>\n * </ibm-overflow-menu>\n * ```\n *\n * <example-url>../../iframe.html?id=overflow-menu--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-overflow-menu\",\n\ttemplate: `\n\t\t<button\n\t\t\t[ibmOverflowMenu]=\"options\"\n\t\t\t[ngClass]=\"{'bx--overflow-menu--open': open}\"\n\t\t\tclass=\"bx--overflow-menu {{triggerClass}}\"\n\t\t\t[attr.aria-label]=\"buttonLabel\"\n\t\t\t[flip]=\"flip\"\n\t\t\t[isOpen]=\"open\"\n\t\t\t(isOpenChange)=\"handleOpenChange($event)\"\n\t\t\t[offset]=\"offset\"\n\t\t\t[wrapperClass]=\"wrapperClass\"\n\t\t\taria-haspopup=\"true\"\n\t\t\tclass=\"bx--overflow-menu\"\n\t\t\ttype=\"button\"\n\t\t\t[placement]=\"placement\">\n\t\t\t<ng-template *ngIf=\"customTrigger; else defaultIcon\" [ngTemplateOutlet]=\"customTrigger\"></ng-template>\n\t\t</button>\n\t\t<ng-template #options>\n\t\t\t<ng-content></ng-content>\n\t\t</ng-template>\n\t\t<ng-template #defaultIcon>\n\t\t\t<svg ibmIcon=\"overflow-menu--vertical\" size=\"16\" class=\"bx--overflow-menu__icon\"></svg>\n\t\t</ng-template>\n\t`,\n\tstyles: [`\n\t\t.bx--overflow-menu--open {\n\t\t\topacity: 1\n\t\t}\n\n\t\t/*\n\t\tRotate the overflow menu container as well as the icon, since\n\t\twe calculate our menu position based on the container, not the icon.\n\t\t*/\n\t\t.bx--data-table-v2 .bx--overflow-menu {\n\t\t\ttransform: rotate(90deg);\n\t\t}\n\n\t\t.bx--data-table-v2 .bx--overflow-menu__icon {\n\t\t\ttransform: rotate(180deg);\n\t\t}\n\t`],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class OverflowMenu {\n\t@Input() buttonLabel = this.i18n.get().OVERFLOW_MENU.OVERFLOW;\n\n\t@Input() flip = false;\n\n\t@Input() placement: \"bottom\" | \"top\" = \"bottom\";\n\n\t@Input() open = false;\n\n\t@Output() openChange = new EventEmitter<boolean>();\n\t/**\n\t * Sets the custom overflow menu trigger\n\t */\n\t@Input() customTrigger: TemplateRef<any>;\n\n\t/**\n\t * This specifies any vertical and horizontal offset for the position of the dialog\n\t */\n\t@Input() offset: { x: number, y: number };\n\n\t@Input() wrapperClass = \"\";\n\n\t/**\n\t * This appends additional classes to the overflow trigger/button.\n\t */\n\t@Input() triggerClass = \"\";\n\n\t// @ts-ignore\n\t@ContentChild(OverflowMenuDirective, { static: false }) overflowMenuDirective: OverflowMenuDirective;\n\n\tconstructor(protected elementRef: ElementRef, protected i18n: I18n) {}\n\n\thandleOpenChange(event: boolean) {\n\t\tthis.open = event;\n\t\tthis.openChange.emit(event);\n\t}\n}\n","import {\n\tHostBinding,\n\tComponent,\n\tInput,\n\tElementRef,\n\tOutput,\n\tEventEmitter,\n\tAfterViewInit\n} from \"@angular/core\";\n\n/**\n * Available HTML anchor targets\n */\nexport enum Target {\n\tself = \"_self\",\n\tblank = \"_blank\",\n\tparent = \"_parent\",\n\ttop = \"_top\"\n}\n\n/**\n * Security HTML anchor rel when target is set\n */\nconst REL = \"noreferrer noopener\";\n\n/**\n * `OverflowMenuOption` represents a single option in an overflow menu\n *\n * Presently it has three possible states - normal, disabled, and danger:\n * ```\n * <ibm-overflow-menu-option>Simple option</ibm-overflow-menu-option>\n * <ibm-overflow-menu-option disabled=\"true\">Disabled</ibm-overflow-menu-option>\n * <ibm-overflow-menu-option type=\"danger\">Danger option</ibm-overflow-menu-option>\n * ```\n *\n * For content that expands beyond the overflow menu `OverflowMenuOption` automatically adds a title attribute.\n */\n@Component({\n\tselector: \"ibm-overflow-menu-option\",\n\ttemplate: `\n\t\t<button\n\t\t\t*ngIf=\"!href\"\n\t\t\tclass=\"bx--overflow-menu-options__btn\"\n\t\t\trole=\"menuitem\"\n\t\t\t[tabindex]=\"tabIndex\"\n\t\t\t(focus)=\"onFocus()\"\n\t\t\t(blur)=\"onBlur()\"\n\t\t\t(click)=\"onClick()\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[attr.title]=\"title\">\n\t\t\t<ng-container *ngTemplateOutlet=\"tempOutlet\"></ng-container>\n\t\t</button>\n\n\t\t<a\n\t\t\t*ngIf=\"href\"\n\t\t\tclass=\"bx--overflow-menu-options__btn\"\n\t\t\trole=\"menuitem\"\n\t\t\t[tabindex]=\"tabIndex\"\n\t\t\t(focus)=\"onFocus()\"\n\t\t\t(blur)=\"onBlur()\"\n\t\t\t(click)=\"onClick()\"\n\t\t\t[attr.disabled]=\"disabled\"\n\t\t\t[href]=\"href\"\n\t\t\t[attr.target]=\"target\"\n\t\t\t[attr.rel]=\"rel\"\n\t\t\t[attr.title]=\"title\">\n\t\t\t<ng-container *ngTemplateOutlet=\"tempOutlet\"></ng-container>\n\t\t</a>\n\n\t\t<ng-template #tempOutlet>\n\t\t\t<div class=\"bx--overflow-menu-options__option-content\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</div>\n\t\t</ng-template>\n\t`\n})\nexport class OverflowMenuOption implements AfterViewInit {\n\t@HostBinding(\"class\") optionClass = \"bx--overflow-menu-options__option\";\n\t@HostBinding(\"attr.role\") role = \"presentation\";\n\n\t@HostBinding(\"class.bx--overflow-menu-options__option--danger\")\n\tpublic get isDanger(): Boolean {\n\t\treturn this.type === \"danger\";\n\t}\n\n\t@HostBinding(\"class.bx--overflow-menu-options__option--disabled\")\n\tpublic get isDisabled(): Boolean {\n\t\treturn this.disabled;\n\t}\n\t/**\n\t * toggles between `normal` and `danger` states\n\t */\n\t@Input() type: \"normal\" | \"danger\" = \"normal\";\n\t/**\n\t * disable/enable interactions\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * If it's an anchor, this is its location\n\t */\n\t@Input() href: string;\n\t/**\n\t * Allows to add a target to the anchor\n\t */\n\t@Input() set target(value: Target) {\n\t\tif (!Object.values(Target).includes(value)) {\n\t\t\tconsole.warn(\n`\\`target\\` must have one of the following values: ${Object.values(Target).join(\", \")}.\nPlease use the \\`Target\\` enum exported by carbon-components-angular`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._target = value;\n\t}\n\n\tget target() {\n\t\treturn this._target;\n\t}\n\t/**\n\t * rel only returns its value if target is defined\n\t */\n\tget rel() {\n\t\treturn this._target ? REL : null;\n\t}\n\n\t@Output() selected: EventEmitter<any> = new EventEmitter();\n\n\tpublic tabIndex = -1;\n\t// note: title must be a real attribute (i.e. not a getter) as of Angular@6 due to\n\t// change after checked errors\n\tpublic title = null;\n\n\tprotected _target: Target;\n\n\tconstructor(protected elementRef: ElementRef) {}\n\n\tonClick() {\n\t\tthis.selected.emit();\n\t}\n\n\tonFocus() {\n\t\tsetTimeout(() => this.tabIndex = 0);\n\t}\n\n\tonBlur() {\n\t\tsetTimeout(() => this.tabIndex = -1);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst button = this.elementRef.nativeElement.querySelector(\"button, a\");\n\t\tconst textContainer = button.querySelector(\".bx--overflow-menu-options__option-content\");\n\t\tif (textContainer.scrollWidth > textContainer.offsetWidth) {\n\t\t\tthis.title = button.textContent;\n\t\t}\n\t}\n}\n","// modules\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n// imports\nimport { DialogService } from \"./dialog.service\";\nimport { Dialog } from \"./dialog.component\";\nimport { DialogDirective } from \"./dialog.directive\";\n\nimport { Tooltip } from \"./tooltip/tooltip.component\";\nimport { TooltipDefinition } from \"./tooltip/tooltip-definition.component\";\nimport { TooltipIcon } from \"./tooltip/tooltip-icon.component\";\nimport { TooltipDirective } from \"./tooltip/tooltip.directive\";\nimport { EllipsisTooltip } from \"./tooltip/ellipsis-tooltip.directive\";\n\nimport { OverflowMenu } from \"./overflow-menu/overflow-menu.component\";\nimport { OverflowMenuPane } from \"./overflow-menu/overflow-menu-pane.component\";\nimport { OverflowMenuCustomPane } from \"./overflow-menu/overflow-menu-custom-pane.component\";\nimport { OverflowMenuDirective } from \"./overflow-menu/overflow-menu.directive\";\nimport { OverflowMenuOption } from \"./overflow-menu/overflow-menu-option.component\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { PlaceholderModule } from \"carbon-components-angular/placeholder\";\nimport { ExperimentalModule } from \"carbon-components-angular/experimental\";\nimport { UtilsModule } from \"carbon-components-angular/utils\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tDialog,\n\t\tTooltip,\n\t\tTooltipDefinition,\n\t\tTooltipIcon,\n\t\tOverflowMenu,\n\t\tOverflowMenuPane,\n\t\tOverflowMenuCustomPane,\n\t\tDialogDirective,\n\t\tTooltipDirective,\n\t\tEllipsisTooltip,\n\t\tOverflowMenuDirective,\n\t\tOverflowMenuOption\n\t],\n\texports: [\n\t\tDialog,\n\t\tTooltip,\n\t\tTooltipDefinition,\n\t\tTooltipIcon,\n\t\tOverflowMenu,\n\t\tOverflowMenuPane,\n\t\tOverflowMenuCustomPane,\n\t\tDialogDirective,\n\t\tTooltipDirective,\n\t\tEllipsisTooltip,\n\t\tOverflowMenuDirective,\n\t\tOverflowMenuOption\n\t],\n\tproviders: [ DialogService ],\n\tentryComponents: [\n\t\tDialog,\n\t\tTooltip,\n\t\tOverflowMenuPane,\n\t\tOverflowMenuCustomPane\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tI18nModule,\n\t\tPlaceholderModule,\n\t\tExperimentalModule,\n\t\tUtilsModule,\n\t\tIconModule\n\t]\n})\nexport class DialogModule {}\n"],"names":["CloseReasons","DialogService","closeAll","dialogRefs","forEach","ref","instance","doClose","reason","programmatic","clear","prototype","setContext","options","this","componentFactory","componentFactoryResolver","resolveComponentFactory","component","open","viewContainer","dialogConfig","dialogRef","appendInline","createComponent","injector","placeholderService","hasPlaceholderRef","setTimeout","window","document","querySelector","appendChild","location","nativeElement","add","activeElement","elementRef","focus","close","elementToFocus","destroy","has","delete","querySelectorAll","tabbableSelector","singletonClickListen","listeningForBodyClicks","body","firstElementChild","addEventListener","Set","Injectable","ComponentFactoryResolver","Injector","PlaceholderService","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","Dialog","ngOnInit","placement","split","data","onDialogInit","ngAfterViewInit","o","m","i","_this","dialogElement","dialog","wrapperClass","_b","Symbol","iterator","call","next","length","value","done","_c","extraClass","classList","getFocusElementList","parentElement","parentRef","animationFrameService","animationFrameSubscription","tick","subscribe","placeDialog","closeWhenHidden","visibilitySubscription","elementService","visibility","visible","hidden","afterDialogViewInit","reference","target","pos","positionService","Position","placements","parentEl","el","dialogPlacement","findBestPlacement","addGap","findRelative","findAbsolute","offset","top","y","left","x","setElement","escapeClose","event","key","stopImmediatePropagation","interaction","cycleTabs","clickClose","contains","meta","emit","ngOnDestroy","unsubscribe","Component","args","selector","template","ElementRef","ElementService","AnimationFrameService","decorators","type","Optional","Output","Input","ViewChild","static","HostListener","EventEmitter","Subscription","position","addOffset","gap","right","bottom","left-bottom","right-bottom","DialogDirective","defineProperty","isOpen","compID","ngOnChanges","changes","title","content","ibmDialog","trigger","closeTrigger","shouldClose","disabled","currentValue","onDialogChanges","updateConfig","dialogService","element","eventService","on","shiftKey","bind","toggle","dialogCounter","destroyed","viewContainerRef","onOpen","isOpenChange","onClose","_changes","Directive","exportAs","providers","ViewContainerRef","EventService","HostBinding","role","hasPopup","_super","Tooltip","tslib_1.__extends","adjustedOffset","getAdjustOffset","hasContentTemplate","TemplateRef","closestWithPos","closestAttr","getBoundingClientRect","focusableElements","style","TooltipDefinition","tooltipItemCount","id","alignment","className","accessibility","TooltipIcon","TooltipDirective","ibmTooltip","tooltipType","tabIndex","EllipsisTooltip","updateTooltipContent","scrollWidth","offsetWidth","innerText","onClick","onHover","onFocus","OverflowMenuPane","positionOverflowMenu","closestRel","topFix","leftFix","Math","round","flip","menuLabel","i18n","get","OVERFLOW_MENU","OVERFLOW","hostkeys","index","listItems","preventDefault","isFocusInLastItem","findIndex","item","isFocusInFirstItem","focusElementList","button","getAttribute","from","I18n","ExperimentalService","experimental","OverflowMenuCustomPane","OverflowMenuDirective","ngAfterContentInit","customPane","ibmOverflowMenu","Target","OverflowMenu","handleOpenChange","openChange","encapsulation","ViewEncapsulation","None","ContentChild","buttonLabel","triggerClass","OverflowMenuOption","_target","values","includes","console","warn","join","selected","onBlur","textContainer","textContent","optionClass","DialogModule","NgModule","declarations","exports","entryComponents","imports","CommonModule","I18nModule","PlaceholderModule","ExperimentalModule","UtilsModule","IconModule"],"mappings":"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"}