{"version":3,"file":"carbon-components-angular-content-switcher.umd.js.map","sources":["ng://carbon-components-angular/content-switcher/content-switcher-option.directive.ts","ng://carbon-components-angular/content-switcher/content-switcher.component.ts","ng://carbon-components-angular/content-switcher/content-switcher.module.ts","ng://carbon-components-angular/content-switcher/carbon-components-angular-content-switcher.ts"],"sourcesContent":["import {\n\tDirective,\n\tHostBinding,\n\tInput,\n\tHostListener,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmContentOption]\"\n})\nexport class ContentSwitcherOption {\n\t/**\n\t * Used to activate the option. Only one option may be `active` at a time\n\t */\n\t@Input() set active (value: boolean) {\n\t\tthis._active = value;\n\t\tthis.selectedClass = value;\n\t\tthis.ariaSelected = value;\n\t\tthis.tabindex = value ? \"0\" : \"-1\";\n\t}\n\n\tget active() {\n\t\treturn this._active;\n\t}\n\n\t/**\n\t * Internal name for the option.\n\t * Should be something that identifies the option to the application.\n\t * Accessible from the `ContentSwitcher` `selected` emitter\n\t */\n\t@Input() name = \"option\";\n\n\t/**\n\t * Emits when the option is selected.\n\t */\n\t@Output() selected = new EventEmitter<boolean>();\n\n\t@Output() onClick = new EventEmitter<MouseEvent>();\n\n\t@Output() onFocus = new EventEmitter<FocusEvent>();\n\n\t@HostBinding(\"class\") switcherClass = \"bx--content-switcher-btn\";\n\t@HostBinding(\"class.bx--content-switcher--selected\") selectedClass = false;\n\t@HostBinding(\"attr.role\") role = \"tab\";\n\t@HostBinding(\"attr.aria-selected\") ariaSelected = false;\n\t@HostBinding(\"attr.tabIndex\") tabindex = \"-1\";\n\n\tprotected _active = false;\n\n\t@HostListener(\"click\", [\"$event\"])\n\thostClick(event: MouseEvent) {\n\t\tthis.onClick.emit(event);\n\t\t// skip setting and emitting if the option is already active\n\t\tif (this.active) { return; }\n\t\tthis.active = true;\n\t\tthis.selected.emit(true);\n\t}\n\n\t@HostListener(\"focus\", [\"$event\"])\n\tdoFocus(event: FocusEvent) {\n\t\tthis.onFocus.emit(event);\n\t\t// skip setting and emitting if the option is already active\n\t\tif (this.active) { return; }\n\t\tthis.active = true;\n\t\tthis.selected.emit(true);\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tContentChildren,\n\tQueryList,\n\tOutput,\n\tEventEmitter,\n\tAfterViewInit,\n\tHostListener,\n\tElementRef\n} from \"@angular/core\";\nimport { ContentSwitcherOption } from \"./content-switcher-option.directive\";\nimport { isFocusInLastItem, isFocusInFirstItem } from \"carbon-components-angular/common\";\n\n/**\n * The content switcher can be used for toggling between distinct options.\n * Similar to tabs, but without an associated content panel\n *\n * [See demo](../../?path=/story/content-switcher--basic)\n *\n * ```html\n * <ibm-content-switcher (selected)=\"selected($event)\">\n *\t\t<button ibmContentOption>First section</button>\n *\t\t<button ibmContentOption>Second section</button>\n *\t\t<button ibmContentOption>Third section</button>\n *\t</ibm-content-switcher>\n *\t```\n *\n * <example-url>../../iframe.html?id=content-switcher--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-content-switcher\",\n\ttemplate: `\n\t\t<div\n\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\tclass=\"bx--content-switcher\"\n\t\t\t[class.bx--content-switcher--light]=\"theme === 'light'\"\n\t\t\trole=\"tablist\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t`\n})\nexport class ContentSwitcher implements AfterViewInit {\n\t@Input() ariaLabel = \"content switcher\";\n\t/**\n\t * `light` or `dark` content switcher theme\n\t */\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n\n\t/**\n\t * Emits the activated `ContentSwitcherOption`\n\t */\n\t@Output() selected = new EventEmitter<ContentSwitcherOption>();\n\n\t@ContentChildren(ContentSwitcherOption) options: QueryList<ContentSwitcherOption>;\n\n\tconstructor(protected elementRef: ElementRef) {}\n\n\tngAfterViewInit() {\n\t\tconst firstActive = this.options.find(option => option.active);\n\t\t// delay setting active until the DOM has settled\n\t\tif (!firstActive) {\n\t\t\tsetTimeout(() => this.options.first.active = true);\n\t\t}\n\t\t// subscribe to each item, emit when one is selected, and reset the active states\n\t\tthis.options.forEach(option => {\n\t\t\toption.selected.subscribe((_: boolean) => {\n\t\t\t\tconst active = option;\n\t\t\t\tthis.options.forEach(option => {\n\t\t\t\t\tif (option !== active) {\n\t\t\t\t\t\toption.active = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.selected.emit(active);\n\t\t\t});\n\t\t});\n\t}\n\n\t@HostListener(\"keydown\", [\"$event\"])\n\thostkeys(event: KeyboardEvent) {\n\t\tconst buttonList = Array.from<any>(this.elementRef.nativeElement.querySelectorAll(\"[ibmContentOption]\"));\n\n\t\tswitch (event.key) {\n\t\t\tcase \"Right\": // IE specific value\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!isFocusInLastItem(event, buttonList))  {\n\t\t\t\t\tconst index = buttonList.findIndex(item => item === event.target);\n\t\t\t\t\tbuttonList[index + 1].focus();\n\t\t\t\t} else {\n\t\t\t\t\tbuttonList[0].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Left\": // IE specific value\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!isFocusInFirstItem(event, buttonList))  {\n\t\t\t\t\tconst index = buttonList.findIndex(item => item === event.target);\n\t\t\t\t\tbuttonList[index - 1].focus();\n\t\t\t\t} else {\n\t\t\t\t\tbuttonList[buttonList.length - 1].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Home\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbuttonList[0].focus();\n\t\t\t\tbreak;\n\n\t\t\tcase \"End\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbuttonList[buttonList.length - 1].focus();\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ContentSwitcher } from \"./content-switcher.component\";\nimport { ContentSwitcherOption } from \"./content-switcher-option.directive\";\n\n@NgModule({\n\tdeclarations: [\n\t\tContentSwitcher,\n\t\tContentSwitcherOption\n\t],\n\texports: [\n\t\tContentSwitcher,\n\t\tContentSwitcherOption\n\t],\n\timports: [CommonModule]\n})\nexport class ContentSwitcherModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["EventEmitter","Directive","Input","Output","HostBinding","HostListener","isFocusInLastItem","isFocusInFirstItem","Component","ElementRef","ContentChildren","NgModule","CommonModule"],"mappings":"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"}
