{"version":3,"sources":["ng://carbon-components-angular/number-input/number.component.ts","ng://carbon-components-angular/number-input/number.module.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tHostBinding,\n\tEventEmitter,\n\tOutput,\n\tTemplateRef,\n\tHostListener\n} from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\n\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { Observable } from \"rxjs\";\n\n/**\n * Used to emit changes performed on number input components.\n */\nexport class NumberChange {\n\t/**\n\t * Contains the `Number` that has been changed.\n\t */\n\tsource: NumberComponent;\n\t/**\n\t * The value of the `Number` field encompassed in the `NumberChange` class.\n\t */\n\tvalue: number;\n}\n\n/**\n * [See demo](../../?path=/story/number--basic)\n *\n * <example-url>../../iframe.html?id=number--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-number\",\n\ttemplate: `\n\t\t<label *ngIf=\"skeleton && label\" class=\"bx--label bx--skeleton\"></label>\n\t\t<label *ngIf=\"!skeleton && label\" [for]=\"id\" class=\"bx--label\">\n\t\t\t<ng-container *ngIf=\"!isTemplate(label)\">{{label}}</ng-container>\n\t\t\t<ng-template *ngIf=\"isTemplate(label)\" [ngTemplateOutlet]=\"label\"></ng-template>\n\t\t</label>\n\t\t<div\n\t\t\tdata-numberinput\n\t\t\t[attr.data-invalid]=\"(invalid ? true : null)\"\n\t\t\tclass=\"bx--number\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--number--light': theme === 'light',\n\t\t\t\t'bx--number--nolabel': !label,\n\t\t\t\t'bx--number--helpertext': helperText,\n\t\t\t\t'bx--skeleton' : skeleton,\n\t\t\t\t'bx--number--sm': size === 'sm',\n\t\t\t\t'bx--number--xl': size === 'xl'\n\t\t\t}\">\n\t\t\t<div class=\"bx--number__input-wrapper\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t[id]=\"id\"\n\t\t\t\t\t[value]=\"value\"\n\t\t\t\t\t[attr.min]=\"min\"\n\t\t\t\t\t[attr.max]=\"max\"\n\t\t\t\t\t[attr.step]=\"step\"\n\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t[required]=\"required\"\n\t\t\t\t\t(input)=\"onNumberInputChange($event)\"/>\n\t\t\t\t<svg\n\t\t\t\t\t*ngIf=\"!skeleton && invalid\"\n\t\t\t\t\tibmIcon=\"warning--filled\"\n\t\t\t\t\tsize=\"16\"\n\t\t\t\t\tclass=\"bx--number__invalid\">\n\t\t\t\t</svg>\n\t\t\t\t<div *ngIf=\"!skeleton\" class=\"bx--number__controls\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"bx--number__control-btn up-icon\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\taria-live=\"polite\"\n\t\t\t\t\t\taria-atomic=\"true\"\n\t\t\t\t\t\t[attr.aria-label]=\"getIncrementLabel() | async\"\n\t\t\t\t\t\t(click)=\"onIncrement()\">\n\t\t\t\t\t\t<svg ibmIcon=\"caret--up\" size=\"16\"></svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"bx--number__control-btn down-icon\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\taria-live=\"polite\"\n\t\t\t\t\t\taria-atomic=\"true\"\n\t\t\t\t\t\t[attr.aria-label]=\"getDecrementLabel() | async\"\n\t\t\t\t\t\t(click)=\"onDecrement()\">\n\t\t\t\t\t\t<svg ibmIcon=\"caret--down\" size=\"16\"></svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"helperText && !invalid\" class=\"bx--form__helper-text\">\n\t\t\t\t<ng-container *ngIf=\"!isTemplate(helperText)\">{{helperText}}</ng-container>\n\t\t\t\t<ng-template *ngIf=\"isTemplate(helperText)\" [ngTemplateOutlet]=\"helperText\"></ng-template>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"invalid\" class=\"bx--form-requirement\">\n\t\t\t\t<ng-container *ngIf=\"!isTemplate(invalidText)\">{{invalidText}}</ng-container>\n\t\t\t\t<ng-template *ngIf=\"isTemplate(invalidText)\" [ngTemplateOutlet]=\"invalidText\"></ng-template>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: NumberComponent,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class NumberComponent implements ControlValueAccessor {\n\t/**\n\t * Variable used for creating unique ids for number input components.\n\t */\n\tstatic numberCount = 0;\n\n\t@HostBinding(\"class.bx--form-item\") containerClass = true;\n\n\t/**\n\t * `light` or `dark` number input theme.\n\t */\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n\t/**\n\t * Set to `true` for a disabled number input.\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * Set to `true` for a loading number component.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Set to `true` for an invalid number component.\n\t */\n\t@Input() invalid = false;\n\t/**\n\t * The unique id for the number component.\n\t */\n\t@Input() id = `number-${NumberComponent.numberCount}`;\n\t/**\n\t * Number input field render size\n\t */\n\t@Input() size: \"sm\" | \"md\" | \"xl\" = \"md\";\n\t/**\n\t * Reflects the required attribute of the `input` element.\n\t */\n\t@Input() required: boolean;\n\t/**\n\t * Sets the value attribute on the `input` element.\n\t */\n\t@Input() set value(v: any) {\n\t\tif (v === \"\" || v === null) {\n\t\t\tthis._value = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._value = Number(v);\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\t/**\n\t * Sets the min attribute on the `input` element.\n\t */\n\t@Input() min = null;\n\t/**\n\t * Sets the max attribute on the `input` element.\n\t */\n\t@Input() max = null;\n\t/**\n\t * Sets the text inside the `label` tag.\n\t */\n\t@Input() label: string | TemplateRef<any>;\n\t/**\n\t * Sets the optional helper text.\n\t */\n\t@Input() helperText: string | TemplateRef<any>;\n\t/**\n\t * Sets the invalid text.\n\t */\n\t@Input() invalidText: string | TemplateRef<any>;\n\t/**\n\t * Sets the amount the number controls increment and decrement by.\n\t */\n\t@Input() step = 1;\n\t/**\n\t * If `step` is a decimal, we may want precision to be set to go around floating point precision.\n\t */\n\t@Input() precision: number;\n\t/**\n\t * Emits event notifying other classes when a change in state occurs in the input.\n\t */\n\t@Output() change = new EventEmitter<NumberChange>();\n\n\t@Input()\n\tset decrementLabel(value: string | Observable<string>) {\n\t\tthis._decrementLabel.override(value);\n\t}\n\n\tget decrementLabel() {\n\t\treturn this._decrementLabel.value;\n\t}\n\n\t@Input()\n\tset incrementLabel(value: string | Observable<string>) {\n\t\tthis._incrementLabel.override(value);\n\t}\n\n\tget incrementLabel() {\n\t\treturn this._incrementLabel.value;\n\t}\n\n\tprotected _value = 0;\n\n\tprotected _decrementLabel: Overridable = this.i18n.getOverridable(\"NUMBER.DECREMENT\");\n\tprotected _incrementLabel: Overridable = this.i18n.getOverridable(\"NUMBER.INCREMENT\");\n\n\t/**\n\t * Creates an instance of `Number`.\n\t */\n\tconstructor(protected i18n: I18n) {\n\t\tNumberComponent.numberCount++;\n\t}\n\n\t/**\n\t * This is the initial value set to the component\n\t * @param value The input value.\n\t */\n\tpublic writeValue(value: any) {\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Sets a method in order to propagate changes back to the form.\n\t */\n\tpublic registerOnChange(fn: any) {\n\t\tthis.propagateChange = fn;\n\t}\n\n\t/**\n\t * Registers a callback to be triggered when the control has been touched.\n\t * @param fn Callback to be triggered when the number input is touched.\n\t */\n\tpublic registerOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\t@HostListener(\"focusout\")\n\tfocusOut() {\n\t\tthis.onTouched();\n\t}\n\n\t/**\n\t * Sets the disabled state through the model\n\t */\n\tsetDisabledState(isDisabled: boolean) {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\t/**\n\t * Called when number input is blurred. Needed to properly implement `ControlValueAccessor`.\n\t */\n\tonTouched: () => any = () => { };\n\n\t/**\n\t * Method set in `registerOnChange` to propagate changes back to the form.\n\t */\n\tpropagateChange = (_: any) => { };\n\n\t/**\n\t * Adds `step` to the current `value`.\n\t */\n\tonIncrement(): void {\n\t\tif (this.max === null || this.value + this.step <= this.max) {\n\t\t\tthis.value += this.step;\n\t\t\tthis.value = parseFloat(this.value.toPrecision(this.precision));\n\t\t\tthis.emitChangeEvent();\n\t\t}\n\t}\n\n\t/**\n\t * Subtracts `step` to the current `value`.\n\t */\n\tonDecrement(): void {\n\t\tif (this.min === null || this.value - this.step >= this.min) {\n\t\t\tthis.value -= this.step;\n\t\t\tthis.value = parseFloat(this.value.toPrecision(this.precision));\n\t\t\tthis.emitChangeEvent();\n\t\t}\n\t}\n\n\tgetDecrementLabel(): Observable<string> {\n\t\treturn this._decrementLabel.subject;\n\t}\n\n\tgetIncrementLabel(): Observable<string> {\n\t\treturn this._incrementLabel.subject;\n\t}\n\n\t/**\n\t * Creates a class of `NumberChange` to emit the change in the `Number`.\n\t */\n\temitChangeEvent(): void {\n\t\tlet event = new NumberChange();\n\t\tevent.source = this;\n\t\tevent.value = this.value;\n\t\tthis.change.emit(event);\n\t\tthis.propagateChange(this.value);\n\t}\n\n\tonNumberInputChange(event) {\n\t\tthis.value = event.target.value;\n\t\tthis.emitChangeEvent();\n\t}\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n}\nexport { NumberComponent as Number };\n","// modules\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\n\n// imports\nimport { Number } from \"./number.component\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tNumber\n\t],\n\texports: [\n\t\tNumber\n\t],\n\timports: [\n\t\tFormsModule,\n\t\tCommonModule,\n\t\tI18nModule,\n\t\tIconModule\n\t]\n})\nexport class NumberModule { }\n"],"names":["NumberChange","NumberComponent","Object","defineProperty","prototype","this","_value","v","Number","_decrementLabel","value","override","_incrementLabel","writeValue","registerOnChange","fn","propagateChange","registerOnTouched","onTouched","focusOut","setDisabledState","isDisabled","disabled","onIncrement","max","step","parseFloat","toPrecision","precision","emitChangeEvent","onDecrement","min","getDecrementLabel","subject","getIncrementLabel","event","source","change","emit","onNumberInputChange","target","isTemplate","TemplateRef","numberCount","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","multi","I18n","HostBinding","Input","Output","HostListener","i18n","containerClass","theme","skeleton","invalid","id","size","EventEmitter","getOverridable","_","NumberModule","NgModule","declarations","exports","imports","FormsModule","CommonModule","I18nModule","IconModule"],"mappings":"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"}