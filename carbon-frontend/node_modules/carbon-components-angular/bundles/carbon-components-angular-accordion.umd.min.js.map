{"version":3,"sources":["ng://carbon-components-angular/accordion/accordion-item.component.ts","ng://carbon-components-angular/accordion/accordion.component.ts","ng://carbon-components-angular/accordion/accordion.module.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tHostBinding,\n\tOutput,\n\tTemplateRef,\n\tEventEmitter\n} from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-accordion-item\",\n\ttemplate: `\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\t[attr.aria-expanded]=\"expanded\"\n\t\t\t[attr.aria-controls]=\"id\"\n\t\t\t(click)=\"toggleExpanded()\"\n\t\t\tclass=\"bx--accordion__heading\">\n\t\t\t<svg ibmIcon=\"chevron--right\" size=\"16\" class=\"bx--accordion__arrow\"></svg>\n\t\t\t<p *ngIf=\"!isTemplate(title)\"\n\t\t\t\tclass=\"bx--accordion__title\"\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t'bx--skeleton__text': skeleton\n\t\t\t\t}\">\n\t\t\t\t{{!skeleton ? title : null}}\n\t\t\t</p>\n\t\t\t<ng-template\n\t\t\t\t*ngIf=\"isTemplate(title)\"\n\t\t\t\t[ngTemplateOutlet]=\"title\"\n\t\t\t\t[ngTemplateOutletContext]=\"context\">\n\t\t\t</ng-template>\n\t\t</button>\n\t\t<div [id]=\"id\" class=\"bx--accordion__content\">\n\t\t\t<ng-content *ngIf=\"!skeleton; else skeletonTemplate\"></ng-content>\n\t\t\t<ng-template #skeletonTemplate>\n\t\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 90%\"></p>\n\t\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 80%\"></p>\n\t\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 95%\"></p>\n\t\t\t</ng-template>\n\t\t</div>\n\t`\n})\nexport class AccordionItem {\n\tstatic accordionItemCount = 0;\n\t@Input() title: string | TemplateRef<any>;\n\t@Input() context: Object | null = null;\n\t@Input() id = `accordion-item-${AccordionItem.accordionItemCount}`;\n\t@Input() skeleton = false;\n\t@Output() selected = new EventEmitter();\n\n\t@HostBinding(\"class.bx--accordion__item\") itemClass = true;\n\t@HostBinding(\"class.bx--accordion__item--active\") @Input() expanded = false;\n\t@HostBinding(\"style.display\") itemType = \"list-item\";\n\t@HostBinding(\"attr.role\") role = \"heading\";\n\t@HostBinding(\"attr.aria-level\") @Input() ariaLevel = 3;\n\n\tconstructor() {\n\t\tAccordionItem.accordionItemCount++;\n\t}\n\n\tpublic toggleExpanded() {\n\t\tif (!this.skeleton) {\n\t\t\tthis.expanded = !this.expanded;\n\t\t\tthis.selected.emit({id: this.id, expanded: this.expanded});\n\t\t}\n\t}\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tContentChildren,\n\tQueryList,\n\tAfterContentInit\n} from \"@angular/core\";\nimport { AccordionItem } from \"./accordion-item.component\";\n\n/**\n * [See demo](../../?path=/story/accordion--basic)\n *\n * <example-url>../../iframe.html?id=accordion--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-accordion\",\n\ttemplate: `\n\t\t<ul class=\"bx--accordion\"\n\t\t\t[class.bx--accordion--end]=\"align == 'end'\"\n\t\t\t[class.bx--accordion--start]=\"align == 'start'\">\n\t\t\t<ng-content></ng-content>\n\t\t</ul>\n\t`\n})\nexport class Accordion implements AfterContentInit {\n\t@Input() align: \"start\" | \"end\" = \"end\";\n\n\t@ContentChildren(AccordionItem) children: QueryList<AccordionItem>;\n\n\tprotected _skeleton = false;\n\n\t@Input()\n\tset skeleton(value: any) {\n\t\tthis._skeleton = value;\n\t\tthis.updateChildren();\n\t}\n\n\tget skeleton(): any {\n\t\treturn this._skeleton;\n\t}\n\n\tngAfterContentInit() {\n\t\tthis.updateChildren();\n\t}\n\n\tprotected updateChildren() {\n\t\tif (this.children) {\n\t\t\tthis.children.toArray().forEach(child => child.skeleton = this.skeleton);\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Accordion } from \"./accordion.component\";\nimport { AccordionItem } from \"./accordion-item.component\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tAccordion,\n\t\tAccordionItem\n\t],\n\texports: [\n\t\tAccordion,\n\t\tAccordionItem\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tIconModule\n\t]\n})\nexport class AccordionModule { }\n"],"names":["AccordionItem","prototype","toggleExpanded","this","skeleton","expanded","selected","emit","id","isTemplate","value","TemplateRef","accordionItemCount","Component","args","selector","template","Input","Output","HostBinding","type","context","EventEmitter","itemClass","itemType","role","ariaLevel","Accordion","Object","defineProperty","_skeleton","updateChildren","ngAfterContentInit","_this","children","toArray","forEach","child","ContentChildren","align","NgModule","declarations","exports","imports","CommonModule","IconModule","AccordionModule"],"mappings":"2iBA4DQA,EAAAC,UAAAC,eAAP,WACMC,KAAKC,WACTD,KAAKE,UAAYF,KAAKE,SACtBF,KAAKG,SAASC,KAAK,CAACC,GAAIL,KAAKK,GAAIH,SAAUF,KAAKE,aAI3CL,EAAAC,UAAAQ,WAAP,SAAkBC,GACjB,OAAOA,aAAiBC,EAAAA,aAzBlBX,EAAAY,mBAAqB,E,oBAlC5BC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,qBACVC,SAAU,+gC,qEAiCTC,EAAAA,Q,eACAA,EAAAA,Q,UACAA,EAAAA,Q,gBACAA,EAAAA,Q,gBACAC,EAAAA,S,iBAEAC,EAAAA,YAAWL,KAAA,CAAC,+B,gBACZK,EAAAA,YAAWL,KAAA,CAAC,sCAAmC,CAAAM,KAAGH,EAAAA,Q,gBAClDE,EAAAA,YAAWL,KAAA,CAAC,mB,YACZK,EAAAA,YAAWL,KAAA,CAAC,e,iBACZK,EAAAA,YAAWL,KAAA,CAAC,oBAAiB,CAAAM,KAAGH,EAAAA,SAgBlCjB,GAdC,SAAAA,IAXSG,KAAAkB,QAAyB,KACzBlB,KAAAK,GAAK,kBAAkBR,EAAcY,mBACrCT,KAAAC,UAAW,EACVD,KAAAG,SAAW,IAAIgB,EAAAA,aAEiBnB,KAAAoB,WAAY,EACKpB,KAAAE,UAAW,EACxCF,KAAAqB,SAAW,YACfrB,KAAAsB,KAAO,UACQtB,KAAAuB,UAAY,EAGpD1B,EAAcY,qBC3ChB,IAAAe,GAiBCC,OAAAC,eACIF,EAAA1B,UAAA,WAAQ,C,IAKZ,WACC,OAAOE,KAAK2B,W,IAPb,SACapB,GACZP,KAAK2B,UAAYpB,EACjBP,KAAK4B,kB,gCAONJ,EAAA1B,UAAA+B,mBAAA,WACC7B,KAAK4B,kBAGIJ,EAAA1B,UAAA8B,eAAV,WAAA,IAAAE,EAAA9B,KACKA,KAAK+B,UACR/B,KAAK+B,SAASC,UAAUC,QAAQ,SAAAC,GAAS,OAAAA,EAAMjC,SAAW6B,EAAK7B,Y,oBAjCjES,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,gBACVC,SAAU,qM,+BASTC,EAAAA,Q,gBAEAqB,EAAAA,gBAAexB,KAAA,CAACd,K,gBAIhBiB,EAAAA,SAmBFU,GApCA,SAAAA,IAWUxB,KAAAoC,MAAyB,MAIxBpC,KAAA2B,WAAY,E,2BCtBtBU,EAAAA,SAAQ1B,KAAA,CAAC,CACT2B,aAAc,CACbd,EACA3B,GAED0C,QAAS,CACRf,EACA3B,GAED2C,QAAS,CACRC,EAAAA,aACAC,EAAAA,gBAG6BC,GAd/B,SAAAA,K"}