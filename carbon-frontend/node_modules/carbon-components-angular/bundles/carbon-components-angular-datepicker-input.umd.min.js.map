{"version":3,"sources":["ng://carbon-components-angular/datepicker-input/datepicker-input.component.ts","ng://carbon-components-angular/datepicker-input/datepicker-input.module.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tElementRef,\n\tTemplateRef,\n\tViewChild\n} from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n@Component({\n\tselector: \"ibm-date-picker-input\",\n\ttemplate: `\n\t<div class=\"bx--form-item\">\n\t\t<div class=\"bx--date-picker\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--date-picker--simple' : type === 'simple',\n\t\t\t\t'bx--date-picker--single' : type === 'single',\n\t\t\t\t'bx--date-picker--range' : type === 'range',\n\t\t\t\t'bx--date-picker--light' : theme === 'light',\n\t\t\t\t'bx--skeleton' : skeleton\n\t\t\t}\">\n\t\t\t<div class=\"bx--date-picker-container\">\n\t\t\t\t<label *ngIf=\"label\" [for]=\"id\" class=\"bx--label\">\n\t\t\t\t\t<ng-container *ngIf=\"!isTemplate(label)\">{{label}}</ng-container>\n\t\t\t\t\t<ng-template *ngIf=\"isTemplate(label)\" [ngTemplateOutlet]=\"label\"></ng-template>\n\t\t\t\t</label>\n\t\t\t\t<div class=\"bx--date-picker-input__wrapper\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'bx--date-picker-input__wrapper--invalid': invalid\n\t\t\t\t\t}\">\n\t\t\t\t\t<input\n\t\t\t\t\t\t#input\n\t\t\t\t\t\t*ngIf=\"!skeleton\"\n\t\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"bx--date-picker__input\"\n\t\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t\t'bx--date-picker__input--sm': size === 'sm',\n\t\t\t\t\t\t\t'bx--date-picker__input--xl': size === 'xl'\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\t[attr.data-invalid]=\"invalid ? true : undefined\"\n\t\t\t\t\t\t[value]=\"value\"\n\t\t\t\t\t\t[pattern]=\"pattern\"\n\t\t\t\t\t\t[placeholder]=\"placeholder\"\n\t\t\t\t\t\t[id]= \"id\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t(change)=\"onChange($event)\"/>\n\t\t\t\t\t\t<svg *ngIf=\"type !== 'simple'\" ibmIcon=\"calendar\" size=\"16\" class=\"bx--date-picker__icon\"></svg>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"invalid\" class=\"bx--form-requirement\">\n\t\t\t\t\t<ng-container *ngIf=\"!isTemplate(invalidText)\">{{invalidText}}</ng-container>\n\t\t\t\t\t<ng-template *ngIf=\"isTemplate(invalidText)\" [ngTemplateOutlet]=\"invalidText\"></ng-template>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n</div>\n\t`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: DatePickerInput,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class DatePickerInput {\n\tprivate static datePickerCount = 0;\n\t/**\n\t * Select a calendar type for the `model`.\n\t * Internal purposes only.\n\t */\n\t@Input() type: \"simple\" | \"single\" | \"range\" = \"simple\";\n\n\t@Input() id = `datepicker-${DatePickerInput.datePickerCount++}`;\n\n\t@Input() hasIcon = false;\n\n\t@Input() label: string | TemplateRef<any>;\n\n\t@Input() placeholder = \"mm/dd/yyyy\";\n\n\t@Input() pattern = \"^\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}$\";\n\n\t@Output() valueChange: EventEmitter<string> = new EventEmitter();\n\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n\n\t@Input() disabled = false;\n\n\t@Input() invalid = false;\n\n\t@Input() invalidText: string | TemplateRef<any>;\n\n\t@Input() skeleton = false;\n\n\t@Input() value = \"\";\n\n\t@Input() size: \"sm\" | \"md\" | \"xl\" = \"md\";\n\n\t// @ts-ignore\n\t@ViewChild(\"input\", { static: false }) input: ElementRef;\n\n\tconstructor(protected elementRef: ElementRef) {}\n\n\tonChange(event) {\n\t\tthis.value = event.target.value;\n\t\tthis.valueChange.emit(this.value);\n\t\tthis.propagateChange(this.value);\n\t\tthis.onTouched();\n\t}\n\n\tpublic writeValue(value: any) {\n\t\tthis.value = value;\n\t}\n\n\tpublic registerOnChange(fn: any) {\n\t\tthis.propagateChange = fn;\n\t}\n\n\tpublic registerOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\tonTouched: () => any = () => {};\n\n\tpropagateChange = (_: any) => {};\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { DatePickerInput } from \"./datepicker-input.component\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tDatePickerInput\n\t],\n\texports: [\n\t\tDatePickerInput\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tIconModule\n\t]\n})\nexport class DatePickerInputModule { }\n"],"names":["DatePickerInput","prototype","onChange","event","this","value","target","valueChange","emit","propagateChange","onTouched","writeValue","registerOnChange","fn","registerOnTouched","isTemplate","TemplateRef","datePickerCount","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","multi","ElementRef","Input","Output","ViewChild","static","elementRef","type","id","hasIcon","placeholder","pattern","EventEmitter","theme","disabled","invalid","skeleton","size","_","NgModule","declarations","exports","imports","CommonModule","IconModule","DatePickerInputModule"],"mappings":"onBA0GCA,EAAAC,UAAAC,SAAA,SAASC,GACRC,KAAKC,MAAQF,EAAMG,OAAOD,MAC1BD,KAAKG,YAAYC,KAAKJ,KAAKC,OAC3BD,KAAKK,gBAAgBL,KAAKC,OAC1BD,KAAKM,aAGCV,EAAAC,UAAAU,WAAP,SAAkBN,GACjBD,KAAKC,MAAQA,GAGPL,EAAAC,UAAAW,iBAAP,SAAwBC,GACvBT,KAAKK,gBAAkBI,GAGjBb,EAAAC,UAAAa,kBAAP,SAAyBD,GACxBT,KAAKM,UAAYG,GAOXb,EAAAC,UAAAc,WAAP,SAAkBV,GACjB,OAAOA,aAAiBW,EAAAA,aA9DVhB,EAAAiB,gBAAkB,E,oBAzDjCC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,wBACVC,SAAU,00DA8CVC,UAAW,CACV,CACCC,QAASC,EAAAA,kBACTC,YAAazB,EACb0B,OAAO,Q,yCA1DTC,EAAAA,c,8BAoECC,EAAAA,Q,UAEAA,EAAAA,Q,eAEAA,EAAAA,Q,aAEAA,EAAAA,Q,mBAEAA,EAAAA,Q,eAEAA,EAAAA,Q,mBAEAC,EAAAA,S,aAEAD,EAAAA,Q,gBAEAA,EAAAA,Q,eAEAA,EAAAA,Q,mBAEAA,EAAAA,Q,gBAEAA,EAAAA,Q,aAEAA,EAAAA,Q,YAEAA,EAAAA,Q,aAGAE,EAAAA,UAASX,KAAA,CAAC,QAAS,CAAEY,UAAQ,OA8B/B/B,GA5BC,SAAAA,EAAsBgC,GAAA5B,KAAA4B,WAAAA,EA/Bb5B,KAAA6B,KAAsC,SAEtC7B,KAAA8B,GAAK,cAAclC,EAAgBiB,kBAEnCb,KAAA+B,SAAU,EAIV/B,KAAAgC,YAAc,aAEdhC,KAAAiC,QAAU,6BAETjC,KAAAG,YAAoC,IAAI+B,EAAAA,aAEzClC,KAAAmC,MAA0B,OAE1BnC,KAAAoC,UAAW,EAEXpC,KAAAqC,SAAU,EAIVrC,KAAAsC,UAAW,EAEXtC,KAAAC,MAAQ,GAERD,KAAAuC,KAA2B,KA0BpCvC,KAAAM,UAAuB,aAEvBN,KAAAK,gBAAkB,SAACmC,K,2BC1HnBC,EAAAA,SAAQ1B,KAAA,CAAC,CACT2B,aAAc,CACb9C,GAED+C,QAAS,CACR/C,GAEDgD,QAAS,CACRC,EAAAA,aACAC,EAAAA,gBAGmCC,GAZrC,SAAAA,K"}