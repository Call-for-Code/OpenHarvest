/**
 *
 * carbon-angular v0.0.0 | tooltip-icon.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, HostBinding } from "@angular/core";
export class TooltipIcon {
    constructor() {
        /**
         * The placement in which the `TooltipIcon` appears.
         * Set to `"top"` to have it positioned above the icon
         */
        this.placement = "bottom";
        this.alignment = "start";
        this.className = true;
    }
}
TooltipIcon.decorators = [
    { type: Component, args: [{
                selector: "ibm-tooltip-icon",
                template: `
		<button
			type="button"
			class="bx--tooltip__trigger bx--tooltip--a11y"
			[ngClass]="{
				'bx--tooltip--bottom' : placement === 'bottom',
				'bx--tooltip--top' : placement === 'top',
				'bx--tooltip--left' : placement === 'left',
				'bx--tooltip--right' : placement === 'right',
				'bx--tooltip--align-start' : alignment === 'start',
				'bx--tooltip--align-center' : alignment === 'center',
				'bx--tooltip--align-end' : alignment === 'end'
			}">
			<span class="bx--assistive-text">{{content}}</span>
			<ng-content></ng-content>
		</button>
	`
            }] }
];
TooltipIcon.propDecorators = {
    content: [{ type: Input }],
    placement: [{ type: Input }],
    alignment: [{ type: Input }],
    className: [{ type: HostBinding, args: ["class.bx--tooltip-icon",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC1pY29uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvZGlhbG9nLyIsInNvdXJjZXMiOlsidG9vbHRpcC90b29sdGlwLWljb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQXNCOUQsTUFBTSxPQUFPLFdBQVc7SUFwQnhCO1FBeUJDOzs7V0FHRztRQUNNLGNBQVMsR0FBd0MsUUFBUSxDQUFDO1FBRTFELGNBQVMsR0FBK0IsT0FBTyxDQUFDO1FBRWxCLGNBQVMsR0FBRyxJQUFJLENBQUM7SUFDekQsQ0FBQzs7O1lBbENBLFNBQVMsU0FBQztnQkFDVixRQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQlQ7YUFDRDs7O3NCQUtDLEtBQUs7d0JBS0wsS0FBSzt3QkFFTCxLQUFLO3dCQUVMLFdBQVcsU0FBQyx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBIb3N0QmluZGluZyB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tdG9vbHRpcC1pY29uXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PGJ1dHRvblxuXHRcdFx0dHlwZT1cImJ1dHRvblwiXG5cdFx0XHRjbGFzcz1cImJ4LS10b29sdGlwX190cmlnZ2VyIGJ4LS10b29sdGlwLS1hMTF5XCJcblx0XHRcdFtuZ0NsYXNzXT1cIntcblx0XHRcdFx0J2J4LS10b29sdGlwLS1ib3R0b20nIDogcGxhY2VtZW50ID09PSAnYm90dG9tJyxcblx0XHRcdFx0J2J4LS10b29sdGlwLS10b3AnIDogcGxhY2VtZW50ID09PSAndG9wJyxcblx0XHRcdFx0J2J4LS10b29sdGlwLS1sZWZ0JyA6IHBsYWNlbWVudCA9PT0gJ2xlZnQnLFxuXHRcdFx0XHQnYngtLXRvb2x0aXAtLXJpZ2h0JyA6IHBsYWNlbWVudCA9PT0gJ3JpZ2h0Jyxcblx0XHRcdFx0J2J4LS10b29sdGlwLS1hbGlnbi1zdGFydCcgOiBhbGlnbm1lbnQgPT09ICdzdGFydCcsXG5cdFx0XHRcdCdieC0tdG9vbHRpcC0tYWxpZ24tY2VudGVyJyA6IGFsaWdubWVudCA9PT0gJ2NlbnRlcicsXG5cdFx0XHRcdCdieC0tdG9vbHRpcC0tYWxpZ24tZW5kJyA6IGFsaWdubWVudCA9PT0gJ2VuZCdcblx0XHRcdH1cIj5cblx0XHRcdDxzcGFuIGNsYXNzPVwiYngtLWFzc2lzdGl2ZS10ZXh0XCI+e3tjb250ZW50fX08L3NwYW4+XG5cdFx0XHQ8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG5cdFx0PC9idXR0b24+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgVG9vbHRpcEljb24ge1xuXHQvKipcblx0ICogQm9keSBjb250ZW50IGZvciB0aGUgYFRvb2x0aXBJY29uYC5cblx0ICovXG5cdEBJbnB1dCgpIGNvbnRlbnQ6IHN0cmluZztcblx0LyoqXG5cdCAqIFRoZSBwbGFjZW1lbnQgaW4gd2hpY2ggdGhlIGBUb29sdGlwSWNvbmAgYXBwZWFycy5cblx0ICogU2V0IHRvIGBcInRvcFwiYCB0byBoYXZlIGl0IHBvc2l0aW9uZWQgYWJvdmUgdGhlIGljb25cblx0ICovXG5cdEBJbnB1dCgpIHBsYWNlbWVudDogXCJib3R0b21cIiB8IFwidG9wXCIgfCBcImxlZnRcIiB8IFwicmlnaHRcIiA9IFwiYm90dG9tXCI7XG5cblx0QElucHV0KCkgYWxpZ25tZW50OiBcInN0YXJ0XCIgfCBcImNlbnRlclwiIHwgXCJlbmRcIiA9IFwic3RhcnRcIjtcblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdG9vbHRpcC1pY29uXCIpIGNsYXNzTmFtZSA9IHRydWU7XG59XG4iXX0=