/**
 *
 * carbon-angular v0.0.0 | dialog.module.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


// modules
import { NgModule } from "@angular/core";
import { CommonModule } from "@angular/common";
// imports
import { DialogService } from "./dialog.service";
import { Dialog } from "./dialog.component";
import { DialogDirective } from "./dialog.directive";
import { Tooltip } from "./tooltip/tooltip.component";
import { TooltipDefinition } from "./tooltip/tooltip-definition.component";
import { TooltipIcon } from "./tooltip/tooltip-icon.component";
import { TooltipDirective } from "./tooltip/tooltip.directive";
import { EllipsisTooltip } from "./tooltip/ellipsis-tooltip.directive";
import { OverflowMenu } from "./overflow-menu/overflow-menu.component";
import { OverflowMenuPane } from "./overflow-menu/overflow-menu-pane.component";
import { OverflowMenuCustomPane } from "./overflow-menu/overflow-menu-custom-pane.component";
import { OverflowMenuDirective } from "./overflow-menu/overflow-menu.directive";
import { OverflowMenuOption } from "./overflow-menu/overflow-menu-option.component";
import { I18nModule } from "carbon-components-angular/i18n";
import { PlaceholderModule } from "carbon-components-angular/placeholder";
import { ExperimentalModule } from "carbon-components-angular/experimental";
import { UtilsModule } from "carbon-components-angular/utils";
import { IconModule } from "carbon-components-angular/icon";
export class DialogModule {
}
DialogModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    Dialog,
                    Tooltip,
                    TooltipDefinition,
                    TooltipIcon,
                    OverflowMenu,
                    OverflowMenuPane,
                    OverflowMenuCustomPane,
                    DialogDirective,
                    TooltipDirective,
                    EllipsisTooltip,
                    OverflowMenuDirective,
                    OverflowMenuOption
                ],
                exports: [
                    Dialog,
                    Tooltip,
                    TooltipDefinition,
                    TooltipIcon,
                    OverflowMenu,
                    OverflowMenuPane,
                    OverflowMenuCustomPane,
                    DialogDirective,
                    TooltipDirective,
                    EllipsisTooltip,
                    OverflowMenuDirective,
                    OverflowMenuOption
                ],
                providers: [DialogService],
                entryComponents: [
                    Dialog,
                    Tooltip,
                    OverflowMenuPane,
                    OverflowMenuCustomPane
                ],
                imports: [
                    CommonModule,
                    I18nModule,
                    PlaceholderModule,
                    ExperimentalModule,
                    UtilsModule,
                    IconModule
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvZGlhbG9nLyIsInNvdXJjZXMiOlsiZGlhbG9nLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVO0FBQ1YsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsVUFBVTtBQUNWLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDNUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBRXZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNoRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUM3RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNwRixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDMUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzlELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQStDNUQsTUFBTSxPQUFPLFlBQVk7OztZQTdDeEIsUUFBUSxTQUFDO2dCQUNULFlBQVksRUFBRTtvQkFDYixNQUFNO29CQUNOLE9BQU87b0JBQ1AsaUJBQWlCO29CQUNqQixXQUFXO29CQUNYLFlBQVk7b0JBQ1osZ0JBQWdCO29CQUNoQixzQkFBc0I7b0JBQ3RCLGVBQWU7b0JBQ2YsZ0JBQWdCO29CQUNoQixlQUFlO29CQUNmLHFCQUFxQjtvQkFDckIsa0JBQWtCO2lCQUNsQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1IsTUFBTTtvQkFDTixPQUFPO29CQUNQLGlCQUFpQjtvQkFDakIsV0FBVztvQkFDWCxZQUFZO29CQUNaLGdCQUFnQjtvQkFDaEIsc0JBQXNCO29CQUN0QixlQUFlO29CQUNmLGdCQUFnQjtvQkFDaEIsZUFBZTtvQkFDZixxQkFBcUI7b0JBQ3JCLGtCQUFrQjtpQkFDbEI7Z0JBQ0QsU0FBUyxFQUFFLENBQUUsYUFBYSxDQUFFO2dCQUM1QixlQUFlLEVBQUU7b0JBQ2hCLE1BQU07b0JBQ04sT0FBTztvQkFDUCxnQkFBZ0I7b0JBQ2hCLHNCQUFzQjtpQkFDdEI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNSLFlBQVk7b0JBQ1osVUFBVTtvQkFDVixpQkFBaUI7b0JBQ2pCLGtCQUFrQjtvQkFDbEIsV0FBVztvQkFDWCxVQUFVO2lCQUNWO2FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtb2R1bGVzXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uXCI7XG5cbi8vIGltcG9ydHNcbmltcG9ydCB7IERpYWxvZ1NlcnZpY2UgfSBmcm9tIFwiLi9kaWFsb2cuc2VydmljZVwiO1xuaW1wb3J0IHsgRGlhbG9nIH0gZnJvbSBcIi4vZGlhbG9nLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgRGlhbG9nRGlyZWN0aXZlIH0gZnJvbSBcIi4vZGlhbG9nLmRpcmVjdGl2ZVwiO1xuXG5pbXBvcnQgeyBUb29sdGlwIH0gZnJvbSBcIi4vdG9vbHRpcC90b29sdGlwLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgVG9vbHRpcERlZmluaXRpb24gfSBmcm9tIFwiLi90b29sdGlwL3Rvb2x0aXAtZGVmaW5pdGlvbi5jb21wb25lbnRcIjtcbmltcG9ydCB7IFRvb2x0aXBJY29uIH0gZnJvbSBcIi4vdG9vbHRpcC90b29sdGlwLWljb24uY29tcG9uZW50XCI7XG5pbXBvcnQgeyBUb29sdGlwRGlyZWN0aXZlIH0gZnJvbSBcIi4vdG9vbHRpcC90b29sdGlwLmRpcmVjdGl2ZVwiO1xuaW1wb3J0IHsgRWxsaXBzaXNUb29sdGlwIH0gZnJvbSBcIi4vdG9vbHRpcC9lbGxpcHNpcy10b29sdGlwLmRpcmVjdGl2ZVwiO1xuXG5pbXBvcnQgeyBPdmVyZmxvd01lbnUgfSBmcm9tIFwiLi9vdmVyZmxvdy1tZW51L292ZXJmbG93LW1lbnUuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBPdmVyZmxvd01lbnVQYW5lIH0gZnJvbSBcIi4vb3ZlcmZsb3ctbWVudS9vdmVyZmxvdy1tZW51LXBhbmUuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBPdmVyZmxvd01lbnVDdXN0b21QYW5lIH0gZnJvbSBcIi4vb3ZlcmZsb3ctbWVudS9vdmVyZmxvdy1tZW51LWN1c3RvbS1wYW5lLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgT3ZlcmZsb3dNZW51RGlyZWN0aXZlIH0gZnJvbSBcIi4vb3ZlcmZsb3ctbWVudS9vdmVyZmxvdy1tZW51LmRpcmVjdGl2ZVwiO1xuaW1wb3J0IHsgT3ZlcmZsb3dNZW51T3B0aW9uIH0gZnJvbSBcIi4vb3ZlcmZsb3ctbWVudS9vdmVyZmxvdy1tZW51LW9wdGlvbi5jb21wb25lbnRcIjtcbmltcG9ydCB7IEkxOG5Nb2R1bGUgfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pMThuXCI7XG5pbXBvcnQgeyBQbGFjZWhvbGRlck1vZHVsZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3BsYWNlaG9sZGVyXCI7XG5pbXBvcnQgeyBFeHBlcmltZW50YWxNb2R1bGUgfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9leHBlcmltZW50YWxcIjtcbmltcG9ydCB7IFV0aWxzTW9kdWxlIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvdXRpbHNcIjtcbmltcG9ydCB7IEljb25Nb2R1bGUgfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pY29uXCI7XG5cbkBOZ01vZHVsZSh7XG5cdGRlY2xhcmF0aW9uczogW1xuXHRcdERpYWxvZyxcblx0XHRUb29sdGlwLFxuXHRcdFRvb2x0aXBEZWZpbml0aW9uLFxuXHRcdFRvb2x0aXBJY29uLFxuXHRcdE92ZXJmbG93TWVudSxcblx0XHRPdmVyZmxvd01lbnVQYW5lLFxuXHRcdE92ZXJmbG93TWVudUN1c3RvbVBhbmUsXG5cdFx0RGlhbG9nRGlyZWN0aXZlLFxuXHRcdFRvb2x0aXBEaXJlY3RpdmUsXG5cdFx0RWxsaXBzaXNUb29sdGlwLFxuXHRcdE92ZXJmbG93TWVudURpcmVjdGl2ZSxcblx0XHRPdmVyZmxvd01lbnVPcHRpb25cblx0XSxcblx0ZXhwb3J0czogW1xuXHRcdERpYWxvZyxcblx0XHRUb29sdGlwLFxuXHRcdFRvb2x0aXBEZWZpbml0aW9uLFxuXHRcdFRvb2x0aXBJY29uLFxuXHRcdE92ZXJmbG93TWVudSxcblx0XHRPdmVyZmxvd01lbnVQYW5lLFxuXHRcdE92ZXJmbG93TWVudUN1c3RvbVBhbmUsXG5cdFx0RGlhbG9nRGlyZWN0aXZlLFxuXHRcdFRvb2x0aXBEaXJlY3RpdmUsXG5cdFx0RWxsaXBzaXNUb29sdGlwLFxuXHRcdE92ZXJmbG93TWVudURpcmVjdGl2ZSxcblx0XHRPdmVyZmxvd01lbnVPcHRpb25cblx0XSxcblx0cHJvdmlkZXJzOiBbIERpYWxvZ1NlcnZpY2UgXSxcblx0ZW50cnlDb21wb25lbnRzOiBbXG5cdFx0RGlhbG9nLFxuXHRcdFRvb2x0aXAsXG5cdFx0T3ZlcmZsb3dNZW51UGFuZSxcblx0XHRPdmVyZmxvd01lbnVDdXN0b21QYW5lXG5cdF0sXG5cdGltcG9ydHM6IFtcblx0XHRDb21tb25Nb2R1bGUsXG5cdFx0STE4bk1vZHVsZSxcblx0XHRQbGFjZWhvbGRlck1vZHVsZSxcblx0XHRFeHBlcmltZW50YWxNb2R1bGUsXG5cdFx0VXRpbHNNb2R1bGUsXG5cdFx0SWNvbk1vZHVsZVxuXHRdXG59KVxuZXhwb3J0IGNsYXNzIERpYWxvZ01vZHVsZSB7fVxuIl19