/**
 *
 * carbon-angular v0.0.0 | icon.module.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


// modules
import { NgModule, Optional, SkipSelf } from "@angular/core";
import { CommonModule } from "@angular/common";
// imports
import { IconDirective } from "./icon.directive";
import { IconService } from "./icon.service";
// icon imports
import Add16 from "@carbon/icons/es/add/16";
import Calendar16 from "@carbon/icons/es/calendar/16";
import CaretDown16 from "@carbon/icons/es/caret--down/16";
import CaretLeft16 from "@carbon/icons/es/caret--left/16";
import CaretRight16 from "@carbon/icons/es/caret--right/16";
import CaretUp16 from "@carbon/icons/es/caret--up/16";
import Checkmark16 from "@carbon/icons/es/checkmark/16";
import CheckmarkFilled16 from "@carbon/icons/es/checkmark--filled/16";
import CheckmarkOutline16 from "@carbon/icons/es/checkmark--outline/16";
import ChevronDown16 from "@carbon/icons/es/chevron--down/16";
import ChevronRight16 from "@carbon/icons/es/chevron--right/16";
import Close16 from "@carbon/icons/es/close/16";
import Close20 from "@carbon/icons/es/close/20";
import Copy16 from "@carbon/icons/es/copy/16";
import Delete16 from "@carbon/icons/es/delete/16";
import Download16 from "@carbon/icons/es/download/16";
import ErrorFilled16 from "@carbon/icons/es/error--filled/16";
import InformationFilled16 from "@carbon/icons/es/information--filled/16";
import Menu16 from "@carbon/icons/es/menu/16";
import Menu20 from "@carbon/icons/es/menu/20";
import OverflowMenuVertical16 from "@carbon/icons/es/overflow-menu--vertical/16";
import OverflowMenuHorizontal16 from "@carbon/icons/es/overflow-menu--horizontal/16";
import Save16 from "@carbon/icons/es/save/16";
import Search16 from "@carbon/icons/es/search/16";
import Settings16 from "@carbon/icons/es/settings/16";
import Warning16 from "@carbon/icons/es/warning/16";
import WarningFilled16 from "@carbon/icons/es/warning--filled/16";
// either provides a new instance of IconService, or returns the parent
export function ICON_SERVICE_PROVIDER_FACTORY(parentService) {
    return parentService || new IconService();
}
// icon service *must* be a singleton to ensure that icons are accessible globally and not duplicated
export const ICON_SERVICE_PROVIDER = {
    provide: IconService,
    deps: [[new Optional(), new SkipSelf(), IconService]],
    useFactory: ICON_SERVICE_PROVIDER_FACTORY
};
export class IconModule {
    constructor(iconService) {
        this.iconService = iconService;
        iconService.registerAll([
            Add16,
            Calendar16,
            CaretDown16,
            CaretLeft16,
            CaretRight16,
            CaretUp16,
            Checkmark16,
            CheckmarkFilled16,
            CheckmarkOutline16,
            ChevronDown16,
            ChevronRight16,
            Close16,
            Close20,
            Copy16,
            Delete16,
            Download16,
            ErrorFilled16,
            InformationFilled16,
            Menu16,
            Menu20,
            OverflowMenuVertical16,
            OverflowMenuHorizontal16,
            Save16,
            Search16,
            Settings16,
            Warning16,
            WarningFilled16
        ]);
    }
}
IconModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    IconDirective
                ],
                exports: [
                    IconDirective
                ],
                imports: [
                    CommonModule
                ],
                providers: [
                    ICON_SERVICE_PROVIDER
                ]
            },] }
];
/** @nocollapse */
IconModule.ctorParameters = () => [
    { type: IconService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2ljb24vIiwic291cmNlcyI6WyJpY29uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVO0FBQ1YsT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxVQUFVO0FBQ1YsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxlQUFlO0FBQ2YsT0FBTyxLQUFLLE1BQU0seUJBQXlCLENBQUM7QUFDNUMsT0FBTyxVQUFVLE1BQU0sOEJBQThCLENBQUM7QUFDdEQsT0FBTyxXQUFXLE1BQU0saUNBQWlDLENBQUM7QUFDMUQsT0FBTyxXQUFXLE1BQU0saUNBQWlDLENBQUM7QUFDMUQsT0FBTyxZQUFZLE1BQU0sa0NBQWtDLENBQUM7QUFDNUQsT0FBTyxTQUFTLE1BQU0sK0JBQStCLENBQUM7QUFDdEQsT0FBTyxXQUFXLE1BQU0sK0JBQStCLENBQUM7QUFDeEQsT0FBTyxpQkFBaUIsTUFBTSx1Q0FBdUMsQ0FBQztBQUN0RSxPQUFPLGtCQUFrQixNQUFNLHdDQUF3QyxDQUFDO0FBQ3hFLE9BQU8sYUFBYSxNQUFNLG1DQUFtQyxDQUFDO0FBQzlELE9BQU8sY0FBYyxNQUFNLG9DQUFvQyxDQUFDO0FBQ2hFLE9BQU8sT0FBTyxNQUFNLDJCQUEyQixDQUFDO0FBQ2hELE9BQU8sT0FBTyxNQUFNLDJCQUEyQixDQUFDO0FBQ2hELE9BQU8sTUFBTSxNQUFNLDBCQUEwQixDQUFDO0FBQzlDLE9BQU8sUUFBUSxNQUFNLDRCQUE0QixDQUFDO0FBQ2xELE9BQU8sVUFBVSxNQUFNLDhCQUE4QixDQUFDO0FBQ3RELE9BQU8sYUFBYSxNQUFNLG1DQUFtQyxDQUFDO0FBQzlELE9BQU8sbUJBQW1CLE1BQU0seUNBQXlDLENBQUM7QUFDMUUsT0FBTyxNQUFNLE1BQU0sMEJBQTBCLENBQUM7QUFDOUMsT0FBTyxNQUFNLE1BQU0sMEJBQTBCLENBQUM7QUFDOUMsT0FBTyxzQkFBc0IsTUFBTSw2Q0FBNkMsQ0FBQztBQUNqRixPQUFPLHdCQUF3QixNQUFNLCtDQUErQyxDQUFDO0FBQ3JGLE9BQU8sTUFBTSxNQUFNLDBCQUEwQixDQUFDO0FBQzlDLE9BQU8sUUFBUSxNQUFNLDRCQUE0QixDQUFDO0FBQ2xELE9BQU8sVUFBVSxNQUFNLDhCQUE4QixDQUFDO0FBQ3RELE9BQU8sU0FBUyxNQUFNLDZCQUE2QixDQUFDO0FBQ3BELE9BQU8sZUFBZSxNQUFNLHFDQUFxQyxDQUFDO0FBRWxFLHVFQUF1RTtBQUN2RSxNQUFNLFVBQVUsNkJBQTZCLENBQUMsYUFBMEI7SUFDdkUsT0FBTyxhQUFhLElBQUksSUFBSSxXQUFXLEVBQUUsQ0FBQztBQUMzQyxDQUFDO0FBRUQscUdBQXFHO0FBQ3JHLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHO0lBQ3BDLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxJQUFJLFFBQVEsRUFBRSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3JELFVBQVUsRUFBRSw2QkFBNkI7Q0FDekMsQ0FBQztBQWdCRixNQUFNLE9BQU8sVUFBVTtJQUN0QixZQUFzQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUM3QyxXQUFXLENBQUMsV0FBVyxDQUFDO1lBQ3ZCLEtBQUs7WUFDTCxVQUFVO1lBQ1YsV0FBVztZQUNYLFdBQVc7WUFDWCxZQUFZO1lBQ1osU0FBUztZQUNULFdBQVc7WUFDWCxpQkFBaUI7WUFDakIsa0JBQWtCO1lBQ2xCLGFBQWE7WUFDYixjQUFjO1lBQ2QsT0FBTztZQUNQLE9BQU87WUFDUCxNQUFNO1lBQ04sUUFBUTtZQUNSLFVBQVU7WUFDVixhQUFhO1lBQ2IsbUJBQW1CO1lBQ25CLE1BQU07WUFDTixNQUFNO1lBQ04sc0JBQXNCO1lBQ3RCLHdCQUF3QjtZQUN4QixNQUFNO1lBQ04sUUFBUTtZQUNSLFVBQVU7WUFDVixTQUFTO1lBQ1QsZUFBZTtTQUNmLENBQUMsQ0FBQztJQUNKLENBQUM7OztZQTdDRCxRQUFRLFNBQUM7Z0JBQ1QsWUFBWSxFQUFFO29CQUNiLGFBQWE7aUJBQ2I7Z0JBQ0QsT0FBTyxFQUFFO29CQUNSLGFBQWE7aUJBQ2I7Z0JBQ0QsT0FBTyxFQUFFO29CQUNSLFlBQVk7aUJBQ1o7Z0JBQ0QsU0FBUyxFQUFFO29CQUNWLHFCQUFxQjtpQkFDckI7YUFDRDs7OztZQXhEUSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbW9kdWxlc1xuaW1wb3J0IHsgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uXCI7XG5cbi8vIGltcG9ydHNcbmltcG9ydCB7IEljb25EaXJlY3RpdmUgfSBmcm9tIFwiLi9pY29uLmRpcmVjdGl2ZVwiO1xuaW1wb3J0IHsgSWNvblNlcnZpY2UgfSBmcm9tIFwiLi9pY29uLnNlcnZpY2VcIjtcblxuLy8gaWNvbiBpbXBvcnRzXG5pbXBvcnQgQWRkMTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvYWRkLzE2XCI7XG5pbXBvcnQgQ2FsZW5kYXIxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9jYWxlbmRhci8xNlwiO1xuaW1wb3J0IENhcmV0RG93bjE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2NhcmV0LS1kb3duLzE2XCI7XG5pbXBvcnQgQ2FyZXRMZWZ0MTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvY2FyZXQtLWxlZnQvMTZcIjtcbmltcG9ydCBDYXJldFJpZ2h0MTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvY2FyZXQtLXJpZ2h0LzE2XCI7XG5pbXBvcnQgQ2FyZXRVcDE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2NhcmV0LS11cC8xNlwiO1xuaW1wb3J0IENoZWNrbWFyazE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2NoZWNrbWFyay8xNlwiO1xuaW1wb3J0IENoZWNrbWFya0ZpbGxlZDE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2NoZWNrbWFyay0tZmlsbGVkLzE2XCI7XG5pbXBvcnQgQ2hlY2ttYXJrT3V0bGluZTE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2NoZWNrbWFyay0tb3V0bGluZS8xNlwiO1xuaW1wb3J0IENoZXZyb25Eb3duMTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvY2hldnJvbi0tZG93bi8xNlwiO1xuaW1wb3J0IENoZXZyb25SaWdodDE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2NoZXZyb24tLXJpZ2h0LzE2XCI7XG5pbXBvcnQgQ2xvc2UxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9jbG9zZS8xNlwiO1xuaW1wb3J0IENsb3NlMjAgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvY2xvc2UvMjBcIjtcbmltcG9ydCBDb3B5MTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvY29weS8xNlwiO1xuaW1wb3J0IERlbGV0ZTE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2RlbGV0ZS8xNlwiO1xuaW1wb3J0IERvd25sb2FkMTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvZG93bmxvYWQvMTZcIjtcbmltcG9ydCBFcnJvckZpbGxlZDE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2Vycm9yLS1maWxsZWQvMTZcIjtcbmltcG9ydCBJbmZvcm1hdGlvbkZpbGxlZDE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2luZm9ybWF0aW9uLS1maWxsZWQvMTZcIjtcbmltcG9ydCBNZW51MTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvbWVudS8xNlwiO1xuaW1wb3J0IE1lbnUyMCBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9tZW51LzIwXCI7XG5pbXBvcnQgT3ZlcmZsb3dNZW51VmVydGljYWwxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9vdmVyZmxvdy1tZW51LS12ZXJ0aWNhbC8xNlwiO1xuaW1wb3J0IE92ZXJmbG93TWVudUhvcml6b250YWwxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9vdmVyZmxvdy1tZW51LS1ob3Jpem9udGFsLzE2XCI7XG5pbXBvcnQgU2F2ZTE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL3NhdmUvMTZcIjtcbmltcG9ydCBTZWFyY2gxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9zZWFyY2gvMTZcIjtcbmltcG9ydCBTZXR0aW5nczE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL3NldHRpbmdzLzE2XCI7XG5pbXBvcnQgV2FybmluZzE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL3dhcm5pbmcvMTZcIjtcbmltcG9ydCBXYXJuaW5nRmlsbGVkMTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvd2FybmluZy0tZmlsbGVkLzE2XCI7XG5cbi8vIGVpdGhlciBwcm92aWRlcyBhIG5ldyBpbnN0YW5jZSBvZiBJY29uU2VydmljZSwgb3IgcmV0dXJucyB0aGUgcGFyZW50XG5leHBvcnQgZnVuY3Rpb24gSUNPTl9TRVJWSUNFX1BST1ZJREVSX0ZBQ1RPUlkocGFyZW50U2VydmljZTogSWNvblNlcnZpY2UpIHtcblx0cmV0dXJuIHBhcmVudFNlcnZpY2UgfHwgbmV3IEljb25TZXJ2aWNlKCk7XG59XG5cbi8vIGljb24gc2VydmljZSAqbXVzdCogYmUgYSBzaW5nbGV0b24gdG8gZW5zdXJlIHRoYXQgaWNvbnMgYXJlIGFjY2Vzc2libGUgZ2xvYmFsbHkgYW5kIG5vdCBkdXBsaWNhdGVkXG5leHBvcnQgY29uc3QgSUNPTl9TRVJWSUNFX1BST1ZJREVSID0ge1xuXHRwcm92aWRlOiBJY29uU2VydmljZSxcblx0ZGVwczogW1tuZXcgT3B0aW9uYWwoKSwgbmV3IFNraXBTZWxmKCksIEljb25TZXJ2aWNlXV0sXG5cdHVzZUZhY3Rvcnk6IElDT05fU0VSVklDRV9QUk9WSURFUl9GQUNUT1JZXG59O1xuXG5ATmdNb2R1bGUoe1xuXHRkZWNsYXJhdGlvbnM6IFtcblx0XHRJY29uRGlyZWN0aXZlXG5cdF0sXG5cdGV4cG9ydHM6IFtcblx0XHRJY29uRGlyZWN0aXZlXG5cdF0sXG5cdGltcG9ydHM6IFtcblx0XHRDb21tb25Nb2R1bGVcblx0XSxcblx0cHJvdmlkZXJzOiBbXG5cdFx0SUNPTl9TRVJWSUNFX1BST1ZJREVSXG5cdF1cbn0pXG5leHBvcnQgY2xhc3MgSWNvbk1vZHVsZSB7XG5cdGNvbnN0cnVjdG9yKHByb3RlY3RlZCBpY29uU2VydmljZTogSWNvblNlcnZpY2UpIHtcblx0XHRpY29uU2VydmljZS5yZWdpc3RlckFsbChbXG5cdFx0XHRBZGQxNixcblx0XHRcdENhbGVuZGFyMTYsXG5cdFx0XHRDYXJldERvd24xNixcblx0XHRcdENhcmV0TGVmdDE2LFxuXHRcdFx0Q2FyZXRSaWdodDE2LFxuXHRcdFx0Q2FyZXRVcDE2LFxuXHRcdFx0Q2hlY2ttYXJrMTYsXG5cdFx0XHRDaGVja21hcmtGaWxsZWQxNixcblx0XHRcdENoZWNrbWFya091dGxpbmUxNixcblx0XHRcdENoZXZyb25Eb3duMTYsXG5cdFx0XHRDaGV2cm9uUmlnaHQxNixcblx0XHRcdENsb3NlMTYsXG5cdFx0XHRDbG9zZTIwLFxuXHRcdFx0Q29weTE2LFxuXHRcdFx0RGVsZXRlMTYsXG5cdFx0XHREb3dubG9hZDE2LFxuXHRcdFx0RXJyb3JGaWxsZWQxNixcblx0XHRcdEluZm9ybWF0aW9uRmlsbGVkMTYsXG5cdFx0XHRNZW51MTYsXG5cdFx0XHRNZW51MjAsXG5cdFx0XHRPdmVyZmxvd01lbnVWZXJ0aWNhbDE2LFxuXHRcdFx0T3ZlcmZsb3dNZW51SG9yaXpvbnRhbDE2LFxuXHRcdFx0U2F2ZTE2LFxuXHRcdFx0U2VhcmNoMTYsXG5cdFx0XHRTZXR0aW5nczE2LFxuXHRcdFx0V2FybmluZzE2LFxuXHRcdFx0V2FybmluZ0ZpbGxlZDE2XG5cdFx0XSk7XG5cdH1cbn1cbiJdfQ==