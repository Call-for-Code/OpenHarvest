/**
 *
 * carbon-angular v0.0.0 | accordion-item.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, HostBinding, Output, TemplateRef, EventEmitter } from "@angular/core";
export class AccordionItem {
    constructor() {
        this.context = null;
        this.id = `accordion-item-${AccordionItem.accordionItemCount}`;
        this.skeleton = false;
        this.selected = new EventEmitter();
        this.itemClass = true;
        this.expanded = false;
        this.itemType = "list-item";
        this.role = "heading";
        this.ariaLevel = 3;
        AccordionItem.accordionItemCount++;
    }
    toggleExpanded() {
        if (!this.skeleton) {
            this.expanded = !this.expanded;
            this.selected.emit({ id: this.id, expanded: this.expanded });
        }
    }
    isTemplate(value) {
        return value instanceof TemplateRef;
    }
}
AccordionItem.accordionItemCount = 0;
AccordionItem.decorators = [
    { type: Component, args: [{
                selector: "ibm-accordion-item",
                template: `
		<button
			type="button"
			[attr.aria-expanded]="expanded"
			[attr.aria-controls]="id"
			(click)="toggleExpanded()"
			class="bx--accordion__heading">
			<svg ibmIcon="chevron--right" size="16" class="bx--accordion__arrow"></svg>
			<p *ngIf="!isTemplate(title)"
				class="bx--accordion__title"
				[ngClass]="{
					'bx--skeleton__text': skeleton
				}">
				{{!skeleton ? title : null}}
			</p>
			<ng-template
				*ngIf="isTemplate(title)"
				[ngTemplateOutlet]="title"
				[ngTemplateOutletContext]="context">
			</ng-template>
		</button>
		<div [id]="id" class="bx--accordion__content">
			<ng-content *ngIf="!skeleton; else skeletonTemplate"></ng-content>
			<ng-template #skeletonTemplate>
				<p class="bx--skeleton__text" style="width: 90%"></p>
				<p class="bx--skeleton__text" style="width: 80%"></p>
				<p class="bx--skeleton__text" style="width: 95%"></p>
			</ng-template>
		</div>
	`
            }] }
];
/** @nocollapse */
AccordionItem.ctorParameters = () => [];
AccordionItem.propDecorators = {
    title: [{ type: Input }],
    context: [{ type: Input }],
    id: [{ type: Input }],
    skeleton: [{ type: Input }],
    selected: [{ type: Output }],
    itemClass: [{ type: HostBinding, args: ["class.bx--accordion__item",] }],
    expanded: [{ type: HostBinding, args: ["class.bx--accordion__item--active",] }, { type: Input }],
    itemType: [{ type: HostBinding, args: ["style.display",] }],
    role: [{ type: HostBinding, args: ["attr.role",] }],
    ariaLevel: [{ type: HostBinding, args: ["attr.aria-level",] }, { type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9hY2NvcmRpb24vIiwic291cmNlcyI6WyJhY2NvcmRpb24taXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxLQUFLLEVBQ0wsV0FBVyxFQUNYLE1BQU0sRUFDTixXQUFXLEVBQ1gsWUFBWSxFQUNaLE1BQU0sZUFBZSxDQUFDO0FBbUN2QixNQUFNLE9BQU8sYUFBYTtJQWN6QjtRQVhTLFlBQU8sR0FBa0IsSUFBSSxDQUFDO1FBQzlCLE9BQUUsR0FBRyxrQkFBa0IsYUFBYSxDQUFDLGtCQUFrQixFQUFFLENBQUM7UUFDMUQsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNoQixhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUVFLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFDQSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQzlDLGFBQVEsR0FBRyxXQUFXLENBQUM7UUFDM0IsU0FBSSxHQUFHLFNBQVMsQ0FBQztRQUNGLGNBQVMsR0FBRyxDQUFDLENBQUM7UUFHdEQsYUFBYSxDQUFDLGtCQUFrQixFQUFFLENBQUM7SUFDcEMsQ0FBQztJQUVNLGNBQWM7UUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUM7U0FDM0Q7SUFDRixDQUFDO0lBRU0sVUFBVSxDQUFDLEtBQUs7UUFDdEIsT0FBTyxLQUFLLFlBQVksV0FBVyxDQUFDO0lBQ3JDLENBQUM7O0FBMUJNLGdDQUFrQixHQUFHLENBQUMsQ0FBQzs7WUFsQzlCLFNBQVMsU0FBQztnQkFDVixRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QixRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBNkJUO2FBQ0Q7Ozs7O29CQUdDLEtBQUs7c0JBQ0wsS0FBSztpQkFDTCxLQUFLO3VCQUNMLEtBQUs7dUJBQ0wsTUFBTTt3QkFFTixXQUFXLFNBQUMsMkJBQTJCO3VCQUN2QyxXQUFXLFNBQUMsbUNBQW1DLGNBQUcsS0FBSzt1QkFDdkQsV0FBVyxTQUFDLGVBQWU7bUJBQzNCLFdBQVcsU0FBQyxXQUFXO3dCQUN2QixXQUFXLFNBQUMsaUJBQWlCLGNBQUcsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0SW5wdXQsXG5cdEhvc3RCaW5kaW5nLFxuXHRPdXRwdXQsXG5cdFRlbXBsYXRlUmVmLFxuXHRFdmVudEVtaXR0ZXJcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImlibS1hY2NvcmRpb24taXRlbVwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxidXR0b25cblx0XHRcdHR5cGU9XCJidXR0b25cIlxuXHRcdFx0W2F0dHIuYXJpYS1leHBhbmRlZF09XCJleHBhbmRlZFwiXG5cdFx0XHRbYXR0ci5hcmlhLWNvbnRyb2xzXT1cImlkXCJcblx0XHRcdChjbGljayk9XCJ0b2dnbGVFeHBhbmRlZCgpXCJcblx0XHRcdGNsYXNzPVwiYngtLWFjY29yZGlvbl9faGVhZGluZ1wiPlxuXHRcdFx0PHN2ZyBpYm1JY29uPVwiY2hldnJvbi0tcmlnaHRcIiBzaXplPVwiMTZcIiBjbGFzcz1cImJ4LS1hY2NvcmRpb25fX2Fycm93XCI+PC9zdmc+XG5cdFx0XHQ8cCAqbmdJZj1cIiFpc1RlbXBsYXRlKHRpdGxlKVwiXG5cdFx0XHRcdGNsYXNzPVwiYngtLWFjY29yZGlvbl9fdGl0bGVcIlxuXHRcdFx0XHRbbmdDbGFzc109XCJ7XG5cdFx0XHRcdFx0J2J4LS1za2VsZXRvbl9fdGV4dCc6IHNrZWxldG9uXG5cdFx0XHRcdH1cIj5cblx0XHRcdFx0e3shc2tlbGV0b24gPyB0aXRsZSA6IG51bGx9fVxuXHRcdFx0PC9wPlxuXHRcdFx0PG5nLXRlbXBsYXRlXG5cdFx0XHRcdCpuZ0lmPVwiaXNUZW1wbGF0ZSh0aXRsZSlcIlxuXHRcdFx0XHRbbmdUZW1wbGF0ZU91dGxldF09XCJ0aXRsZVwiXG5cdFx0XHRcdFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJjb250ZXh0XCI+XG5cdFx0XHQ8L25nLXRlbXBsYXRlPlxuXHRcdDwvYnV0dG9uPlxuXHRcdDxkaXYgW2lkXT1cImlkXCIgY2xhc3M9XCJieC0tYWNjb3JkaW9uX19jb250ZW50XCI+XG5cdFx0XHQ8bmctY29udGVudCAqbmdJZj1cIiFza2VsZXRvbjsgZWxzZSBza2VsZXRvblRlbXBsYXRlXCI+PC9uZy1jb250ZW50PlxuXHRcdFx0PG5nLXRlbXBsYXRlICNza2VsZXRvblRlbXBsYXRlPlxuXHRcdFx0XHQ8cCBjbGFzcz1cImJ4LS1za2VsZXRvbl9fdGV4dFwiIHN0eWxlPVwid2lkdGg6IDkwJVwiPjwvcD5cblx0XHRcdFx0PHAgY2xhc3M9XCJieC0tc2tlbGV0b25fX3RleHRcIiBzdHlsZT1cIndpZHRoOiA4MCVcIj48L3A+XG5cdFx0XHRcdDxwIGNsYXNzPVwiYngtLXNrZWxldG9uX190ZXh0XCIgc3R5bGU9XCJ3aWR0aDogOTUlXCI+PC9wPlxuXHRcdFx0PC9uZy10ZW1wbGF0ZT5cblx0XHQ8L2Rpdj5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBBY2NvcmRpb25JdGVtIHtcblx0c3RhdGljIGFjY29yZGlvbkl0ZW1Db3VudCA9IDA7XG5cdEBJbnB1dCgpIHRpdGxlOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+O1xuXHRASW5wdXQoKSBjb250ZXh0OiBPYmplY3QgfCBudWxsID0gbnVsbDtcblx0QElucHV0KCkgaWQgPSBgYWNjb3JkaW9uLWl0ZW0tJHtBY2NvcmRpb25JdGVtLmFjY29yZGlvbkl0ZW1Db3VudH1gO1xuXHRASW5wdXQoKSBza2VsZXRvbiA9IGZhbHNlO1xuXHRAT3V0cHV0KCkgc2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWFjY29yZGlvbl9faXRlbVwiKSBpdGVtQ2xhc3MgPSB0cnVlO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tYWNjb3JkaW9uX19pdGVtLS1hY3RpdmVcIikgQElucHV0KCkgZXhwYW5kZWQgPSBmYWxzZTtcblx0QEhvc3RCaW5kaW5nKFwic3R5bGUuZGlzcGxheVwiKSBpdGVtVHlwZSA9IFwibGlzdC1pdGVtXCI7XG5cdEBIb3N0QmluZGluZyhcImF0dHIucm9sZVwiKSByb2xlID0gXCJoZWFkaW5nXCI7XG5cdEBIb3N0QmluZGluZyhcImF0dHIuYXJpYS1sZXZlbFwiKSBASW5wdXQoKSBhcmlhTGV2ZWwgPSAzO1xuXG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdEFjY29yZGlvbkl0ZW0uYWNjb3JkaW9uSXRlbUNvdW50Kys7XG5cdH1cblxuXHRwdWJsaWMgdG9nZ2xlRXhwYW5kZWQoKSB7XG5cdFx0aWYgKCF0aGlzLnNrZWxldG9uKSB7XG5cdFx0XHR0aGlzLmV4cGFuZGVkID0gIXRoaXMuZXhwYW5kZWQ7XG5cdFx0XHR0aGlzLnNlbGVjdGVkLmVtaXQoe2lkOiB0aGlzLmlkLCBleHBhbmRlZDogdGhpcy5leHBhbmRlZH0pO1xuXHRcdH1cblx0fVxuXG5cdHB1YmxpYyBpc1RlbXBsYXRlKHZhbHVlKSB7XG5cdFx0cmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgVGVtcGxhdGVSZWY7XG5cdH1cbn1cbiJdfQ==