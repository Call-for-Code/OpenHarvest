/**
 *
 * carbon-angular v0.0.0 | tag-filter.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Output, EventEmitter, HostBinding, Input } from "@angular/core";
import { Tag } from "./tag.component";
export class TagFilter extends Tag {
    constructor() {
        super(...arguments);
        this.closeButtonLabel = "Clear Filter";
        /**
         * Function for close/delete the tag
         */
        this.close = new EventEmitter();
        /**
         * We need to stop the immedate propagation of click on the close button
         * to prevent undesired effects when used within dialogs.
         *
         * We need to emit a click event on close to allow for clicks to be listened
         * to on the immediate close button element. `action` distinguishes between clicks on
         * the tag vs. clicks on the close button.
         */
        this.click = new EventEmitter();
    }
    onClick(event) {
        event.stopImmediatePropagation();
        this.click.emit({ action: "click" });
    }
    onClose(event) {
        event.stopImmediatePropagation();
        this.click.emit({ action: "close" });
        this.close.emit();
    }
    get attrClass() {
        return `bx--tag bx--tag--filter bx--tag--${this.type} ${this.class}`;
    }
    get attrAriaLabel() {
        return `${this.title || ""} ${this.closeButtonLabel}`.trim();
    }
}
TagFilter.decorators = [
    { type: Component, args: [{
                selector: "ibm-tag-filter",
                template: `
		<span
			class="bx--tag__label"
			[attr.title]="title ? title : null"
			(click)="onClick($event)">
			<ng-content></ng-content>
		</span>
		<button
			class="bx--tag__close-icon"
			(click)="onClose($event)"
			[disabled]="disabled"
			[title]="closeButtonLabel">
			<span class="bx--visually-hidden">{{closeButtonLabel}}</span>
			<svg ibmIcon="close" size="16"></svg>
		</button>
	`
            }] }
];
TagFilter.propDecorators = {
    closeButtonLabel: [{ type: Input }],
    disabled: [{ type: Input }],
    title: [{ type: Input }],
    close: [{ type: Output }],
    click: [{ type: Output }],
    attrClass: [{ type: HostBinding, args: ["attr.class",] }],
    attrAriaLabel: [{ type: HostBinding, args: ["attr.aria-label",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLWZpbHRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3RhZy8iLCJzb3VyY2VzIjpbInRhZy1maWx0ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsTUFBTSxFQUNOLFlBQVksRUFDWixXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQXFCdEMsTUFBTSxPQUFPLFNBQVUsU0FBUSxHQUFHO0lBbkJsQzs7UUFvQlUscUJBQWdCLEdBQUcsY0FBYyxDQUFDO1FBSTNDOztXQUVHO1FBQ08sVUFBSyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFFMUM7Ozs7Ozs7V0FPRztRQUNPLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBaUMsQ0FBQztJQW9CckUsQ0FBQztJQWxCQSxPQUFPLENBQUMsS0FBVTtRQUNqQixLQUFLLENBQUMsd0JBQXdCLEVBQUUsQ0FBQztRQUNqQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRCxPQUFPLENBQUMsS0FBVTtRQUNqQixLQUFLLENBQUMsd0JBQXdCLEVBQUUsQ0FBQztRQUNqQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQStCLFNBQVM7UUFDdkMsT0FBTyxvQ0FBb0MsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDdEUsQ0FBQztJQUVELElBQW9DLGFBQWE7UUFDaEQsT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLElBQUksRUFBRSxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzlELENBQUM7OztZQXhERCxTQUFTLFNBQUM7Z0JBQ1YsUUFBUSxFQUFFLGdCQUFnQjtnQkFDMUIsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7RUFlVDthQUNEOzs7K0JBRUMsS0FBSzt1QkFDTCxLQUFLO29CQUNMLEtBQUs7b0JBS0wsTUFBTTtvQkFVTixNQUFNO3dCQWFOLFdBQVcsU0FBQyxZQUFZOzRCQUl4QixXQUFXLFNBQUMsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRPdXRwdXQsXG5cdEV2ZW50RW1pdHRlcixcblx0SG9zdEJpbmRpbmcsXG5cdElucHV0XG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBUYWcgfSBmcm9tIFwiLi90YWcuY29tcG9uZW50XCI7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tdGFnLWZpbHRlclwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxzcGFuXG5cdFx0XHRjbGFzcz1cImJ4LS10YWdfX2xhYmVsXCJcblx0XHRcdFthdHRyLnRpdGxlXT1cInRpdGxlID8gdGl0bGUgOiBudWxsXCJcblx0XHRcdChjbGljayk9XCJvbkNsaWNrKCRldmVudClcIj5cblx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHQ8L3NwYW4+XG5cdFx0PGJ1dHRvblxuXHRcdFx0Y2xhc3M9XCJieC0tdGFnX19jbG9zZS1pY29uXCJcblx0XHRcdChjbGljayk9XCJvbkNsb3NlKCRldmVudClcIlxuXHRcdFx0W2Rpc2FibGVkXT1cImRpc2FibGVkXCJcblx0XHRcdFt0aXRsZV09XCJjbG9zZUJ1dHRvbkxhYmVsXCI+XG5cdFx0XHQ8c3BhbiBjbGFzcz1cImJ4LS12aXN1YWxseS1oaWRkZW5cIj57e2Nsb3NlQnV0dG9uTGFiZWx9fTwvc3Bhbj5cblx0XHRcdDxzdmcgaWJtSWNvbj1cImNsb3NlXCIgc2l6ZT1cIjE2XCI+PC9zdmc+XG5cdFx0PC9idXR0b24+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgVGFnRmlsdGVyIGV4dGVuZHMgVGFnIHtcblx0QElucHV0KCkgY2xvc2VCdXR0b25MYWJlbCA9IFwiQ2xlYXIgRmlsdGVyXCI7XG5cdEBJbnB1dCgpIGRpc2FibGVkOiBib29sZWFuO1xuXHRASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuXG5cdC8qKlxuXHQgKiBGdW5jdGlvbiBmb3IgY2xvc2UvZGVsZXRlIHRoZSB0YWdcblx0ICovXG5cdEBPdXRwdXQoKSBjbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG5cdC8qKlxuXHQgKiBXZSBuZWVkIHRvIHN0b3AgdGhlIGltbWVkYXRlIHByb3BhZ2F0aW9uIG9mIGNsaWNrIG9uIHRoZSBjbG9zZSBidXR0b25cblx0ICogdG8gcHJldmVudCB1bmRlc2lyZWQgZWZmZWN0cyB3aGVuIHVzZWQgd2l0aGluIGRpYWxvZ3MuXG5cdCAqXG5cdCAqIFdlIG5lZWQgdG8gZW1pdCBhIGNsaWNrIGV2ZW50IG9uIGNsb3NlIHRvIGFsbG93IGZvciBjbGlja3MgdG8gYmUgbGlzdGVuZWRcblx0ICogdG8gb24gdGhlIGltbWVkaWF0ZSBjbG9zZSBidXR0b24gZWxlbWVudC4gYGFjdGlvbmAgZGlzdGluZ3Vpc2hlcyBiZXR3ZWVuIGNsaWNrcyBvblxuXHQgKiB0aGUgdGFnIHZzLiBjbGlja3Mgb24gdGhlIGNsb3NlIGJ1dHRvbi5cblx0ICovXG5cdEBPdXRwdXQoKSBjbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8eyBhY3Rpb246IFwiY2xpY2tcIiB8IFwiY2xvc2VcIiB9PigpO1xuXG5cdG9uQ2xpY2soZXZlbnQ6IGFueSkge1xuXHRcdGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdHRoaXMuY2xpY2suZW1pdCh7IGFjdGlvbjogXCJjbGlja1wiIH0pO1xuXHR9XG5cblx0b25DbG9zZShldmVudDogYW55KSB7XG5cdFx0ZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0dGhpcy5jbGljay5lbWl0KHsgYWN0aW9uOiBcImNsb3NlXCIgfSk7XG5cdFx0dGhpcy5jbG9zZS5lbWl0KCk7XG5cdH1cblxuXHRASG9zdEJpbmRpbmcoXCJhdHRyLmNsYXNzXCIpIGdldCBhdHRyQ2xhc3MoKSB7XG5cdFx0cmV0dXJuIGBieC0tdGFnIGJ4LS10YWctLWZpbHRlciBieC0tdGFnLS0ke3RoaXMudHlwZX0gJHt0aGlzLmNsYXNzfWA7XG5cdH1cblxuXHRASG9zdEJpbmRpbmcoXCJhdHRyLmFyaWEtbGFiZWxcIikgZ2V0IGF0dHJBcmlhTGFiZWwoKSB7XG5cdFx0cmV0dXJuIGAke3RoaXMudGl0bGUgfHwgXCJcIn0gJHt0aGlzLmNsb3NlQnV0dG9uTGFiZWx9YC50cmltKCk7XG5cdH1cbn1cbiJdfQ==