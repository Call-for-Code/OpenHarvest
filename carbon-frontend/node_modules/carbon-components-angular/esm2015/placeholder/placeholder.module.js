/**
 *
 * carbon-angular v0.0.0 | placeholder.module.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


// modules
import { NgModule, SkipSelf, Optional } from "@angular/core";
import { CommonModule } from "@angular/common";
// imports
import { Placeholder } from "./placeholder.component";
import { PlaceholderService } from "./placeholder.service";
// either provides a new instance of PlaceholderService, or returns the parent
export function PLACEHOLDER_SERVICE_PROVIDER_FACTORY(parentService) {
    return parentService || new PlaceholderService();
}
// placeholder service *must* be a singleton to ensure the placeholder viewRef is accessible globally
export const PLACEHOLDER_SERVICE_PROVIDER = {
    provide: PlaceholderService,
    deps: [[new Optional(), new SkipSelf(), PlaceholderService]],
    useFactory: PLACEHOLDER_SERVICE_PROVIDER_FACTORY
};
export class PlaceholderModule {
}
PlaceholderModule.decorators = [
    { type: NgModule, args: [{
                declarations: [Placeholder],
                exports: [Placeholder],
                providers: [PLACEHOLDER_SERVICE_PROVIDER],
                imports: [CommonModule]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhY2Vob2xkZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9wbGFjZWhvbGRlci8iLCJzb3VyY2VzIjpbInBsYWNlaG9sZGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVO0FBQ1YsT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxVQUFVO0FBQ1YsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTNELDhFQUE4RTtBQUM5RSxNQUFNLFVBQVUsb0NBQW9DLENBQUMsYUFBaUM7SUFDckYsT0FBTyxhQUFhLElBQUksSUFBSSxrQkFBa0IsRUFBRSxDQUFDO0FBQ2xELENBQUM7QUFFRCxxR0FBcUc7QUFDckcsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUc7SUFDM0MsT0FBTyxFQUFFLGtCQUFrQjtJQUMzQixJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsSUFBSSxRQUFRLEVBQUUsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQzVELFVBQVUsRUFBRSxvQ0FBb0M7Q0FDaEQsQ0FBQztBQVFGLE1BQU0sT0FBTyxpQkFBaUI7OztZQU43QixRQUFRLFNBQUM7Z0JBQ1QsWUFBWSxFQUFFLENBQUUsV0FBVyxDQUFFO2dCQUM3QixPQUFPLEVBQUUsQ0FBRSxXQUFXLENBQUU7Z0JBQ3hCLFNBQVMsRUFBRSxDQUFFLDRCQUE0QixDQUFFO2dCQUMzQyxPQUFPLEVBQUUsQ0FBRSxZQUFZLENBQUU7YUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtb2R1bGVzXG5pbXBvcnQgeyBOZ01vZHVsZSwgU2tpcFNlbGYsIE9wdGlvbmFsIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcblxuLy8gaW1wb3J0c1xuaW1wb3J0IHsgUGxhY2Vob2xkZXIgfSBmcm9tIFwiLi9wbGFjZWhvbGRlci5jb21wb25lbnRcIjtcbmltcG9ydCB7IFBsYWNlaG9sZGVyU2VydmljZSB9IGZyb20gXCIuL3BsYWNlaG9sZGVyLnNlcnZpY2VcIjtcblxuLy8gZWl0aGVyIHByb3ZpZGVzIGEgbmV3IGluc3RhbmNlIG9mIFBsYWNlaG9sZGVyU2VydmljZSwgb3IgcmV0dXJucyB0aGUgcGFyZW50XG5leHBvcnQgZnVuY3Rpb24gUExBQ0VIT0xERVJfU0VSVklDRV9QUk9WSURFUl9GQUNUT1JZKHBhcmVudFNlcnZpY2U6IFBsYWNlaG9sZGVyU2VydmljZSkge1xuXHRyZXR1cm4gcGFyZW50U2VydmljZSB8fCBuZXcgUGxhY2Vob2xkZXJTZXJ2aWNlKCk7XG59XG5cbi8vIHBsYWNlaG9sZGVyIHNlcnZpY2UgKm11c3QqIGJlIGEgc2luZ2xldG9uIHRvIGVuc3VyZSB0aGUgcGxhY2Vob2xkZXIgdmlld1JlZiBpcyBhY2Nlc3NpYmxlIGdsb2JhbGx5XG5leHBvcnQgY29uc3QgUExBQ0VIT0xERVJfU0VSVklDRV9QUk9WSURFUiA9IHtcblx0cHJvdmlkZTogUGxhY2Vob2xkZXJTZXJ2aWNlLFxuXHRkZXBzOiBbW25ldyBPcHRpb25hbCgpLCBuZXcgU2tpcFNlbGYoKSwgUGxhY2Vob2xkZXJTZXJ2aWNlXV0sXG5cdHVzZUZhY3Rvcnk6IFBMQUNFSE9MREVSX1NFUlZJQ0VfUFJPVklERVJfRkFDVE9SWVxufTtcblxuQE5nTW9kdWxlKHtcblx0ZGVjbGFyYXRpb25zOiBbIFBsYWNlaG9sZGVyIF0sXG5cdGV4cG9ydHM6IFsgUGxhY2Vob2xkZXIgXSxcblx0cHJvdmlkZXJzOiBbIFBMQUNFSE9MREVSX1NFUlZJQ0VfUFJPVklERVIgXSxcblx0aW1wb3J0czogWyBDb21tb25Nb2R1bGUgXVxufSlcbmV4cG9ydCBjbGFzcyBQbGFjZWhvbGRlck1vZHVsZSB7IH1cbiJdfQ==