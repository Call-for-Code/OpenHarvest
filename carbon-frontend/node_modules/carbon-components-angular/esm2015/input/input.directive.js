/**
 *
 * carbon-angular v0.0.0 | input.directive.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Directive, HostBinding, Input } from "@angular/core";
/**
 * A directive for applying styling to an input element.
 *
 * Example:
 *
 * ```html
 * <input ibmText/>
 * ```
 *
 * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/text-input/code) for more detail.
 */
export class TextInput {
    constructor() {
        /**
         * `light` or `dark` input theme
         */
        this.theme = "dark";
        /**
         * Input field render size
         */
        this.size = "md";
        this.inputClass = true;
        this.invalid = false;
        this.skeleton = false;
    }
    get isSizeXl() {
        return this.size === "xl";
    }
    get isSizeSm() {
        return this.size === "sm";
    }
    get isLightTheme() {
        return this.theme === "light";
    }
}
TextInput.decorators = [
    { type: Directive, args: [{
                selector: "[ibmText]"
            },] }
];
TextInput.propDecorators = {
    theme: [{ type: Input }],
    size: [{ type: Input }],
    inputClass: [{ type: HostBinding, args: ["class.bx--text-input",] }],
    isSizeXl: [{ type: HostBinding, args: ["class.bx--text-input--xl",] }],
    isSizeSm: [{ type: HostBinding, args: ["class.bx--text-input--sm",] }],
    invalid: [{ type: HostBinding, args: ["class.bx--text-input--invalid",] }, { type: Input }],
    skeleton: [{ type: HostBinding, args: ["class.bx--skeleton",] }, { type: Input }],
    isLightTheme: [{ type: HostBinding, args: ["class.bx--text-input--light",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pbnB1dC8iLCJzb3VyY2VzIjpbImlucHV0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUQ7Ozs7Ozs7Ozs7R0FVRztBQUlILE1BQU0sT0FBTyxTQUFTO0lBSHRCO1FBSUM7O1dBRUc7UUFDTSxVQUFLLEdBQXFCLE1BQU0sQ0FBQztRQUUxQzs7V0FFRztRQUNNLFNBQUksR0FBdUIsSUFBSSxDQUFDO1FBRUosZUFBVSxHQUFHLElBQUksQ0FBQztRQU9BLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFDM0IsYUFBUSxHQUFHLEtBQUssQ0FBQztJQUk5RCxDQUFDO0lBWEEsSUFBNkMsUUFBUTtRQUNwRCxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO0lBQzNCLENBQUM7SUFDRCxJQUE2QyxRQUFRO1FBQ3BELE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQUdELElBQWdELFlBQVk7UUFDM0QsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLE9BQU8sQ0FBQztJQUMvQixDQUFDOzs7WUF6QkQsU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSxXQUFXO2FBQ3JCOzs7b0JBS0MsS0FBSzttQkFLTCxLQUFLO3lCQUVMLFdBQVcsU0FBQyxzQkFBc0I7dUJBQ2xDLFdBQVcsU0FBQywwQkFBMEI7dUJBR3RDLFdBQVcsU0FBQywwQkFBMEI7c0JBR3RDLFdBQVcsU0FBQywrQkFBK0IsY0FBRyxLQUFLO3VCQUNuRCxXQUFXLFNBQUMsb0JBQW9CLGNBQUcsS0FBSzsyQkFDeEMsV0FBVyxTQUFDLDZCQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuLyoqXG4gKiBBIGRpcmVjdGl2ZSBmb3IgYXBwbHlpbmcgc3R5bGluZyB0byBhbiBpbnB1dCBlbGVtZW50LlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgaHRtbFxuICogPGlucHV0IGlibVRleHQvPlxuICogYGBgXG4gKlxuICogU2VlIHRoZSBbdmFuaWxsYSBjYXJib24gZG9jc10oaHR0cDovL3d3dy5jYXJib25kZXNpZ25zeXN0ZW0uY29tL2NvbXBvbmVudHMvdGV4dC1pbnB1dC9jb2RlKSBmb3IgbW9yZSBkZXRhaWwuXG4gKi9cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogXCJbaWJtVGV4dF1cIlxufSlcbmV4cG9ydCBjbGFzcyBUZXh0SW5wdXQge1xuXHQvKipcblx0ICogYGxpZ2h0YCBvciBgZGFya2AgaW5wdXQgdGhlbWVcblx0ICovXG5cdEBJbnB1dCgpIHRoZW1lOiBcImxpZ2h0XCIgfCBcImRhcmtcIiA9IFwiZGFya1wiO1xuXG5cdC8qKlxuXHQgKiBJbnB1dCBmaWVsZCByZW5kZXIgc2l6ZVxuXHQgKi9cblx0QElucHV0KCkgc2l6ZTogXCJzbVwiIHwgXCJtZFwiIHwgXCJ4bFwiID0gXCJtZFwiO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10ZXh0LWlucHV0XCIpIGlucHV0Q2xhc3MgPSB0cnVlO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdGV4dC1pbnB1dC0teGxcIikgZ2V0IGlzU2l6ZVhsKCkge1xuXHRcdHJldHVybiB0aGlzLnNpemUgPT09IFwieGxcIjtcblx0fVxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdGV4dC1pbnB1dC0tc21cIikgZ2V0IGlzU2l6ZVNtKCkge1xuXHRcdHJldHVybiB0aGlzLnNpemUgPT09IFwic21cIjtcblx0fVxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdGV4dC1pbnB1dC0taW52YWxpZFwiKSBASW5wdXQoKSBpbnZhbGlkID0gZmFsc2U7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1za2VsZXRvblwiKSBASW5wdXQoKSBza2VsZXRvbiA9IGZhbHNlO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdGV4dC1pbnB1dC0tbGlnaHRcIikgZ2V0IGlzTGlnaHRUaGVtZSgpIHtcblx0XHRyZXR1cm4gdGhpcy50aGVtZSA9PT0gXCJsaWdodFwiO1xuXHR9XG59XG4iXX0=