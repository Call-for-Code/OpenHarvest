/**
 *
 * carbon-angular v0.0.0 | timepicker-select.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, HostBinding } from "@angular/core";
import { Select } from "carbon-components-angular/select";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
/**
 * [See demo](../../?path=/story/time-picker-select--simple)
 *
 * <example-url>../../iframe.html?id=time-picker-select--simple</example-url>
 */
export class TimePickerSelect extends Select {
    constructor() {
        super(...arguments);
        this.timeSelect = true;
        this.timePickerSelect = true;
        this.id = `timepicker-select-${TimePickerSelect.selectCount++}`;
        /**
         * Set to true for a loading select.
         */
        this.skeleton = false;
        /**
         * `light` or `dark` select theme
         */
        this.theme = "dark";
        this.timePickerSelectSkeleton = this.skeleton;
    }
    get timePickerSelectLight() {
        return this.theme === "light";
    }
}
TimePickerSelect.decorators = [
    { type: Component, args: [{
                selector: "ibm-timepicker-select",
                template: `
		<label *ngIf="!skeleton && label" [attr.for]="id" class="bx--label bx--visually-hidden">{{label}}</label>
		<div class="bx--select-input__wrapper">
			<select
				#select
				[attr.id]="id"
				[disabled]="disabled"
				(change)="onChange($event)"
				class="bx--select-input">
				<ng-content></ng-content>
			</select>
			<svg ibmIcon="chevron--down" size="16" *ngIf="!skeleton" class="bx--select__arrow"></svg>
		</div>
	`,
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: TimePickerSelect,
                        multi: true
                    }
                ]
            }] }
];
TimePickerSelect.propDecorators = {
    timeSelect: [{ type: HostBinding, args: ["class.bx--select",] }],
    timePickerSelect: [{ type: HostBinding, args: ["class.bx--time-picker__select",] }],
    id: [{ type: Input }],
    skeleton: [{ type: Input }],
    theme: [{ type: Input }],
    label: [{ type: Input }],
    timePickerSelectSkeleton: [{ type: HostBinding, args: ["class.bx--skeleton",] }],
    timePickerSelectLight: [{ type: HostBinding, args: ["class.bx--select--light",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXBpY2tlci1zZWxlY3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci90aW1lcGlja2VyLXNlbGVjdC8iLCJzb3VyY2VzIjpbInRpbWVwaWNrZXItc2VsZWN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFHTCxXQUFXLEVBRVgsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRW5EOzs7O0dBSUc7QUF5QkgsTUFBTSxPQUFPLGdCQUFpQixTQUFRLE1BQU07SUF4QjVDOztRQXlCa0MsZUFBVSxHQUFHLElBQUksQ0FBQztRQUNMLHFCQUFnQixHQUFHLElBQUksQ0FBQztRQUU3RCxPQUFFLEdBQUcscUJBQXFCLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUM7UUFFcEU7O1dBRUc7UUFDTSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRTFCOztXQUVHO1FBQ00sVUFBSyxHQUFxQixNQUFNLENBQUM7UUFJUCw2QkFBd0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBSzdFLENBQUM7SUFIQSxJQUE0QyxxQkFBcUI7UUFDaEUsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLE9BQU8sQ0FBQztJQUMvQixDQUFDOzs7WUE5Q0QsU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSx1QkFBdUI7Z0JBQ2pDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7OztFQWFUO2dCQUNELFNBQVMsRUFBRTtvQkFDVjt3QkFDQyxPQUFPLEVBQUUsaUJBQWlCO3dCQUMxQixXQUFXLEVBQUUsZ0JBQWdCO3dCQUM3QixLQUFLLEVBQUUsSUFBSTtxQkFDWDtpQkFDRDthQUNEOzs7eUJBRUMsV0FBVyxTQUFDLGtCQUFrQjsrQkFDOUIsV0FBVyxTQUFDLCtCQUErQjtpQkFFM0MsS0FBSzt1QkFLTCxLQUFLO29CQUtMLEtBQUs7b0JBRUwsS0FBSzt1Q0FFTCxXQUFXLFNBQUMsb0JBQW9CO29DQUVoQyxXQUFXLFNBQUMseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRJbnB1dCxcblx0T3V0cHV0LFxuXHRFdmVudEVtaXR0ZXIsXG5cdEhvc3RCaW5kaW5nLFxuXHRUZW1wbGF0ZVJlZlxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgU2VsZWN0IH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvc2VsZWN0XCI7XG5pbXBvcnQgeyBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuXG4vKipcbiAqIFtTZWUgZGVtb10oLi4vLi4vP3BhdGg9L3N0b3J5L3RpbWUtcGlja2VyLXNlbGVjdC0tc2ltcGxlKVxuICpcbiAqIDxleGFtcGxlLXVybD4uLi8uLi9pZnJhbWUuaHRtbD9pZD10aW1lLXBpY2tlci1zZWxlY3QtLXNpbXBsZTwvZXhhbXBsZS11cmw+XG4gKi9cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tdGltZXBpY2tlci1zZWxlY3RcIixcblx0dGVtcGxhdGU6IGBcblx0XHQ8bGFiZWwgKm5nSWY9XCIhc2tlbGV0b24gJiYgbGFiZWxcIiBbYXR0ci5mb3JdPVwiaWRcIiBjbGFzcz1cImJ4LS1sYWJlbCBieC0tdmlzdWFsbHktaGlkZGVuXCI+e3tsYWJlbH19PC9sYWJlbD5cblx0XHQ8ZGl2IGNsYXNzPVwiYngtLXNlbGVjdC1pbnB1dF9fd3JhcHBlclwiPlxuXHRcdFx0PHNlbGVjdFxuXHRcdFx0XHQjc2VsZWN0XG5cdFx0XHRcdFthdHRyLmlkXT1cImlkXCJcblx0XHRcdFx0W2Rpc2FibGVkXT1cImRpc2FibGVkXCJcblx0XHRcdFx0KGNoYW5nZSk9XCJvbkNoYW5nZSgkZXZlbnQpXCJcblx0XHRcdFx0Y2xhc3M9XCJieC0tc2VsZWN0LWlucHV0XCI+XG5cdFx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHRcdDwvc2VsZWN0PlxuXHRcdFx0PHN2ZyBpYm1JY29uPVwiY2hldnJvbi0tZG93blwiIHNpemU9XCIxNlwiICpuZ0lmPVwiIXNrZWxldG9uXCIgY2xhc3M9XCJieC0tc2VsZWN0X19hcnJvd1wiPjwvc3ZnPlxuXHRcdDwvZGl2PlxuXHRgLFxuXHRwcm92aWRlcnM6IFtcblx0XHR7XG5cdFx0XHRwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcblx0XHRcdHVzZUV4aXN0aW5nOiBUaW1lUGlja2VyU2VsZWN0LFxuXHRcdFx0bXVsdGk6IHRydWVcblx0XHR9XG5cdF1cbn0pXG5leHBvcnQgY2xhc3MgVGltZVBpY2tlclNlbGVjdCBleHRlbmRzIFNlbGVjdCB7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1zZWxlY3RcIikgdGltZVNlbGVjdCA9IHRydWU7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10aW1lLXBpY2tlcl9fc2VsZWN0XCIpIHRpbWVQaWNrZXJTZWxlY3QgPSB0cnVlO1xuXG5cdEBJbnB1dCgpIGlkID0gYHRpbWVwaWNrZXItc2VsZWN0LSR7VGltZVBpY2tlclNlbGVjdC5zZWxlY3RDb3VudCsrfWA7XG5cblx0LyoqXG5cdCAqIFNldCB0byB0cnVlIGZvciBhIGxvYWRpbmcgc2VsZWN0LlxuXHQgKi9cblx0QElucHV0KCkgc2tlbGV0b24gPSBmYWxzZTtcblxuXHQvKipcblx0ICogYGxpZ2h0YCBvciBgZGFya2Agc2VsZWN0IHRoZW1lXG5cdCAqL1xuXHRASW5wdXQoKSB0aGVtZTogXCJsaWdodFwiIHwgXCJkYXJrXCIgPSBcImRhcmtcIjtcblxuXHRASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1za2VsZXRvblwiKSB0aW1lUGlja2VyU2VsZWN0U2tlbGV0b24gPSB0aGlzLnNrZWxldG9uO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1zZWxlY3QtLWxpZ2h0XCIpIGdldCB0aW1lUGlja2VyU2VsZWN0TGlnaHQoKSB7XG5cdFx0cmV0dXJuIHRoaXMudGhlbWUgPT09IFwibGlnaHRcIjtcblx0fVxufVxuIl19