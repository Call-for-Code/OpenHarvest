/**
 *
 * carbon-angular v0.0.0 | tab-header.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, ViewChild, ElementRef, Output } from "@angular/core";
import { Tab } from "./tab.component";
import { EventEmitter } from "@angular/core";
export class TabHeader {
    constructor() {
        /**
         * Indicates whether the `Tab` is active/selected.
         * Determines whether it's `TabPanel` is rendered.
         */
        this.active = false;
        /**
         * Indicates whether or not the `Tab` item is disabled.
         */
        this.disabled = false;
        /**
         * Value 'selected' to be emitted after a new `Tab` is selected.
         */
        this.selected = new EventEmitter();
        this._cacheActive = false;
    }
    /**
     * Set to 'true' to have pane reference cached and not reloaded on tab switching.
     */
    set cacheActive(shouldCache) {
        this._cacheActive = shouldCache;
        // Updates the pane references associated with the tab header when cache active is changed.
        if (this.paneReference) {
            this.paneReference.cacheActive = this.cacheActive;
        }
    }
    set paneTabIndex(tabIndex) {
        if (this.paneReference) {
            this.paneReference.tabIndex = tabIndex;
        }
    }
    get cacheActive() {
        return this._cacheActive;
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.title = this.title ? this.title : this.tabItem.nativeElement.textContent;
        });
    }
    selectTab() {
        this.tabItem.nativeElement.focus();
        if (!this.disabled) {
            this.selected.emit();
            this.active = true;
            if (this.paneReference) {
                this.paneReference.active = true;
            }
        }
    }
}
TabHeader.decorators = [
    { type: Component, args: [{
                selector: "ibm-tab-header",
                template: `
		<li
			[ngClass]="{
				'bx--tabs__nav-item--selected bx--tabs--scrollable__nav-item--selected': active,
				'bx--tabs__nav-item--disabled bx--tabs--scrollable__nav-item--disabled': disabled
			}"
			class="bx--tabs--scrollable__nav-item"
			role="presentation"
			(click)="selectTab()">
			<button
				#tabItem
				[attr.aria-selected]="active"
				draggable="false"
				class="bx--tabs--scrollable__nav-link"
				href="javascript:void(0)"
				[title]="title"
				[attr.tabindex]="(active? 0 : -1)"
				role="tab">
				<ng-content></ng-content>
			</button>
		</li>
	`
            }] }
];
TabHeader.propDecorators = {
    active: [{ type: Input }],
    disabled: [{ type: Input }],
    paneReference: [{ type: Input }],
    title: [{ type: Input }],
    cacheActive: [{ type: Input }],
    paneTabIndex: [{ type: Input }],
    selected: [{ type: Output }],
    tabItem: [{ type: ViewChild, args: ["tabItem", { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWhlYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3RhYnMvIiwic291cmNlcyI6WyJ0YWItaGVhZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLE1BQU0sRUFFTixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQTRCN0MsTUFBTSxPQUFPLFNBQVM7SUExQnRCO1FBMkJDOzs7V0FHRztRQUNNLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDeEI7O1dBRUc7UUFDTSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBNEIxQjs7V0FFRztRQUVPLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBS25DLGlCQUFZLEdBQUcsS0FBSyxDQUFDO0lBa0JoQyxDQUFDO0lBakRBOztPQUVHO0lBQ0gsSUFBYSxXQUFXLENBQUMsV0FBb0I7UUFDNUMsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFFaEMsMkZBQTJGO1FBQzNGLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQ2xEO0lBQ0YsQ0FBQztJQUVELElBQWEsWUFBWSxDQUFDLFFBQXVCO1FBQ2hELElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7U0FDdkM7SUFDRixDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2QsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzFCLENBQUM7SUFhRCxlQUFlO1FBQ2QsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNmLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDO1FBQy9FLENBQUMsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVELFNBQVM7UUFDUixJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNuQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNuQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBQ25CLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtnQkFDdkIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO2FBQ2pDO1NBQ0Q7SUFDRixDQUFDOzs7WUF6RkQsU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBcUJUO2FBQ0Q7OztxQkFPQyxLQUFLO3VCQUlMLEtBQUs7NEJBSUwsS0FBSztvQkFDTCxLQUFLOzBCQUlMLEtBQUs7MkJBU0wsS0FBSzt1QkFjTCxNQUFNO3NCQUdOLFNBQVMsU0FBQyxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRJbnB1dCxcblx0Vmlld0NoaWxkLFxuXHRFbGVtZW50UmVmLFxuXHRPdXRwdXQsXG5cdEFmdGVyVmlld0luaXRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuaW1wb3J0IHsgVGFiIH0gZnJvbSBcIi4vdGFiLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImlibS10YWItaGVhZGVyXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PGxpXG5cdFx0XHRbbmdDbGFzc109XCJ7XG5cdFx0XHRcdCdieC0tdGFic19fbmF2LWl0ZW0tLXNlbGVjdGVkIGJ4LS10YWJzLS1zY3JvbGxhYmxlX19uYXYtaXRlbS0tc2VsZWN0ZWQnOiBhY3RpdmUsXG5cdFx0XHRcdCdieC0tdGFic19fbmF2LWl0ZW0tLWRpc2FibGVkIGJ4LS10YWJzLS1zY3JvbGxhYmxlX19uYXYtaXRlbS0tZGlzYWJsZWQnOiBkaXNhYmxlZFxuXHRcdFx0fVwiXG5cdFx0XHRjbGFzcz1cImJ4LS10YWJzLS1zY3JvbGxhYmxlX19uYXYtaXRlbVwiXG5cdFx0XHRyb2xlPVwicHJlc2VudGF0aW9uXCJcblx0XHRcdChjbGljayk9XCJzZWxlY3RUYWIoKVwiPlxuXHRcdFx0PGJ1dHRvblxuXHRcdFx0XHQjdGFiSXRlbVxuXHRcdFx0XHRbYXR0ci5hcmlhLXNlbGVjdGVkXT1cImFjdGl2ZVwiXG5cdFx0XHRcdGRyYWdnYWJsZT1cImZhbHNlXCJcblx0XHRcdFx0Y2xhc3M9XCJieC0tdGFicy0tc2Nyb2xsYWJsZV9fbmF2LWxpbmtcIlxuXHRcdFx0XHRocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCJcblx0XHRcdFx0W3RpdGxlXT1cInRpdGxlXCJcblx0XHRcdFx0W2F0dHIudGFiaW5kZXhdPVwiKGFjdGl2ZT8gMCA6IC0xKVwiXG5cdFx0XHRcdHJvbGU9XCJ0YWJcIj5cblx0XHRcdFx0PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuXHRcdFx0PC9idXR0b24+XG5cdFx0PC9saT5cblx0YFxufSlcblxuZXhwb3J0IGNsYXNzIFRhYkhlYWRlciBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuXHQvKipcblx0ICogSW5kaWNhdGVzIHdoZXRoZXIgdGhlIGBUYWJgIGlzIGFjdGl2ZS9zZWxlY3RlZC5cblx0ICogRGV0ZXJtaW5lcyB3aGV0aGVyIGl0J3MgYFRhYlBhbmVsYCBpcyByZW5kZXJlZC5cblx0ICovXG5cdEBJbnB1dCgpIGFjdGl2ZSA9IGZhbHNlO1xuXHQvKipcblx0ICogSW5kaWNhdGVzIHdoZXRoZXIgb3Igbm90IHRoZSBgVGFiYCBpdGVtIGlzIGRpc2FibGVkLlxuXHQgKi9cblx0QElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcblx0LyoqXG5cdCAqIFJlZmVyZW5jZSB0byB0aGUgY29ycmVzcG9uc2luZyB0YWIgcGFuZS5cblx0ICovXG5cdEBJbnB1dCgpIHBhbmVSZWZlcmVuY2U6IFRhYjtcblx0QElucHV0KCkgdGl0bGU7XG5cdC8qKlxuXHQgKiBTZXQgdG8gJ3RydWUnIHRvIGhhdmUgcGFuZSByZWZlcmVuY2UgY2FjaGVkIGFuZCBub3QgcmVsb2FkZWQgb24gdGFiIHN3aXRjaGluZy5cblx0ICovXG5cdEBJbnB1dCgpIHNldCBjYWNoZUFjdGl2ZShzaG91bGRDYWNoZTogYm9vbGVhbikge1xuXHRcdHRoaXMuX2NhY2hlQWN0aXZlID0gc2hvdWxkQ2FjaGU7XG5cblx0XHQvLyBVcGRhdGVzIHRoZSBwYW5lIHJlZmVyZW5jZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSB0YWIgaGVhZGVyIHdoZW4gY2FjaGUgYWN0aXZlIGlzIGNoYW5nZWQuXG5cdFx0aWYgKHRoaXMucGFuZVJlZmVyZW5jZSkge1xuXHRcdFx0dGhpcy5wYW5lUmVmZXJlbmNlLmNhY2hlQWN0aXZlID0gdGhpcy5jYWNoZUFjdGl2ZTtcblx0XHR9XG5cdH1cblxuXHRASW5wdXQoKSBzZXQgcGFuZVRhYkluZGV4KHRhYkluZGV4OiBudW1iZXIgfCBudWxsKSB7XG5cdFx0aWYgKHRoaXMucGFuZVJlZmVyZW5jZSkge1xuXHRcdFx0dGhpcy5wYW5lUmVmZXJlbmNlLnRhYkluZGV4ID0gdGFiSW5kZXg7XG5cdFx0fVxuXHR9XG5cblx0Z2V0IGNhY2hlQWN0aXZlKCkge1xuXHRcdHJldHVybiB0aGlzLl9jYWNoZUFjdGl2ZTtcblx0fVxuXG5cdC8qKlxuXHQgKiBWYWx1ZSAnc2VsZWN0ZWQnIHRvIGJlIGVtaXR0ZWQgYWZ0ZXIgYSBuZXcgYFRhYmAgaXMgc2VsZWN0ZWQuXG5cdCAqL1xuXG5cdEBPdXRwdXQoKSBzZWxlY3RlZCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG5cdC8vIEB0cy1pZ25vcmVcblx0QFZpZXdDaGlsZChcInRhYkl0ZW1cIiwgeyBzdGF0aWM6IHRydWUgfSkgdGFiSXRlbTogRWxlbWVudFJlZjtcblxuXHRwcm90ZWN0ZWQgX2NhY2hlQWN0aXZlID0gZmFsc2U7XG5cblx0bmdBZnRlclZpZXdJbml0KCkge1xuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0dGhpcy50aXRsZSA9IHRoaXMudGl0bGUgPyB0aGlzLnRpdGxlIDogdGhpcy50YWJJdGVtLm5hdGl2ZUVsZW1lbnQudGV4dENvbnRlbnQ7XG5cdFx0fSk7XG5cdH1cblxuXHRzZWxlY3RUYWIoKSB7XG5cdFx0dGhpcy50YWJJdGVtLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcblx0XHRpZiAoIXRoaXMuZGlzYWJsZWQpIHtcblx0XHRcdHRoaXMuc2VsZWN0ZWQuZW1pdCgpO1xuXHRcdFx0dGhpcy5hY3RpdmUgPSB0cnVlO1xuXHRcdFx0aWYgKHRoaXMucGFuZVJlZmVyZW5jZSkge1xuXHRcdFx0XHR0aGlzLnBhbmVSZWZlcmVuY2UuYWN0aXZlID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cbiJdfQ==