/**
 *
 * carbon-angular v0.0.0 | pagination-item.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, Output, EventEmitter } from "@angular/core";
/**
 * Used to present a single navigation item in a pagination list
 *
 *  * ```html
 * <ibm-pagination-nav-item [page]="5" [isActive]="false" (click)="handleClick(value)"></ibm-pagination-nav-item>
 * ```
 */
export class PaginationNavItem {
    constructor() {
        /**
         * The page for this component to dipslay
         */
        this.page = 0;
        /**
         * The state for this component to dipslay
         */
        this.isActive = false;
        /**
         * Emits click event
         */
        this.click = new EventEmitter();
    }
}
PaginationNavItem.decorators = [
    { type: Component, args: [{
                selector: "ibm-pagination-nav-item",
                template: `
		<li class="bx--pagination-nav__list-item">
			<button
				type="button"
				class="bx--pagination-nav__page"
				[ngClass]="{ 'bx--pagination-nav__page--active': isActive }"
				(click)="click.emit(page)">
				<span class="bx--pagination-nav__accessibility-label">
					{{page}}
				</span>
				{{page}}
			</button>
		</li>
	`
            }] }
];
/** @nocollapse */
PaginationNavItem.ctorParameters = () => [];
PaginationNavItem.propDecorators = {
    page: [{ type: Input }],
    isActive: [{ type: Input }],
    click: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvcGFnaW5hdGlvbi8iLCJzb3VyY2VzIjpbInBhZ2luYXRpb24tbmF2L3BhZ2luYXRpb24taXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDWixNQUFNLGVBQWUsQ0FBQztBQUV2Qjs7Ozs7O0dBTUc7QUFrQkgsTUFBTSxPQUFPLGlCQUFpQjtJQWdCN0I7UUFmQTs7V0FFRztRQUNNLFNBQUksR0FBRyxDQUFDLENBQUM7UUFFbEI7O1dBRUc7UUFDTSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRTFCOztXQUVHO1FBQ08sVUFBSyxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7SUFFOUIsQ0FBQzs7O1lBakNoQixTQUFTLFNBQUM7Z0JBQ1YsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7O0VBYVQ7YUFDRDs7Ozs7bUJBS0MsS0FBSzt1QkFLTCxLQUFLO29CQUtMLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdElucHV0LFxuXHRPdXRwdXQsXG5cdEV2ZW50RW1pdHRlclxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG4vKipcbiAqIFVzZWQgdG8gcHJlc2VudCBhIHNpbmdsZSBuYXZpZ2F0aW9uIGl0ZW0gaW4gYSBwYWdpbmF0aW9uIGxpc3RcbiAqXG4gKiAgKiBgYGBodG1sXG4gKiA8aWJtLXBhZ2luYXRpb24tbmF2LWl0ZW0gW3BhZ2VdPVwiNVwiIFtpc0FjdGl2ZV09XCJmYWxzZVwiIChjbGljayk9XCJoYW5kbGVDbGljayh2YWx1ZSlcIj48L2libS1wYWdpbmF0aW9uLW5hdi1pdGVtPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tcGFnaW5hdGlvbi1uYXYtaXRlbVwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxsaSBjbGFzcz1cImJ4LS1wYWdpbmF0aW9uLW5hdl9fbGlzdC1pdGVtXCI+XG5cdFx0XHQ8YnV0dG9uXG5cdFx0XHRcdHR5cGU9XCJidXR0b25cIlxuXHRcdFx0XHRjbGFzcz1cImJ4LS1wYWdpbmF0aW9uLW5hdl9fcGFnZVwiXG5cdFx0XHRcdFtuZ0NsYXNzXT1cInsgJ2J4LS1wYWdpbmF0aW9uLW5hdl9fcGFnZS0tYWN0aXZlJzogaXNBY3RpdmUgfVwiXG5cdFx0XHRcdChjbGljayk9XCJjbGljay5lbWl0KHBhZ2UpXCI+XG5cdFx0XHRcdDxzcGFuIGNsYXNzPVwiYngtLXBhZ2luYXRpb24tbmF2X19hY2Nlc3NpYmlsaXR5LWxhYmVsXCI+XG5cdFx0XHRcdFx0e3twYWdlfX1cblx0XHRcdFx0PC9zcGFuPlxuXHRcdFx0XHR7e3BhZ2V9fVxuXHRcdFx0PC9idXR0b24+XG5cdFx0PC9saT5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBQYWdpbmF0aW9uTmF2SXRlbSB7XG5cdC8qKlxuXHQgKiBUaGUgcGFnZSBmb3IgdGhpcyBjb21wb25lbnQgdG8gZGlwc2xheVxuXHQgKi9cblx0QElucHV0KCkgcGFnZSA9IDA7XG5cblx0LyoqXG5cdCAqIFRoZSBzdGF0ZSBmb3IgdGhpcyBjb21wb25lbnQgdG8gZGlwc2xheVxuXHQgKi9cblx0QElucHV0KCkgaXNBY3RpdmUgPSBmYWxzZTtcblxuXHQvKipcblx0ICogRW1pdHMgY2xpY2sgZXZlbnRcblx0ICovXG5cdEBPdXRwdXQoKSBjbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xuXG5cdGNvbnN0cnVjdG9yKCkge31cbn1cbiJdfQ==