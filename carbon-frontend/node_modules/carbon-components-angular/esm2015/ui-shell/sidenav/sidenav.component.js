/**
 *
 * carbon-angular v0.0.0 | sidenav.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, HostBinding, Input, ViewEncapsulation } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
/**
 * `Sidenav` is a fixed left navigation that may contain `SideNavItem`s or `SideNavMenu`s
 *
 * [See demo](../../?path=/story/ui-shell--side-navigation)
 *
 * <example-url>../../iframe.html?id=ui-shell--side-navigation</example-url>
 */
export class SideNav {
    constructor(i18n) {
        this.i18n = i18n;
        this.role = "complementary";
        this.hostClass = true;
        this.ariaLabel = "Side navigation";
        /**
         * Controls the expanded (`true`) or collapsed (`false`) state when on a small screen.
         */
        this.expanded = true;
        /**
         * Controls the hidden (`true`) or visible (`false`) state
         */
        this.hidden = false;
        this.rail = false;
        this.ux = true;
        this.allowExpansion = false;
    }
    toggle() {
        this.expanded = !this.expanded;
    }
}
SideNav.decorators = [
    { type: Component, args: [{
                selector: "ibm-sidenav",
                template: `
		<nav class="bx--side-nav__navigation" role="navigation" [attr.aria-label]="ariaLabel">
			<ng-content select="ibm-sidenav-header"></ng-content>
			<ul class="bx--side-nav__items">
				<div
					class="bx--side-nav__header-navigation bx--side-nav__header-divider">
					<ng-container *ngFor="let navigationItem of navigationItems">
						<ibm-sidenav-item
							*ngIf="navigationItem.type === 'item'"
							[href]="navigationItem.href"
							[route]="navigationItem.route"
							[routeExtras]="navigationItem.routeExtras">
							{{ navigationItem.content }}
						</ibm-sidenav-item>
						<ibm-sidenav-menu
							*ngIf="navigationItem.type === 'menu'"
							[title]="navigationItem.title"
							[menuItems]="navigationItem.menuItems">
						</ibm-sidenav-menu>
					</ng-container>
				</div>
				<ng-content></ng-content>
			</ul>
			<footer class="bx--side-nav__footer">
				<button
					*ngIf="allowExpansion"
					class="bx--side-nav__toggle"
					type="button"
					[title]="(expanded ? i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_CLOSE') : i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_OPEN')) | async"
					(click)="toggle()">
					<div class="bx--side-nav__icon">
						<svg
							*ngIf="expanded"
							focusable="false"
							preserveAspectRatio="xMidYMid meet"
							style="will-change: transform;"
							xmlns="http://www.w3.org/2000/svg"
							width="20"
							height="20"
							viewBox="0 0 32 32"
							aria-hidden="true">
							<path d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4l6.6 6.6L8 22.6 9.4 24l6.6-6.6 6.6 6.6 1.4-1.4-6.6-6.6L24 9.4z"></path>
						</svg>
						<svg
							*ngIf="!expanded"
							focusable="false"
							preserveAspectRatio="xMidYMid meet"
							style="will-change: transform;"
							xmlns="http://www.w3.org/2000/svg"
							width="20"
							height="20"
							viewBox="0 0 32 32"
							aria-hidden="true">
							<path d="M22 16L12 26l-1.4-1.4 8.6-8.6-8.6-8.6L12 6z"></path>
						</svg>
					</div>
					<span class="bx--assistive-text">
						{{(expanded ? i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_CLOSE') : i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_OPEN')) | async}}
					</span>
				</button>
			</footer>
		</nav>
	`,
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
SideNav.ctorParameters = () => [
    { type: I18n }
];
SideNav.propDecorators = {
    role: [{ type: HostBinding, args: ["attr.role",] }],
    hostClass: [{ type: HostBinding, args: ["class.bx--side-nav",] }],
    ariaLabel: [{ type: HostBinding, args: ["attr.aria-label",] }, { type: Input }],
    expanded: [{ type: HostBinding, args: ["class.bx--side-nav--expanded",] }, { type: Input }],
    hidden: [{ type: HostBinding, args: ["class.bx--side-nav--hidden",] }, { type: Input }],
    rail: [{ type: HostBinding, args: ["class.bx--side-nav--rail",] }, { type: Input }],
    ux: [{ type: HostBinding, args: ["class.bx--side-nav--ux",] }],
    allowExpansion: [{ type: Input }],
    navigationItems: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZW5hdi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3VpLXNoZWxsLyIsInNvdXJjZXMiOlsic2lkZW5hdi9zaWRlbmF2LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULFdBQVcsRUFDWCxLQUFLLEVBQ0wsaUJBQWlCLEVBQ2pCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUd0RDs7Ozs7O0dBTUc7QUFvRUgsTUFBTSxPQUFPLE9BQU87SUF1Qm5CLFlBQW1CLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBdEJILFNBQUksR0FBRyxlQUFlLENBQUM7UUFDZCxjQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ1gsY0FBUyxHQUFHLGlCQUFpQixDQUFDO1FBQ3ZFOztXQUVHO1FBQ21ELGFBQVEsR0FBRyxJQUFJLENBQUM7UUFDdEU7O1dBRUc7UUFDaUQsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNqQixTQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLE9BQUUsR0FBRyxJQUFJLENBQUM7UUFDeEMsbUJBQWMsR0FBRyxLQUFLLENBQUM7SUFTQyxDQUFDO0lBRWxDLE1BQU07UUFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUNoQyxDQUFDOzs7WUE5RkQsU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSxhQUFhO2dCQUN2QixRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBOERUO2dCQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2FBQ3JDOzs7O1lBNUVRLElBQUk7OzttQkE4RVgsV0FBVyxTQUFDLFdBQVc7d0JBQ3ZCLFdBQVcsU0FBQyxvQkFBb0I7d0JBQ2hDLFdBQVcsU0FBQyxpQkFBaUIsY0FBRyxLQUFLO3VCQUlyQyxXQUFXLFNBQUMsOEJBQThCLGNBQUcsS0FBSztxQkFJbEQsV0FBVyxTQUFDLDRCQUE0QixjQUFHLEtBQUs7bUJBQ2hELFdBQVcsU0FBQywwQkFBMEIsY0FBRyxLQUFLO2lCQUM5QyxXQUFXLFNBQUMsd0JBQXdCOzZCQUNwQyxLQUFLOzhCQU9MLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdEhvc3RCaW5kaW5nLFxuXHRJbnB1dCxcblx0Vmlld0VuY2Fwc3VsYXRpb25cbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEkxOG4gfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pMThuXCI7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uSXRlbSB9IGZyb20gXCIuLi9oZWFkZXIvaGVhZGVyLW5hdmlnYXRpb24taXRlbXMuaW50ZXJmYWNlXCI7XG5cbi8qKlxuICogYFNpZGVuYXZgIGlzIGEgZml4ZWQgbGVmdCBuYXZpZ2F0aW9uIHRoYXQgbWF5IGNvbnRhaW4gYFNpZGVOYXZJdGVtYHMgb3IgYFNpZGVOYXZNZW51YHNcbiAqXG4gKiBbU2VlIGRlbW9dKC4uLy4uLz9wYXRoPS9zdG9yeS91aS1zaGVsbC0tc2lkZS1uYXZpZ2F0aW9uKVxuICpcbiAqIDxleGFtcGxlLXVybD4uLi8uLi9pZnJhbWUuaHRtbD9pZD11aS1zaGVsbC0tc2lkZS1uYXZpZ2F0aW9uPC9leGFtcGxlLXVybD5cbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImlibS1zaWRlbmF2XCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PG5hdiBjbGFzcz1cImJ4LS1zaWRlLW5hdl9fbmF2aWdhdGlvblwiIHJvbGU9XCJuYXZpZ2F0aW9uXCIgW2F0dHIuYXJpYS1sYWJlbF09XCJhcmlhTGFiZWxcIj5cblx0XHRcdDxuZy1jb250ZW50IHNlbGVjdD1cImlibS1zaWRlbmF2LWhlYWRlclwiPjwvbmctY29udGVudD5cblx0XHRcdDx1bCBjbGFzcz1cImJ4LS1zaWRlLW5hdl9faXRlbXNcIj5cblx0XHRcdFx0PGRpdlxuXHRcdFx0XHRcdGNsYXNzPVwiYngtLXNpZGUtbmF2X19oZWFkZXItbmF2aWdhdGlvbiBieC0tc2lkZS1uYXZfX2hlYWRlci1kaXZpZGVyXCI+XG5cdFx0XHRcdFx0PG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgbmF2aWdhdGlvbkl0ZW0gb2YgbmF2aWdhdGlvbkl0ZW1zXCI+XG5cdFx0XHRcdFx0XHQ8aWJtLXNpZGVuYXYtaXRlbVxuXHRcdFx0XHRcdFx0XHQqbmdJZj1cIm5hdmlnYXRpb25JdGVtLnR5cGUgPT09ICdpdGVtJ1wiXG5cdFx0XHRcdFx0XHRcdFtocmVmXT1cIm5hdmlnYXRpb25JdGVtLmhyZWZcIlxuXHRcdFx0XHRcdFx0XHRbcm91dGVdPVwibmF2aWdhdGlvbkl0ZW0ucm91dGVcIlxuXHRcdFx0XHRcdFx0XHRbcm91dGVFeHRyYXNdPVwibmF2aWdhdGlvbkl0ZW0ucm91dGVFeHRyYXNcIj5cblx0XHRcdFx0XHRcdFx0e3sgbmF2aWdhdGlvbkl0ZW0uY29udGVudCB9fVxuXHRcdFx0XHRcdFx0PC9pYm0tc2lkZW5hdi1pdGVtPlxuXHRcdFx0XHRcdFx0PGlibS1zaWRlbmF2LW1lbnVcblx0XHRcdFx0XHRcdFx0Km5nSWY9XCJuYXZpZ2F0aW9uSXRlbS50eXBlID09PSAnbWVudSdcIlxuXHRcdFx0XHRcdFx0XHRbdGl0bGVdPVwibmF2aWdhdGlvbkl0ZW0udGl0bGVcIlxuXHRcdFx0XHRcdFx0XHRbbWVudUl0ZW1zXT1cIm5hdmlnYXRpb25JdGVtLm1lbnVJdGVtc1wiPlxuXHRcdFx0XHRcdFx0PC9pYm0tc2lkZW5hdi1tZW51PlxuXHRcdFx0XHRcdDwvbmctY29udGFpbmVyPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuXHRcdFx0PC91bD5cblx0XHRcdDxmb290ZXIgY2xhc3M9XCJieC0tc2lkZS1uYXZfX2Zvb3RlclwiPlxuXHRcdFx0XHQ8YnV0dG9uXG5cdFx0XHRcdFx0Km5nSWY9XCJhbGxvd0V4cGFuc2lvblwiXG5cdFx0XHRcdFx0Y2xhc3M9XCJieC0tc2lkZS1uYXZfX3RvZ2dsZVwiXG5cdFx0XHRcdFx0dHlwZT1cImJ1dHRvblwiXG5cdFx0XHRcdFx0W3RpdGxlXT1cIihleHBhbmRlZCA/IGkxOG4uZ2V0KCdVSV9TSEVMTC5TSURFX05BVi5UT0dHTEVfQ0xPU0UnKSA6IGkxOG4uZ2V0KCdVSV9TSEVMTC5TSURFX05BVi5UT0dHTEVfT1BFTicpKSB8IGFzeW5jXCJcblx0XHRcdFx0XHQoY2xpY2spPVwidG9nZ2xlKClcIj5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYngtLXNpZGUtbmF2X19pY29uXCI+XG5cdFx0XHRcdFx0XHQ8c3ZnXG5cdFx0XHRcdFx0XHRcdCpuZ0lmPVwiZXhwYW5kZWRcIlxuXHRcdFx0XHRcdFx0XHRmb2N1c2FibGU9XCJmYWxzZVwiXG5cdFx0XHRcdFx0XHRcdHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCJcblx0XHRcdFx0XHRcdFx0c3R5bGU9XCJ3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1wiXG5cdFx0XHRcdFx0XHRcdHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuXHRcdFx0XHRcdFx0XHR3aWR0aD1cIjIwXCJcblx0XHRcdFx0XHRcdFx0aGVpZ2h0PVwiMjBcIlxuXHRcdFx0XHRcdFx0XHR2aWV3Qm94PVwiMCAwIDMyIDMyXCJcblx0XHRcdFx0XHRcdFx0YXJpYS1oaWRkZW49XCJ0cnVlXCI+XG5cdFx0XHRcdFx0XHRcdDxwYXRoIGQ9XCJNMjQgOS40TDIyLjYgOCAxNiAxNC42IDkuNCA4IDggOS40bDYuNiA2LjZMOCAyMi42IDkuNCAyNGw2LjYtNi42IDYuNiA2LjYgMS40LTEuNC02LjYtNi42TDI0IDkuNHpcIj48L3BhdGg+XG5cdFx0XHRcdFx0XHQ8L3N2Zz5cblx0XHRcdFx0XHRcdDxzdmdcblx0XHRcdFx0XHRcdFx0Km5nSWY9XCIhZXhwYW5kZWRcIlxuXHRcdFx0XHRcdFx0XHRmb2N1c2FibGU9XCJmYWxzZVwiXG5cdFx0XHRcdFx0XHRcdHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCJcblx0XHRcdFx0XHRcdFx0c3R5bGU9XCJ3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1wiXG5cdFx0XHRcdFx0XHRcdHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuXHRcdFx0XHRcdFx0XHR3aWR0aD1cIjIwXCJcblx0XHRcdFx0XHRcdFx0aGVpZ2h0PVwiMjBcIlxuXHRcdFx0XHRcdFx0XHR2aWV3Qm94PVwiMCAwIDMyIDMyXCJcblx0XHRcdFx0XHRcdFx0YXJpYS1oaWRkZW49XCJ0cnVlXCI+XG5cdFx0XHRcdFx0XHRcdDxwYXRoIGQ9XCJNMjIgMTZMMTIgMjZsLTEuNC0xLjQgOC42LTguNi04LjYtOC42TDEyIDZ6XCI+PC9wYXRoPlxuXHRcdFx0XHRcdFx0PC9zdmc+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PHNwYW4gY2xhc3M9XCJieC0tYXNzaXN0aXZlLXRleHRcIj5cblx0XHRcdFx0XHRcdHt7KGV4cGFuZGVkID8gaTE4bi5nZXQoJ1VJX1NIRUxMLlNJREVfTkFWLlRPR0dMRV9DTE9TRScpIDogaTE4bi5nZXQoJ1VJX1NIRUxMLlNJREVfTkFWLlRPR0dMRV9PUEVOJykpIHwgYXN5bmN9fVxuXHRcdFx0XHRcdDwvc3Bhbj5cblx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHQ8L2Zvb3Rlcj5cblx0XHQ8L25hdj5cblx0YCxcblx0ZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBTaWRlTmF2IHtcblx0QEhvc3RCaW5kaW5nKFwiYXR0ci5yb2xlXCIpIHJvbGUgPSBcImNvbXBsZW1lbnRhcnlcIjtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXNpZGUtbmF2XCIpIGhvc3RDbGFzcyA9IHRydWU7XG5cdEBIb3N0QmluZGluZyhcImF0dHIuYXJpYS1sYWJlbFwiKSBASW5wdXQoKSBhcmlhTGFiZWwgPSBcIlNpZGUgbmF2aWdhdGlvblwiO1xuXHQvKipcblx0ICogQ29udHJvbHMgdGhlIGV4cGFuZGVkIChgdHJ1ZWApIG9yIGNvbGxhcHNlZCAoYGZhbHNlYCkgc3RhdGUgd2hlbiBvbiBhIHNtYWxsIHNjcmVlbi5cblx0ICovXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1zaWRlLW5hdi0tZXhwYW5kZWRcIikgQElucHV0KCkgZXhwYW5kZWQgPSB0cnVlO1xuXHQvKipcblx0ICogQ29udHJvbHMgdGhlIGhpZGRlbiAoYHRydWVgKSBvciB2aXNpYmxlIChgZmFsc2VgKSBzdGF0ZVxuXHQgKi9cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXNpZGUtbmF2LS1oaWRkZW5cIikgQElucHV0KCkgaGlkZGVuID0gZmFsc2U7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1zaWRlLW5hdi0tcmFpbFwiKSBASW5wdXQoKSByYWlsID0gZmFsc2U7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1zaWRlLW5hdi0tdXhcIikgdXggPSB0cnVlO1xuXHRASW5wdXQoKSBhbGxvd0V4cGFuc2lvbiA9IGZhbHNlO1xuXG5cdC8qKlxuXHQgKiBOYXZpZ2F0aW9uSXRlbXMgZnJvbSB0aGUgaGVhZGVyIG5hdmlnYXRpb24gY29tcG9uZW50IHdoaWNoIGFyZSBkaXNwbGF5ZWQgb24gdGhlIHNpZGVuYXYgd2hlbiB0aGUgd2luZG93XG5cdCAqIGlubmVyV2lkdGggaXMgc21hbGwgZW5vdWdoLiBTaWRlbmF2IGl0ZW1zIGFuZCBtZW51cyBhcmUgY3JlYXRlZCB1c2luZyB0aGUgbW9kZWwgdXNlZCB0byBjcmVhdGUgaGVhZGVyXG5cdCAqIG5hdmlnYXRpb24gaXRlbXMuXG5cdCAqL1xuXHRASW5wdXQoKSBuYXZpZ2F0aW9uSXRlbXM6IE5hdmlnYXRpb25JdGVtW107XG5cblx0Y29uc3RydWN0b3IocHVibGljIGkxOG46IEkxOG4pIHsgfVxuXG5cdHRvZ2dsZSgpIHtcblx0XHR0aGlzLmV4cGFuZGVkID0gIXRoaXMuZXhwYW5kZWQ7XG5cdH1cbn1cbiJdfQ==