/**
 *
 * carbon-angular v0.0.0 | header-action.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, Output, EventEmitter } from "@angular/core";
/**
 * Contained by `HeaderGlobal`. Generally used to trigger `Panel`s
 */
export class HeaderAction {
    constructor() {
        /**
         * Title. Populates the aria-label as well as the browser `title` tooltip
         */
        this.title = "";
        /**
         * Toggles the active state. May be used to toggle a `Panel`s active state.
         */
        this.active = false;
        /**
         * "Change" emitter to allow double binding to the `active` Input.
         */
        this.activeChange = new EventEmitter();
        /**
         * Emits when the action has been clicked.
         */
        this.selected = new EventEmitter();
    }
    onClick() {
        this.active = !this.active;
        this.selected.emit(this.active);
        this.activeChange.emit(this.active);
    }
}
HeaderAction.decorators = [
    { type: Component, args: [{
                selector: "ibm-header-action",
                template: `
		<button
			class="bx--header__action"
			[ngClass]="{
				'bx--header__action--active': active
			}"
			[title]="title"
			[attr.aria-label]="ariaLabel"
			(click)="onClick()">
			<ng-content></ng-content>
		</button>
	`
            }] }
];
HeaderAction.propDecorators = {
    title: [{ type: Input }],
    ariaLabel: [{ type: Input }],
    active: [{ type: Input }],
    activeChange: [{ type: Output }],
    selected: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLWFjdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3VpLXNoZWxsLyIsInNvdXJjZXMiOlsiaGVhZGVyL2hlYWRlci1hY3Rpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsS0FBSyxFQUNMLE1BQU0sRUFDTixZQUFZLEVBQ1osTUFBTSxlQUFlLENBQUM7QUFFdkI7O0dBRUc7QUFnQkgsTUFBTSxPQUFPLFlBQVk7SUFmekI7UUFnQkM7O1dBRUc7UUFDTSxVQUFLLEdBQUcsRUFBRSxDQUFDO1FBS3BCOztXQUVHO1FBQ00sV0FBTSxHQUFHLEtBQUssQ0FBQztRQUN4Qjs7V0FFRztRQUNPLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztRQUNyRDs7V0FFRztRQUNPLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO0lBT2xELENBQUM7SUFMQSxPQUFPO1FBQ04sSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7WUF6Q0QsU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7RUFXVDthQUNEOzs7b0JBS0MsS0FBSzt3QkFJTCxLQUFLO3FCQUlMLEtBQUs7MkJBSUwsTUFBTTt1QkFJTixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRJbnB1dCxcblx0T3V0cHV0LFxuXHRFdmVudEVtaXR0ZXJcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuLyoqXG4gKiBDb250YWluZWQgYnkgYEhlYWRlckdsb2JhbGAuIEdlbmVyYWxseSB1c2VkIHRvIHRyaWdnZXIgYFBhbmVsYHNcbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImlibS1oZWFkZXItYWN0aW9uXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PGJ1dHRvblxuXHRcdFx0Y2xhc3M9XCJieC0taGVhZGVyX19hY3Rpb25cIlxuXHRcdFx0W25nQ2xhc3NdPVwie1xuXHRcdFx0XHQnYngtLWhlYWRlcl9fYWN0aW9uLS1hY3RpdmUnOiBhY3RpdmVcblx0XHRcdH1cIlxuXHRcdFx0W3RpdGxlXT1cInRpdGxlXCJcblx0XHRcdFthdHRyLmFyaWEtbGFiZWxdPVwiYXJpYUxhYmVsXCJcblx0XHRcdChjbGljayk9XCJvbkNsaWNrKClcIj5cblx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHQ8L2J1dHRvbj5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBIZWFkZXJBY3Rpb24ge1xuXHQvKipcblx0ICogVGl0bGUuIFBvcHVsYXRlcyB0aGUgYXJpYS1sYWJlbCBhcyB3ZWxsIGFzIHRoZSBicm93c2VyIGB0aXRsZWAgdG9vbHRpcFxuXHQgKi9cblx0QElucHV0KCkgdGl0bGUgPSBcIlwiO1xuXHQvKipcblx0ICogU2V0cyB0aGUgYXJpYSBsYWJlbCBvbiB0aGUgbmF2IGVsZW1lbnQuXG5cdCAqL1xuXHRASW5wdXQoKSBhcmlhTGFiZWw6IHN0cmluZztcblx0LyoqXG5cdCAqIFRvZ2dsZXMgdGhlIGFjdGl2ZSBzdGF0ZS4gTWF5IGJlIHVzZWQgdG8gdG9nZ2xlIGEgYFBhbmVsYHMgYWN0aXZlIHN0YXRlLlxuXHQgKi9cblx0QElucHV0KCkgYWN0aXZlID0gZmFsc2U7XG5cdC8qKlxuXHQgKiBcIkNoYW5nZVwiIGVtaXR0ZXIgdG8gYWxsb3cgZG91YmxlIGJpbmRpbmcgdG8gdGhlIGBhY3RpdmVgIElucHV0LlxuXHQgKi9cblx0QE91dHB1dCgpIGFjdGl2ZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblx0LyoqXG5cdCAqIEVtaXRzIHdoZW4gdGhlIGFjdGlvbiBoYXMgYmVlbiBjbGlja2VkLlxuXHQgKi9cblx0QE91dHB1dCgpIHNlbGVjdGVkID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG5cdG9uQ2xpY2soKSB7XG5cdFx0dGhpcy5hY3RpdmUgPSAhdGhpcy5hY3RpdmU7XG5cdFx0dGhpcy5zZWxlY3RlZC5lbWl0KHRoaXMuYWN0aXZlKTtcblx0XHR0aGlzLmFjdGl2ZUNoYW5nZS5lbWl0KHRoaXMuYWN0aXZlKTtcblx0fVxufVxuIl19