/**
 *
 * carbon-angular v0.0.0 | header-navigation.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, HostBinding, Input } from "@angular/core";
/**
 * Container for header navigation items
 */
export class HeaderNavigation {
    constructor() {
        this.height = 100;
    }
}
HeaderNavigation.decorators = [
    { type: Component, args: [{
                selector: "ibm-header-navigation",
                template: `
		<nav class="bx--header__nav" [attr.aria-label]="ariaLabel">
			<ul class="bx--header__menu-bar" role="menubar">
				<ng-content></ng-content>
				<ng-container *ngFor="let navigationItem of navigationItems">
					<ibm-header-item
						*ngIf="navigationItem.type === 'item'"
						[href]="navigationItem.href"
						[route]="navigationItem.route"
						[routeExtras]="navigationItem.routeExtras">
						{{ navigationItem.content }}
					</ibm-header-item>
					<ibm-header-menu
						*ngIf="navigationItem.type === 'menu'"
						[href]="navigationItem.href"
						[title]="navigationItem.title"
						[trigger]="navigationItem.trigger ? navigationItem.trigger : 'click'"
						[headerItems]="navigationItem.menuItems">
					</ibm-header-menu>
				</ng-container>
			</ul>
		</nav>
	`
            }] }
];
HeaderNavigation.propDecorators = {
    height: [{ type: HostBinding, args: ["style.height.%",] }],
    ariaLabel: [{ type: Input }],
    navigationItems: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLW5hdmlnYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci91aS1zaGVsbC8iLCJzb3VyY2VzIjpbImhlYWRlci9oZWFkZXItbmF2aWdhdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sZUFBZSxDQUFDO0FBRXZCOztHQUVHO0FBMkJILE1BQU0sT0FBTyxnQkFBZ0I7SUExQjdCO1FBMkJnQyxXQUFNLEdBQUcsR0FBRyxDQUFDO0lBVTdDLENBQUM7OztZQXJDQSxTQUFTLFNBQUM7Z0JBQ1YsUUFBUSxFQUFFLHVCQUF1QjtnQkFDakMsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBc0JUO2FBQ0Q7OztxQkFFQyxXQUFXLFNBQUMsZ0JBQWdCO3dCQUU1QixLQUFLOzhCQU9MLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdEhvc3RCaW5kaW5nLFxuXHRJbnB1dFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkl0ZW0gfSBmcm9tIFwiLi9oZWFkZXItbmF2aWdhdGlvbi1pdGVtcy5pbnRlcmZhY2VcIjtcbi8qKlxuICogQ29udGFpbmVyIGZvciBoZWFkZXIgbmF2aWdhdGlvbiBpdGVtc1xuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiaWJtLWhlYWRlci1uYXZpZ2F0aW9uXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PG5hdiBjbGFzcz1cImJ4LS1oZWFkZXJfX25hdlwiIFthdHRyLmFyaWEtbGFiZWxdPVwiYXJpYUxhYmVsXCI+XG5cdFx0XHQ8dWwgY2xhc3M9XCJieC0taGVhZGVyX19tZW51LWJhclwiIHJvbGU9XCJtZW51YmFyXCI+XG5cdFx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHRcdFx0PG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgbmF2aWdhdGlvbkl0ZW0gb2YgbmF2aWdhdGlvbkl0ZW1zXCI+XG5cdFx0XHRcdFx0PGlibS1oZWFkZXItaXRlbVxuXHRcdFx0XHRcdFx0Km5nSWY9XCJuYXZpZ2F0aW9uSXRlbS50eXBlID09PSAnaXRlbSdcIlxuXHRcdFx0XHRcdFx0W2hyZWZdPVwibmF2aWdhdGlvbkl0ZW0uaHJlZlwiXG5cdFx0XHRcdFx0XHRbcm91dGVdPVwibmF2aWdhdGlvbkl0ZW0ucm91dGVcIlxuXHRcdFx0XHRcdFx0W3JvdXRlRXh0cmFzXT1cIm5hdmlnYXRpb25JdGVtLnJvdXRlRXh0cmFzXCI+XG5cdFx0XHRcdFx0XHR7eyBuYXZpZ2F0aW9uSXRlbS5jb250ZW50IH19XG5cdFx0XHRcdFx0PC9pYm0taGVhZGVyLWl0ZW0+XG5cdFx0XHRcdFx0PGlibS1oZWFkZXItbWVudVxuXHRcdFx0XHRcdFx0Km5nSWY9XCJuYXZpZ2F0aW9uSXRlbS50eXBlID09PSAnbWVudSdcIlxuXHRcdFx0XHRcdFx0W2hyZWZdPVwibmF2aWdhdGlvbkl0ZW0uaHJlZlwiXG5cdFx0XHRcdFx0XHRbdGl0bGVdPVwibmF2aWdhdGlvbkl0ZW0udGl0bGVcIlxuXHRcdFx0XHRcdFx0W3RyaWdnZXJdPVwibmF2aWdhdGlvbkl0ZW0udHJpZ2dlciA/IG5hdmlnYXRpb25JdGVtLnRyaWdnZXIgOiAnY2xpY2snXCJcblx0XHRcdFx0XHRcdFtoZWFkZXJJdGVtc109XCJuYXZpZ2F0aW9uSXRlbS5tZW51SXRlbXNcIj5cblx0XHRcdFx0XHQ8L2libS1oZWFkZXItbWVudT5cblx0XHRcdFx0PC9uZy1jb250YWluZXI+XG5cdFx0XHQ8L3VsPlxuXHRcdDwvbmF2PlxuXHRgXG59KVxuZXhwb3J0IGNsYXNzIEhlYWRlck5hdmlnYXRpb24ge1xuXHRASG9zdEJpbmRpbmcoXCJzdHlsZS5oZWlnaHQuJVwiKSBoZWlnaHQgPSAxMDA7XG5cblx0QElucHV0KCkgYXJpYUxhYmVsOiBzdHJpbmc7XG5cblx0LyoqXG5cdCAqIENyZWF0ZXMgdGhlIGhlYWRlciBuYXZpZ2F0aW9uIGl0ZW1zIGFuZCBtZW51IGl0ZW1zIHRocm91Z2ggYSBsaXN0IG9mIG5hdmlnYXRpb24gaXRlbSBvYmplY3RzLlxuXHQgKiBJbiBvcmRlciBmb3IgdGhlIG5hdmlnYXRpb24gaXRlbXMgdG8gbW92ZSB0byB0aGUgc2lkZSBuYXZpZ2F0aW9uIHdoZW4gd2luZG93IHNpemUgaXMgbGVzcyB0aGFuIDEwNTZweCxcblx0ICogbmF2aWdhdGlvbiBpdGVtcyBuZWVkIHRvIGJlIHBhc3NlZCBpbnRvIGJvdGggaWJtLWhlYWRlci1uYXZpZ2F0aW9uIGFuZCBpYm0tc2lkZW5hdi5cblx0ICovXG5cdEBJbnB1dCgpIG5hdmlnYXRpb25JdGVtczogTmF2aWdhdGlvbkl0ZW1bXTtcbn1cbiJdfQ==