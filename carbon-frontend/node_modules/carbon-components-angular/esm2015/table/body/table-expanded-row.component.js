/**
 *
 * carbon-angular v0.0.0 | table-expanded-row.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, HostBinding, Input } from "@angular/core";
export class TableExpandedRow {
    constructor() {
        this.skeleton = false;
        this.expandableRowClass = true;
        this.expanded = false;
    }
    firstExpandedTemplateInRow(row) {
        const found = row.find(d => d.expandedTemplate);
        if (found) {
            return found.expandedTemplate;
        }
        return found;
    }
    firstExpandedDataInRow(row) {
        const found = row.find(d => d.expandedData);
        if (found) {
            return found.expandedData;
        }
        return found;
    }
}
TableExpandedRow.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line: component-selector
                selector: "[ibmTableExpandedRow]",
                template: `
		<td [attr.colspan]="row.length + 2">
			<ng-container *ngIf="!firstExpandedTemplateInRow(row)">
				{{firstExpandedDataInRow(row)}}
			</ng-container>
			<ng-template
				[ngTemplateOutlet]="firstExpandedTemplateInRow(row)"
				[ngTemplateOutletContext]="{data: firstExpandedDataInRow(row)}">
			</ng-template>
		</td>
	`
            }] }
];
TableExpandedRow.propDecorators = {
    row: [{ type: Input }],
    skeleton: [{ type: Input }],
    expandableRowClass: [{ type: HostBinding, args: ["class.bx--expandable-row",] }],
    expanded: [{ type: HostBinding, args: ["attr.data-child-row",] }, { type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtZXhwYW5kZWQtcm93LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvdGFibGUvIiwic291cmNlcyI6WyJib2R5L3RhYmxlLWV4cGFuZGVkLXJvdy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sZUFBZSxDQUFDO0FBaUJ2QixNQUFNLE9BQU8sZ0JBQWdCO0lBZjdCO1FBa0JVLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFZSx1QkFBa0IsR0FBRyxJQUFJLENBQUM7UUFFdEIsYUFBUSxHQUFHLEtBQUssQ0FBQztJQWlCL0QsQ0FBQztJQWZBLDBCQUEwQixDQUFDLEdBQUc7UUFDN0IsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2hELElBQUksS0FBSyxFQUFFO1lBQ1YsT0FBTyxLQUFLLENBQUMsZ0JBQWdCLENBQUM7U0FDOUI7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNkLENBQUM7SUFFRCxzQkFBc0IsQ0FBQyxHQUFHO1FBQ3pCLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDNUMsSUFBSSxLQUFLLEVBQUU7WUFDVixPQUFPLEtBQUssQ0FBQyxZQUFZLENBQUM7U0FDMUI7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNkLENBQUM7OztZQXRDRCxTQUFTLFNBQUM7Z0JBQ1YsK0NBQStDO2dCQUMvQyxRQUFRLEVBQUUsdUJBQXVCO2dCQUNqQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7RUFVVDthQUNEOzs7a0JBRUMsS0FBSzt1QkFFTCxLQUFLO2lDQUVMLFdBQVcsU0FBQywwQkFBMEI7dUJBRXRDLFdBQVcsU0FBQyxxQkFBcUIsY0FBRyxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRIb3N0QmluZGluZyxcblx0SW5wdXRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuQENvbXBvbmVudCh7XG5cdC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogY29tcG9uZW50LXNlbGVjdG9yXG5cdHNlbGVjdG9yOiBcIltpYm1UYWJsZUV4cGFuZGVkUm93XVwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDx0ZCBbYXR0ci5jb2xzcGFuXT1cInJvdy5sZW5ndGggKyAyXCI+XG5cdFx0XHQ8bmctY29udGFpbmVyICpuZ0lmPVwiIWZpcnN0RXhwYW5kZWRUZW1wbGF0ZUluUm93KHJvdylcIj5cblx0XHRcdFx0e3tmaXJzdEV4cGFuZGVkRGF0YUluUm93KHJvdyl9fVxuXHRcdFx0PC9uZy1jb250YWluZXI+XG5cdFx0XHQ8bmctdGVtcGxhdGVcblx0XHRcdFx0W25nVGVtcGxhdGVPdXRsZXRdPVwiZmlyc3RFeHBhbmRlZFRlbXBsYXRlSW5Sb3cocm93KVwiXG5cdFx0XHRcdFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7ZGF0YTogZmlyc3RFeHBhbmRlZERhdGFJblJvdyhyb3cpfVwiPlxuXHRcdFx0PC9uZy10ZW1wbGF0ZT5cblx0XHQ8L3RkPlxuXHRgXG59KVxuZXhwb3J0IGNsYXNzIFRhYmxlRXhwYW5kZWRSb3cge1xuXHRASW5wdXQoKSByb3c6IGFueVtdO1xuXG5cdEBJbnB1dCgpIHNrZWxldG9uID0gZmFsc2U7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWV4cGFuZGFibGUtcm93XCIpIGV4cGFuZGFibGVSb3dDbGFzcyA9IHRydWU7XG5cblx0QEhvc3RCaW5kaW5nKFwiYXR0ci5kYXRhLWNoaWxkLXJvd1wiKSBASW5wdXQoKSBleHBhbmRlZCA9IGZhbHNlO1xuXG5cdGZpcnN0RXhwYW5kZWRUZW1wbGF0ZUluUm93KHJvdykge1xuXHRcdGNvbnN0IGZvdW5kID0gcm93LmZpbmQoZCA9PiBkLmV4cGFuZGVkVGVtcGxhdGUpO1xuXHRcdGlmIChmb3VuZCkge1xuXHRcdFx0cmV0dXJuIGZvdW5kLmV4cGFuZGVkVGVtcGxhdGU7XG5cdFx0fVxuXHRcdHJldHVybiBmb3VuZDtcblx0fVxuXG5cdGZpcnN0RXhwYW5kZWREYXRhSW5Sb3cocm93KSB7XG5cdFx0Y29uc3QgZm91bmQgPSByb3cuZmluZChkID0+IGQuZXhwYW5kZWREYXRhKTtcblx0XHRpZiAoZm91bmQpIHtcblx0XHRcdHJldHVybiBmb3VuZC5leHBhbmRlZERhdGE7XG5cdFx0fVxuXHRcdHJldHVybiBmb3VuZDtcblx0fVxufVxuIl19