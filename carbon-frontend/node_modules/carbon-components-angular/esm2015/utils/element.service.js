/**
 *
 * carbon-angular v0.0.0 | element.service.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Injectable } from "@angular/core";
import { from } from "rxjs";
import { map } from "rxjs/operators";
import { getScrollableParents, isVisibleInContainer } from "./scroll";
import { AnimationFrameServiceSingleton } from "./animation-frame.service";
export class ElementService {
    constructor(singleton) {
        this.singleton = singleton;
        this.tick = from(this.singleton.tick);
    }
    visibility(target, parentElement = target) {
        const scrollableParents = getScrollableParents(parentElement);
        return this.tick.pipe(map(() => {
            for (const parent of scrollableParents) {
                if (!isVisibleInContainer(target, parent)) {
                    return {
                        visible: false
                    };
                }
            }
            return {
                visible: true
            };
        }));
    }
}
ElementService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ElementService.ctorParameters = () => [
    { type: AnimationFrameServiceSingleton }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci91dGlscy8iLCJzb3VyY2VzIjpbImVsZW1lbnQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBYyxJQUFJLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDeEMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxvQkFBb0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUN0RSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUkzRSxNQUFNLE9BQU8sY0FBYztJQUcxQixZQUFzQixTQUF5QztRQUF6QyxjQUFTLEdBQVQsU0FBUyxDQUFnQztRQUM5RCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxVQUFVLENBQUMsTUFBbUIsRUFBRSxnQkFBNkIsTUFBTTtRQUNsRSxNQUFNLGlCQUFpQixHQUFHLG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzlELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRTtZQUM5QixLQUFLLE1BQU0sTUFBTSxJQUFJLGlCQUFpQixFQUFFO2dCQUN2QyxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxFQUFFO29CQUMxQyxPQUFPO3dCQUNOLE9BQU8sRUFBRSxLQUFLO3FCQUNkLENBQUM7aUJBQ0Y7YUFDRDtZQUNELE9BQU87Z0JBQ04sT0FBTyxFQUFFLElBQUk7YUFDYixDQUFDO1FBQ0gsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7OztZQXRCRCxVQUFVOzs7O1lBSEYsOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBmcm9tIH0gZnJvbSBcInJ4anNcIjtcbmltcG9ydCB7IG1hcCB9IGZyb20gXCJyeGpzL29wZXJhdG9yc1wiO1xuaW1wb3J0IHsgZ2V0U2Nyb2xsYWJsZVBhcmVudHMsIGlzVmlzaWJsZUluQ29udGFpbmVyIH0gZnJvbSBcIi4vc2Nyb2xsXCI7XG5pbXBvcnQgeyBBbmltYXRpb25GcmFtZVNlcnZpY2VTaW5nbGV0b24gfSBmcm9tIFwiLi9hbmltYXRpb24tZnJhbWUuc2VydmljZVwiO1xuaW1wb3J0IHsgRWxlbWVudFZpc2liaWxpdHlFdmVudCB9IGZyb20gXCIuL2VsZW1lbnQudHlwZXNcIjtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEVsZW1lbnRTZXJ2aWNlIHtcblx0cHJvdGVjdGVkIHRpY2s6IE9ic2VydmFibGU8bnVtYmVyPjtcblxuXHRjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgc2luZ2xldG9uOiBBbmltYXRpb25GcmFtZVNlcnZpY2VTaW5nbGV0b24pIHtcblx0XHR0aGlzLnRpY2sgPSBmcm9tKHRoaXMuc2luZ2xldG9uLnRpY2spO1xuXHR9XG5cblx0dmlzaWJpbGl0eSh0YXJnZXQ6IEhUTUxFbGVtZW50LCBwYXJlbnRFbGVtZW50OiBIVE1MRWxlbWVudCA9IHRhcmdldCk6IE9ic2VydmFibGU8RWxlbWVudFZpc2liaWxpdHlFdmVudD4ge1xuXHRcdGNvbnN0IHNjcm9sbGFibGVQYXJlbnRzID0gZ2V0U2Nyb2xsYWJsZVBhcmVudHMocGFyZW50RWxlbWVudCk7XG5cdFx0cmV0dXJuIHRoaXMudGljay5waXBlKG1hcCgoKSA9PiB7XG5cdFx0XHRmb3IgKGNvbnN0IHBhcmVudCBvZiBzY3JvbGxhYmxlUGFyZW50cykge1xuXHRcdFx0XHRpZiAoIWlzVmlzaWJsZUluQ29udGFpbmVyKHRhcmdldCwgcGFyZW50KSkge1xuXHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHR2aXNpYmxlOiBmYWxzZVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdHZpc2libGU6IHRydWVcblx0XHRcdH07XG5cdFx0fSkpO1xuXHR9XG59XG4iXX0=