/**
 *
 * carbon-angular v0.0.0 | event.service.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Injectable } from "@angular/core";
import { Subscription } from "rxjs";
import { DocumentService } from "./document.service";
import { getEventObservable } from "./event-observable";
var EventService = /** @class */ (function () {
    function EventService(documentService) {
        this.documentService = documentService;
        this.subscriptions = new Subscription();
        this.targets = new WeakMap();
    }
    EventService.prototype.on = function (targetElement, eventType, callback) {
        if (!this.targets.has(targetElement)) {
            this.targets.set(targetElement, new Map());
        }
        var eventMap = this.targets.get(targetElement);
        if (!eventMap.has(eventType)) {
            eventMap.set(eventType, getEventObservable(targetElement, eventType));
        }
        var subscription = eventMap.get(eventType).subscribe(callback);
        this.subscriptions.add(subscription);
    };
    EventService.prototype.onDocument = function (eventType, callback) {
        this.documentService.handleEvent(eventType, callback);
    };
    EventService.prototype.ngOnDestroy = function () {
        this.subscriptions.unsubscribe();
    };
    EventService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    EventService.ctorParameters = function () { return [
        { type: DocumentService }
    ]; };
    return EventService;
}());
export { EventService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvdXRpbHMvIiwic291cmNlcyI6WyJldmVudC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDdEQsT0FBTyxFQUFjLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNoRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFeEQ7SUFNQyxzQkFBc0IsZUFBZ0M7UUFBaEMsb0JBQWUsR0FBZixlQUFlLENBQWlCO1FBSjVDLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUVuQyxZQUFPLEdBQUcsSUFBSSxPQUFPLEVBQW9FLENBQUM7SUFFM0MsQ0FBQztJQUUxRCx5QkFBRSxHQUFGLFVBQUcsYUFBb0MsRUFBRSxTQUFpQixFQUFFLFFBQXNCO1FBQ2pGLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsRUFBRTtZQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1NBQzNDO1FBRUQsSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFakQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDN0IsUUFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsa0JBQWtCLENBQUMsYUFBYSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUM7U0FDdEU7UUFFRCxJQUFNLFlBQVksR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsaUNBQVUsR0FBVixVQUFXLFNBQWlCLEVBQUUsUUFBc0I7UUFDbkQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxrQ0FBVyxHQUFYO1FBQ0MsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNsQyxDQUFDOztnQkE3QkQsVUFBVTs7OztnQkFKRixlQUFlOztJQWtDeEIsbUJBQUM7Q0FBQSxBQTlCRCxJQThCQztTQTdCWSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgT25EZXN0cm95IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YnNjcmlwdGlvbiB9IGZyb20gXCJyeGpzXCI7XG5pbXBvcnQgeyBEb2N1bWVudFNlcnZpY2UgfSBmcm9tIFwiLi9kb2N1bWVudC5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBFdmVudEhhbmRsZXIgfSBmcm9tIFwiLi90eXBlc1wiO1xuaW1wb3J0IHsgZ2V0RXZlbnRPYnNlcnZhYmxlIH0gZnJvbSBcIi4vZXZlbnQtb2JzZXJ2YWJsZVwiO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRXZlbnRTZXJ2aWNlIGltcGxlbWVudHMgT25EZXN0cm95IHtcblx0cHJvdGVjdGVkIHN1YnNjcmlwdGlvbnMgPSBuZXcgU3Vic2NyaXB0aW9uKCk7XG5cblx0cHJvdGVjdGVkIHRhcmdldHMgPSBuZXcgV2Vha01hcDxIVE1MRWxlbWVudCB8IEVsZW1lbnQgfCBEb2N1bWVudCwgTWFwPHN0cmluZywgT2JzZXJ2YWJsZTxFdmVudD4+PigpO1xuXG5cdGNvbnN0cnVjdG9yKHByb3RlY3RlZCBkb2N1bWVudFNlcnZpY2U6IERvY3VtZW50U2VydmljZSkge31cblxuXHRvbih0YXJnZXRFbGVtZW50OiBIVE1MRWxlbWVudCB8IEVsZW1lbnQsIGV2ZW50VHlwZTogc3RyaW5nLCBjYWxsYmFjazogRXZlbnRIYW5kbGVyKSB7XG5cdFx0aWYgKCF0aGlzLnRhcmdldHMuaGFzKHRhcmdldEVsZW1lbnQpKSB7XG5cdFx0XHR0aGlzLnRhcmdldHMuc2V0KHRhcmdldEVsZW1lbnQsIG5ldyBNYXAoKSk7XG5cdFx0fVxuXG5cdFx0Y29uc3QgZXZlbnRNYXAgPSB0aGlzLnRhcmdldHMuZ2V0KHRhcmdldEVsZW1lbnQpO1xuXG5cdFx0aWYgKCFldmVudE1hcC5oYXMoZXZlbnRUeXBlKSkge1xuXHRcdFx0ZXZlbnRNYXAuc2V0KGV2ZW50VHlwZSwgZ2V0RXZlbnRPYnNlcnZhYmxlKHRhcmdldEVsZW1lbnQsIGV2ZW50VHlwZSkpO1xuXHRcdH1cblxuXHRcdGNvbnN0IHN1YnNjcmlwdGlvbiA9IGV2ZW50TWFwLmdldChldmVudFR5cGUpLnN1YnNjcmliZShjYWxsYmFjayk7XG5cdFx0dGhpcy5zdWJzY3JpcHRpb25zLmFkZChzdWJzY3JpcHRpb24pO1xuXHR9XG5cblx0b25Eb2N1bWVudChldmVudFR5cGU6IHN0cmluZywgY2FsbGJhY2s6IEV2ZW50SGFuZGxlcikge1xuXHRcdHRoaXMuZG9jdW1lbnRTZXJ2aWNlLmhhbmRsZUV2ZW50KGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuXHR9XG5cblx0bmdPbkRlc3Ryb3koKSB7XG5cdFx0dGhpcy5zdWJzY3JpcHRpb25zLnVuc3Vic2NyaWJlKCk7XG5cdH1cbn1cbiJdfQ==