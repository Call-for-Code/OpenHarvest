/**
 *
 * carbon-angular v0.0.0 | object.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import * as tslib_1 from "tslib";
// custom deep object merge
export var merge = function (target) {
    var objects = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        objects[_i - 1] = arguments[_i];
    }
    var e_1, _a;
    try {
        for (var objects_1 = tslib_1.__values(objects), objects_1_1 = objects_1.next(); !objects_1_1.done; objects_1_1 = objects_1.next()) {
            var object = objects_1_1.value;
            for (var key in object) {
                if (object.hasOwnProperty(key)) {
                    // since we're dealing just with JSON this simple check should be enough
                    if (object[key] instanceof Object) {
                        if (!target[key]) {
                            target[key] = {};
                        }
                        // recursively merge into the target
                        // most translations only run 3 or 4 levels deep, so no stack explosions
                        target[key] = merge(target[key], object[key]);
                    }
                    else {
                        target[key] = object[key];
                    }
                }
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (objects_1_1 && !objects_1_1.done && (_a = objects_1.return)) _a.call(objects_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return target;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JqZWN0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci91dGlscy8iLCJzb3VyY2VzIjpbIm9iamVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsMkJBQTJCO0FBQzNCLE1BQU0sQ0FBQyxJQUFNLEtBQUssR0FBRyxVQUFDLE1BQU07SUFBRSxpQkFBVTtTQUFWLFVBQVUsRUFBVixxQkFBVSxFQUFWLElBQVU7UUFBVixnQ0FBVTs7OztRQUN2QyxLQUFxQixJQUFBLFlBQUEsaUJBQUEsT0FBTyxDQUFBLGdDQUFBLHFEQUFFO1lBQXpCLElBQU0sTUFBTSxvQkFBQTtZQUNoQixLQUFLLElBQU0sR0FBRyxJQUFJLE1BQU0sRUFBRTtnQkFDekIsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFO29CQUMvQix3RUFBd0U7b0JBQ3hFLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sRUFBRTt3QkFDbEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTs0QkFDakIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQzt5QkFDakI7d0JBQ0Qsb0NBQW9DO3dCQUNwQyx3RUFBd0U7d0JBQ3hFLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO3FCQUM5Qzt5QkFBTTt3QkFDTixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO3FCQUMxQjtpQkFDRDthQUNEO1NBQ0Q7Ozs7Ozs7OztJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2YsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gY3VzdG9tIGRlZXAgb2JqZWN0IG1lcmdlXG5leHBvcnQgY29uc3QgbWVyZ2UgPSAodGFyZ2V0LCAuLi5vYmplY3RzKSA9PiB7XG5cdGZvciAoY29uc3Qgb2JqZWN0IG9mIG9iamVjdHMpIHtcblx0XHRmb3IgKGNvbnN0IGtleSBpbiBvYmplY3QpIHtcblx0XHRcdGlmIChvYmplY3QuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuXHRcdFx0XHQvLyBzaW5jZSB3ZSdyZSBkZWFsaW5nIGp1c3Qgd2l0aCBKU09OIHRoaXMgc2ltcGxlIGNoZWNrIHNob3VsZCBiZSBlbm91Z2hcblx0XHRcdFx0aWYgKG9iamVjdFtrZXldIGluc3RhbmNlb2YgT2JqZWN0KSB7XG5cdFx0XHRcdFx0aWYgKCF0YXJnZXRba2V5XSkge1xuXHRcdFx0XHRcdFx0dGFyZ2V0W2tleV0gPSB7fTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Ly8gcmVjdXJzaXZlbHkgbWVyZ2UgaW50byB0aGUgdGFyZ2V0XG5cdFx0XHRcdFx0Ly8gbW9zdCB0cmFuc2xhdGlvbnMgb25seSBydW4gMyBvciA0IGxldmVscyBkZWVwLCBzbyBubyBzdGFjayBleHBsb3Npb25zXG5cdFx0XHRcdFx0dGFyZ2V0W2tleV0gPSBtZXJnZSh0YXJnZXRba2V5XSwgb2JqZWN0W2tleV0pO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRhcmdldFtrZXldID0gb2JqZWN0W2tleV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIHRhcmdldDtcbn07XG4iXX0=