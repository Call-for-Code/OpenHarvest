/**
 *
 * carbon-angular v0.0.0 | base-modal.class.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Output, EventEmitter, Input, Directive } from "@angular/core";
/**
 * Extend `BaseModal` in your custom modal implementations to ensure consistent close behavior.
 *
 * `ModalService` depends on the `close` event to correctly clean up the component.
 */
var BaseModal = /** @class */ (function () {
    function BaseModal() {
        /**
         * Base event emitter to propagate close events
         */
        this.close = new EventEmitter();
        /**
         * Controls the open state of the modal
         */
        this.open = false;
    }
    /**
     * Default method to handle closing the modal
     */
    BaseModal.prototype.closeModal = function () {
        this.close.emit();
    };
    BaseModal.decorators = [
        { type: Directive, args: [{ selector: "[ibmBaseModal]" },] }
    ];
    BaseModal.propDecorators = {
        close: [{ type: Output }],
        open: [{ type: Input }]
    };
    return BaseModal;
}());
export { BaseModal };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1tb2RhbC5jbGFzcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvbW9kYWwvIiwic291cmNlcyI6WyJiYXNlLW1vZGFsLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixNQUFNLEVBQ04sWUFBWSxFQUNaLEtBQUssRUFDTCxTQUFTLEVBQ1QsTUFBTSxlQUFlLENBQUM7QUFFdkI7Ozs7R0FJRztBQUNIO0lBQUE7UUFFQzs7V0FFRztRQUNPLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRXJDOztXQUVHO1FBQ00sU0FBSSxHQUFHLEtBQUssQ0FBQztJQVF2QixDQUFDO0lBTkE7O09BRUc7SUFDSCw4QkFBVSxHQUFWO1FBQ0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNuQixDQUFDOztnQkFqQkQsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFFOzs7d0JBS3ZDLE1BQU07dUJBS04sS0FBSzs7SUFRUCxnQkFBQztDQUFBLEFBbEJELElBa0JDO1NBakJZLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRPdXRwdXQsXG5cdEV2ZW50RW1pdHRlcixcblx0SW5wdXQsXG5cdERpcmVjdGl2ZVxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG4vKipcbiAqIEV4dGVuZCBgQmFzZU1vZGFsYCBpbiB5b3VyIGN1c3RvbSBtb2RhbCBpbXBsZW1lbnRhdGlvbnMgdG8gZW5zdXJlIGNvbnNpc3RlbnQgY2xvc2UgYmVoYXZpb3IuXG4gKlxuICogYE1vZGFsU2VydmljZWAgZGVwZW5kcyBvbiB0aGUgYGNsb3NlYCBldmVudCB0byBjb3JyZWN0bHkgY2xlYW4gdXAgdGhlIGNvbXBvbmVudC5cbiAqL1xuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiBcIltpYm1CYXNlTW9kYWxdXCIgfSlcbmV4cG9ydCBjbGFzcyBCYXNlTW9kYWwge1xuXHQvKipcblx0ICogQmFzZSBldmVudCBlbWl0dGVyIHRvIHByb3BhZ2F0ZSBjbG9zZSBldmVudHNcblx0ICovXG5cdEBPdXRwdXQoKSBjbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuXHQvKipcblx0ICogQ29udHJvbHMgdGhlIG9wZW4gc3RhdGUgb2YgdGhlIG1vZGFsXG5cdCAqL1xuXHRASW5wdXQoKSBvcGVuID0gZmFsc2U7XG5cblx0LyoqXG5cdCAqIERlZmF1bHQgbWV0aG9kIHRvIGhhbmRsZSBjbG9zaW5nIHRoZSBtb2RhbFxuXHQgKi9cblx0Y2xvc2VNb2RhbCgpOiB2b2lkIHtcblx0XHR0aGlzLmNsb3NlLmVtaXQoKTtcblx0fVxufVxuIl19