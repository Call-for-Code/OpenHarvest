/**
 *
 * carbon-angular v0.0.0 | icon.module.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


// modules
import { NgModule, Optional, SkipSelf } from "@angular/core";
import { CommonModule } from "@angular/common";
// imports
import { IconDirective } from "./icon.directive";
import { IconService } from "./icon.service";
// icon imports
import Add16 from "@carbon/icons/es/add/16";
import Calendar16 from "@carbon/icons/es/calendar/16";
import CaretDown16 from "@carbon/icons/es/caret--down/16";
import CaretLeft16 from "@carbon/icons/es/caret--left/16";
import CaretRight16 from "@carbon/icons/es/caret--right/16";
import CaretUp16 from "@carbon/icons/es/caret--up/16";
import Checkmark16 from "@carbon/icons/es/checkmark/16";
import CheckmarkFilled16 from "@carbon/icons/es/checkmark--filled/16";
import CheckmarkOutline16 from "@carbon/icons/es/checkmark--outline/16";
import ChevronDown16 from "@carbon/icons/es/chevron--down/16";
import ChevronRight16 from "@carbon/icons/es/chevron--right/16";
import Close16 from "@carbon/icons/es/close/16";
import Close20 from "@carbon/icons/es/close/20";
import Copy16 from "@carbon/icons/es/copy/16";
import Delete16 from "@carbon/icons/es/delete/16";
import Download16 from "@carbon/icons/es/download/16";
import ErrorFilled16 from "@carbon/icons/es/error--filled/16";
import InformationFilled16 from "@carbon/icons/es/information--filled/16";
import Menu16 from "@carbon/icons/es/menu/16";
import Menu20 from "@carbon/icons/es/menu/20";
import OverflowMenuVertical16 from "@carbon/icons/es/overflow-menu--vertical/16";
import OverflowMenuHorizontal16 from "@carbon/icons/es/overflow-menu--horizontal/16";
import Save16 from "@carbon/icons/es/save/16";
import Search16 from "@carbon/icons/es/search/16";
import Settings16 from "@carbon/icons/es/settings/16";
import Warning16 from "@carbon/icons/es/warning/16";
import WarningFilled16 from "@carbon/icons/es/warning--filled/16";
// either provides a new instance of IconService, or returns the parent
export function ICON_SERVICE_PROVIDER_FACTORY(parentService) {
    return parentService || new IconService();
}
// icon service *must* be a singleton to ensure that icons are accessible globally and not duplicated
export var ICON_SERVICE_PROVIDER = {
    provide: IconService,
    deps: [[new Optional(), new SkipSelf(), IconService]],
    useFactory: ICON_SERVICE_PROVIDER_FACTORY
};
var IconModule = /** @class */ (function () {
    function IconModule(iconService) {
        this.iconService = iconService;
        iconService.registerAll([
            Add16,
            Calendar16,
            CaretDown16,
            CaretLeft16,
            CaretRight16,
            CaretUp16,
            Checkmark16,
            CheckmarkFilled16,
            CheckmarkOutline16,
            ChevronDown16,
            ChevronRight16,
            Close16,
            Close20,
            Copy16,
            Delete16,
            Download16,
            ErrorFilled16,
            InformationFilled16,
            Menu16,
            Menu20,
            OverflowMenuVertical16,
            OverflowMenuHorizontal16,
            Save16,
            Search16,
            Settings16,
            Warning16,
            WarningFilled16
        ]);
    }
    IconModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        IconDirective
                    ],
                    exports: [
                        IconDirective
                    ],
                    imports: [
                        CommonModule
                    ],
                    providers: [
                        ICON_SERVICE_PROVIDER
                    ]
                },] }
    ];
    /** @nocollapse */
    IconModule.ctorParameters = function () { return [
        { type: IconService }
    ]; };
    return IconModule;
}());
export { IconModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2ljb24vIiwic291cmNlcyI6WyJpY29uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVO0FBQ1YsT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxVQUFVO0FBQ1YsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxlQUFlO0FBQ2YsT0FBTyxLQUFLLE1BQU0seUJBQXlCLENBQUM7QUFDNUMsT0FBTyxVQUFVLE1BQU0sOEJBQThCLENBQUM7QUFDdEQsT0FBTyxXQUFXLE1BQU0saUNBQWlDLENBQUM7QUFDMUQsT0FBTyxXQUFXLE1BQU0saUNBQWlDLENBQUM7QUFDMUQsT0FBTyxZQUFZLE1BQU0sa0NBQWtDLENBQUM7QUFDNUQsT0FBTyxTQUFTLE1BQU0sK0JBQStCLENBQUM7QUFDdEQsT0FBTyxXQUFXLE1BQU0sK0JBQStCLENBQUM7QUFDeEQsT0FBTyxpQkFBaUIsTUFBTSx1Q0FBdUMsQ0FBQztBQUN0RSxPQUFPLGtCQUFrQixNQUFNLHdDQUF3QyxDQUFDO0FBQ3hFLE9BQU8sYUFBYSxNQUFNLG1DQUFtQyxDQUFDO0FBQzlELE9BQU8sY0FBYyxNQUFNLG9DQUFvQyxDQUFDO0FBQ2hFLE9BQU8sT0FBTyxNQUFNLDJCQUEyQixDQUFDO0FBQ2hELE9BQU8sT0FBTyxNQUFNLDJCQUEyQixDQUFDO0FBQ2hELE9BQU8sTUFBTSxNQUFNLDBCQUEwQixDQUFDO0FBQzlDLE9BQU8sUUFBUSxNQUFNLDRCQUE0QixDQUFDO0FBQ2xELE9BQU8sVUFBVSxNQUFNLDhCQUE4QixDQUFDO0FBQ3RELE9BQU8sYUFBYSxNQUFNLG1DQUFtQyxDQUFDO0FBQzlELE9BQU8sbUJBQW1CLE1BQU0seUNBQXlDLENBQUM7QUFDMUUsT0FBTyxNQUFNLE1BQU0sMEJBQTBCLENBQUM7QUFDOUMsT0FBTyxNQUFNLE1BQU0sMEJBQTBCLENBQUM7QUFDOUMsT0FBTyxzQkFBc0IsTUFBTSw2Q0FBNkMsQ0FBQztBQUNqRixPQUFPLHdCQUF3QixNQUFNLCtDQUErQyxDQUFDO0FBQ3JGLE9BQU8sTUFBTSxNQUFNLDBCQUEwQixDQUFDO0FBQzlDLE9BQU8sUUFBUSxNQUFNLDRCQUE0QixDQUFDO0FBQ2xELE9BQU8sVUFBVSxNQUFNLDhCQUE4QixDQUFDO0FBQ3RELE9BQU8sU0FBUyxNQUFNLDZCQUE2QixDQUFDO0FBQ3BELE9BQU8sZUFBZSxNQUFNLHFDQUFxQyxDQUFDO0FBRWxFLHVFQUF1RTtBQUN2RSxNQUFNLFVBQVUsNkJBQTZCLENBQUMsYUFBMEI7SUFDdkUsT0FBTyxhQUFhLElBQUksSUFBSSxXQUFXLEVBQUUsQ0FBQztBQUMzQyxDQUFDO0FBRUQscUdBQXFHO0FBQ3JHLE1BQU0sQ0FBQyxJQUFNLHFCQUFxQixHQUFHO0lBQ3BDLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxJQUFJLFFBQVEsRUFBRSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3JELFVBQVUsRUFBRSw2QkFBNkI7Q0FDekMsQ0FBQztBQUVGO0lBZUMsb0JBQXNCLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQzdDLFdBQVcsQ0FBQyxXQUFXLENBQUM7WUFDdkIsS0FBSztZQUNMLFVBQVU7WUFDVixXQUFXO1lBQ1gsV0FBVztZQUNYLFlBQVk7WUFDWixTQUFTO1lBQ1QsV0FBVztZQUNYLGlCQUFpQjtZQUNqQixrQkFBa0I7WUFDbEIsYUFBYTtZQUNiLGNBQWM7WUFDZCxPQUFPO1lBQ1AsT0FBTztZQUNQLE1BQU07WUFDTixRQUFRO1lBQ1IsVUFBVTtZQUNWLGFBQWE7WUFDYixtQkFBbUI7WUFDbkIsTUFBTTtZQUNOLE1BQU07WUFDTixzQkFBc0I7WUFDdEIsd0JBQXdCO1lBQ3hCLE1BQU07WUFDTixRQUFRO1lBQ1IsVUFBVTtZQUNWLFNBQVM7WUFDVCxlQUFlO1NBQ2YsQ0FBQyxDQUFDO0lBQ0osQ0FBQzs7Z0JBN0NELFFBQVEsU0FBQztvQkFDVCxZQUFZLEVBQUU7d0JBQ2IsYUFBYTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1IsYUFBYTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1IsWUFBWTtxQkFDWjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1YscUJBQXFCO3FCQUNyQjtpQkFDRDs7OztnQkF4RFEsV0FBVzs7SUF5RnBCLGlCQUFDO0NBQUEsQUE5Q0QsSUE4Q0M7U0FoQ1ksVUFBVSIsInNvdXJjZXNDb250ZW50IjpbIi8vIG1vZHVsZXNcbmltcG9ydCB7IE5nTW9kdWxlLCBPcHRpb25hbCwgU2tpcFNlbGYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xuXG4vLyBpbXBvcnRzXG5pbXBvcnQgeyBJY29uRGlyZWN0aXZlIH0gZnJvbSBcIi4vaWNvbi5kaXJlY3RpdmVcIjtcbmltcG9ydCB7IEljb25TZXJ2aWNlIH0gZnJvbSBcIi4vaWNvbi5zZXJ2aWNlXCI7XG5cbi8vIGljb24gaW1wb3J0c1xuaW1wb3J0IEFkZDE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2FkZC8xNlwiO1xuaW1wb3J0IENhbGVuZGFyMTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvY2FsZW5kYXIvMTZcIjtcbmltcG9ydCBDYXJldERvd24xNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9jYXJldC0tZG93bi8xNlwiO1xuaW1wb3J0IENhcmV0TGVmdDE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2NhcmV0LS1sZWZ0LzE2XCI7XG5pbXBvcnQgQ2FyZXRSaWdodDE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2NhcmV0LS1yaWdodC8xNlwiO1xuaW1wb3J0IENhcmV0VXAxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9jYXJldC0tdXAvMTZcIjtcbmltcG9ydCBDaGVja21hcmsxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9jaGVja21hcmsvMTZcIjtcbmltcG9ydCBDaGVja21hcmtGaWxsZWQxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9jaGVja21hcmstLWZpbGxlZC8xNlwiO1xuaW1wb3J0IENoZWNrbWFya091dGxpbmUxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9jaGVja21hcmstLW91dGxpbmUvMTZcIjtcbmltcG9ydCBDaGV2cm9uRG93bjE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2NoZXZyb24tLWRvd24vMTZcIjtcbmltcG9ydCBDaGV2cm9uUmlnaHQxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9jaGV2cm9uLS1yaWdodC8xNlwiO1xuaW1wb3J0IENsb3NlMTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvY2xvc2UvMTZcIjtcbmltcG9ydCBDbG9zZTIwIGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2Nsb3NlLzIwXCI7XG5pbXBvcnQgQ29weTE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2NvcHkvMTZcIjtcbmltcG9ydCBEZWxldGUxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9kZWxldGUvMTZcIjtcbmltcG9ydCBEb3dubG9hZDE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL2Rvd25sb2FkLzE2XCI7XG5pbXBvcnQgRXJyb3JGaWxsZWQxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9lcnJvci0tZmlsbGVkLzE2XCI7XG5pbXBvcnQgSW5mb3JtYXRpb25GaWxsZWQxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9pbmZvcm1hdGlvbi0tZmlsbGVkLzE2XCI7XG5pbXBvcnQgTWVudTE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL21lbnUvMTZcIjtcbmltcG9ydCBNZW51MjAgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvbWVudS8yMFwiO1xuaW1wb3J0IE92ZXJmbG93TWVudVZlcnRpY2FsMTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvb3ZlcmZsb3ctbWVudS0tdmVydGljYWwvMTZcIjtcbmltcG9ydCBPdmVyZmxvd01lbnVIb3Jpem9udGFsMTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvb3ZlcmZsb3ctbWVudS0taG9yaXpvbnRhbC8xNlwiO1xuaW1wb3J0IFNhdmUxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9zYXZlLzE2XCI7XG5pbXBvcnQgU2VhcmNoMTYgZnJvbSBcIkBjYXJib24vaWNvbnMvZXMvc2VhcmNoLzE2XCI7XG5pbXBvcnQgU2V0dGluZ3MxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy9zZXR0aW5ncy8xNlwiO1xuaW1wb3J0IFdhcm5pbmcxNiBmcm9tIFwiQGNhcmJvbi9pY29ucy9lcy93YXJuaW5nLzE2XCI7XG5pbXBvcnQgV2FybmluZ0ZpbGxlZDE2IGZyb20gXCJAY2FyYm9uL2ljb25zL2VzL3dhcm5pbmctLWZpbGxlZC8xNlwiO1xuXG4vLyBlaXRoZXIgcHJvdmlkZXMgYSBuZXcgaW5zdGFuY2Ugb2YgSWNvblNlcnZpY2UsIG9yIHJldHVybnMgdGhlIHBhcmVudFxuZXhwb3J0IGZ1bmN0aW9uIElDT05fU0VSVklDRV9QUk9WSURFUl9GQUNUT1JZKHBhcmVudFNlcnZpY2U6IEljb25TZXJ2aWNlKSB7XG5cdHJldHVybiBwYXJlbnRTZXJ2aWNlIHx8IG5ldyBJY29uU2VydmljZSgpO1xufVxuXG4vLyBpY29uIHNlcnZpY2UgKm11c3QqIGJlIGEgc2luZ2xldG9uIHRvIGVuc3VyZSB0aGF0IGljb25zIGFyZSBhY2Nlc3NpYmxlIGdsb2JhbGx5IGFuZCBub3QgZHVwbGljYXRlZFxuZXhwb3J0IGNvbnN0IElDT05fU0VSVklDRV9QUk9WSURFUiA9IHtcblx0cHJvdmlkZTogSWNvblNlcnZpY2UsXG5cdGRlcHM6IFtbbmV3IE9wdGlvbmFsKCksIG5ldyBTa2lwU2VsZigpLCBJY29uU2VydmljZV1dLFxuXHR1c2VGYWN0b3J5OiBJQ09OX1NFUlZJQ0VfUFJPVklERVJfRkFDVE9SWVxufTtcblxuQE5nTW9kdWxlKHtcblx0ZGVjbGFyYXRpb25zOiBbXG5cdFx0SWNvbkRpcmVjdGl2ZVxuXHRdLFxuXHRleHBvcnRzOiBbXG5cdFx0SWNvbkRpcmVjdGl2ZVxuXHRdLFxuXHRpbXBvcnRzOiBbXG5cdFx0Q29tbW9uTW9kdWxlXG5cdF0sXG5cdHByb3ZpZGVyczogW1xuXHRcdElDT05fU0VSVklDRV9QUk9WSURFUlxuXHRdXG59KVxuZXhwb3J0IGNsYXNzIEljb25Nb2R1bGUge1xuXHRjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaWNvblNlcnZpY2U6IEljb25TZXJ2aWNlKSB7XG5cdFx0aWNvblNlcnZpY2UucmVnaXN0ZXJBbGwoW1xuXHRcdFx0QWRkMTYsXG5cdFx0XHRDYWxlbmRhcjE2LFxuXHRcdFx0Q2FyZXREb3duMTYsXG5cdFx0XHRDYXJldExlZnQxNixcblx0XHRcdENhcmV0UmlnaHQxNixcblx0XHRcdENhcmV0VXAxNixcblx0XHRcdENoZWNrbWFyazE2LFxuXHRcdFx0Q2hlY2ttYXJrRmlsbGVkMTYsXG5cdFx0XHRDaGVja21hcmtPdXRsaW5lMTYsXG5cdFx0XHRDaGV2cm9uRG93bjE2LFxuXHRcdFx0Q2hldnJvblJpZ2h0MTYsXG5cdFx0XHRDbG9zZTE2LFxuXHRcdFx0Q2xvc2UyMCxcblx0XHRcdENvcHkxNixcblx0XHRcdERlbGV0ZTE2LFxuXHRcdFx0RG93bmxvYWQxNixcblx0XHRcdEVycm9yRmlsbGVkMTYsXG5cdFx0XHRJbmZvcm1hdGlvbkZpbGxlZDE2LFxuXHRcdFx0TWVudTE2LFxuXHRcdFx0TWVudTIwLFxuXHRcdFx0T3ZlcmZsb3dNZW51VmVydGljYWwxNixcblx0XHRcdE92ZXJmbG93TWVudUhvcml6b250YWwxNixcblx0XHRcdFNhdmUxNixcblx0XHRcdFNlYXJjaDE2LFxuXHRcdFx0U2V0dGluZ3MxNixcblx0XHRcdFdhcm5pbmcxNixcblx0XHRcdFdhcm5pbmdGaWxsZWQxNlxuXHRcdF0pO1xuXHR9XG59XG4iXX0=