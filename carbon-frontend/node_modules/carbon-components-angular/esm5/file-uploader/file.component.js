/**
 *
 * carbon-angular v0.0.0 | file.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, Output, EventEmitter, HostBinding } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
var FileComponent = /** @class */ (function () {
    function FileComponent(i18n) {
        this.i18n = i18n;
        /**
         * Accessible translations for the close and complete icons
         */
        this.translations = this.i18n.get().FILE_UPLOADER;
        this.remove = new EventEmitter();
        this.selectedFile = true;
    }
    Object.defineProperty(FileComponent.prototype, "isInvalidText", {
        get: function () {
            return this.fileItem.invalidText;
        },
        enumerable: true,
        configurable: true
    });
    FileComponent.prototype.ngOnDestroy = function () {
        this.remove.emit();
    };
    FileComponent.decorators = [
        { type: Component, args: [{
                    selector: "ibm-file",
                    template: "\n\t\t<p class=\"bx--file-filename\">{{fileItem.file.name}}</p>\n\t\t<span\n\t\t\t*ngIf=\"fileItem.state === 'edit'\"\n\t\t\tclass=\"bx--file__state-container\"\n\t\t\t(click)=\"remove.emit()\"\n\t\t\t(keyup.enter)=\"remove.emit()\"\n\t\t\t(keyup.space)=\"remove.emit()\"\n\t\t\ttabindex=\"0\">\n\t\t\t<svg\n\t\t\t\t*ngIf=\"isInvalidText\"\n\t\t\t\tibmIcon=\"warning--filled\"\n\t\t\t\tclass=\"bx--file--invalid\"\n\t\t\t\tsize=\"16\">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\tibmIcon=\"close\"\n\t\t\t\tsize=\"16\"\n\t\t\t\tclass=\"bx--file-close\"\n\t\t\t\t[ariaLabel]=\"translations.REMOVE_BUTTON\">\n\t\t\t</svg>\n\t\t</span>\n\t\t<span *ngIf=\"fileItem.state === 'upload'\">\n\t\t\t<div class=\"bx--inline-loading__animation\">\n\t\t\t\t<ibm-loading size=\"sm\"></ibm-loading>\n\t\t\t</div>\n\t\t</span>\n\t\t<span\n\t\t\t*ngIf=\"fileItem.state === 'complete'\"\n\t\t\tclass=\"bx--file__state-container\"\n\t\t\ttabindex=\"0\">\n\n\t\t\t<svg\n\t\t\t\tibmIcon=\"checkmark--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\tclass=\"bx--file-complete\"\n\t\t\t\t[ariaLabel]=\"translations.CHECKMARK\">\n\t\t\t</svg>\n\t\t</span>\n\t"
                }] }
    ];
    /** @nocollapse */
    FileComponent.ctorParameters = function () { return [
        { type: I18n }
    ]; };
    FileComponent.propDecorators = {
        translations: [{ type: Input }],
        fileItem: [{ type: Input }],
        remove: [{ type: Output }],
        selectedFile: [{ type: HostBinding, args: ["class.bx--file__selected-file",] }],
        isInvalidText: [{ type: HostBinding, args: ["class.bx--file__selected-file--invalid",] }]
    };
    return FileComponent;
}());
export { FileComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2ZpbGUtdXBsb2FkZXIvIiwic291cmNlcyI6WyJmaWxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxNQUFNLEVBQ04sWUFBWSxFQUNaLFdBQVcsRUFFWCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFHdEQ7SUE2REMsdUJBQXNCLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBakJoQzs7V0FFRztRQUNNLGlCQUFZLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxhQUFhLENBQUM7UUFNNUMsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFUSxpQkFBWSxHQUFHLElBQUksQ0FBQztJQU0vQixDQUFDO0lBSnBDLHNCQUEyRCx3Q0FBYTthQUF4RTtZQUNDLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUM7UUFDbEMsQ0FBQzs7O09BQUE7SUFJRCxtQ0FBVyxHQUFYO1FBQ0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNwQixDQUFDOztnQkFqRUQsU0FBUyxTQUFDO29CQUNWLFFBQVEsRUFBRSxVQUFVO29CQUNwQixRQUFRLEVBQUUsK2xDQXVDVDtpQkFDRDs7OztnQkE3Q1EsSUFBSTs7OytCQWtEWCxLQUFLOzJCQUlMLEtBQUs7eUJBRUwsTUFBTTsrQkFFTixXQUFXLFNBQUMsK0JBQStCO2dDQUUzQyxXQUFXLFNBQUMsd0NBQXdDOztJQVN0RCxvQkFBQztDQUFBLEFBbEVELElBa0VDO1NBdkJZLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdElucHV0LFxuXHRPdXRwdXQsXG5cdEV2ZW50RW1pdHRlcixcblx0SG9zdEJpbmRpbmcsXG5cdE9uRGVzdHJveVxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5pbXBvcnQgeyBJMThuIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvaTE4blwiO1xuaW1wb3J0IHsgRmlsZUl0ZW0gfSBmcm9tIFwiLi9maWxlLWl0ZW0uaW50ZXJmYWNlXCI7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tZmlsZVwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxwIGNsYXNzPVwiYngtLWZpbGUtZmlsZW5hbWVcIj57e2ZpbGVJdGVtLmZpbGUubmFtZX19PC9wPlxuXHRcdDxzcGFuXG5cdFx0XHQqbmdJZj1cImZpbGVJdGVtLnN0YXRlID09PSAnZWRpdCdcIlxuXHRcdFx0Y2xhc3M9XCJieC0tZmlsZV9fc3RhdGUtY29udGFpbmVyXCJcblx0XHRcdChjbGljayk9XCJyZW1vdmUuZW1pdCgpXCJcblx0XHRcdChrZXl1cC5lbnRlcik9XCJyZW1vdmUuZW1pdCgpXCJcblx0XHRcdChrZXl1cC5zcGFjZSk9XCJyZW1vdmUuZW1pdCgpXCJcblx0XHRcdHRhYmluZGV4PVwiMFwiPlxuXHRcdFx0PHN2Z1xuXHRcdFx0XHQqbmdJZj1cImlzSW52YWxpZFRleHRcIlxuXHRcdFx0XHRpYm1JY29uPVwid2FybmluZy0tZmlsbGVkXCJcblx0XHRcdFx0Y2xhc3M9XCJieC0tZmlsZS0taW52YWxpZFwiXG5cdFx0XHRcdHNpemU9XCIxNlwiPlxuXHRcdFx0PC9zdmc+XG5cdFx0XHQ8c3ZnXG5cdFx0XHRcdGlibUljb249XCJjbG9zZVwiXG5cdFx0XHRcdHNpemU9XCIxNlwiXG5cdFx0XHRcdGNsYXNzPVwiYngtLWZpbGUtY2xvc2VcIlxuXHRcdFx0XHRbYXJpYUxhYmVsXT1cInRyYW5zbGF0aW9ucy5SRU1PVkVfQlVUVE9OXCI+XG5cdFx0XHQ8L3N2Zz5cblx0XHQ8L3NwYW4+XG5cdFx0PHNwYW4gKm5nSWY9XCJmaWxlSXRlbS5zdGF0ZSA9PT0gJ3VwbG9hZCdcIj5cblx0XHRcdDxkaXYgY2xhc3M9XCJieC0taW5saW5lLWxvYWRpbmdfX2FuaW1hdGlvblwiPlxuXHRcdFx0XHQ8aWJtLWxvYWRpbmcgc2l6ZT1cInNtXCI+PC9pYm0tbG9hZGluZz5cblx0XHRcdDwvZGl2PlxuXHRcdDwvc3Bhbj5cblx0XHQ8c3BhblxuXHRcdFx0Km5nSWY9XCJmaWxlSXRlbS5zdGF0ZSA9PT0gJ2NvbXBsZXRlJ1wiXG5cdFx0XHRjbGFzcz1cImJ4LS1maWxlX19zdGF0ZS1jb250YWluZXJcIlxuXHRcdFx0dGFiaW5kZXg9XCIwXCI+XG5cblx0XHRcdDxzdmdcblx0XHRcdFx0aWJtSWNvbj1cImNoZWNrbWFyay0tZmlsbGVkXCJcblx0XHRcdFx0c2l6ZT1cIjE2XCJcblx0XHRcdFx0Y2xhc3M9XCJieC0tZmlsZS1jb21wbGV0ZVwiXG5cdFx0XHRcdFthcmlhTGFiZWxdPVwidHJhbnNsYXRpb25zLkNIRUNLTUFSS1wiPlxuXHRcdFx0PC9zdmc+XG5cdFx0PC9zcGFuPlxuXHRgXG59KVxuZXhwb3J0IGNsYXNzIEZpbGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuXHQvKipcblx0ICogQWNjZXNzaWJsZSB0cmFuc2xhdGlvbnMgZm9yIHRoZSBjbG9zZSBhbmQgY29tcGxldGUgaWNvbnNcblx0ICovXG5cdEBJbnB1dCgpIHRyYW5zbGF0aW9ucyA9IHRoaXMuaTE4bi5nZXQoKS5GSUxFX1VQTE9BREVSO1xuXHQvKipcblx0ICogQSBzaW5nbGUgYEZpbGVJdGVtYCBmcm9tIHRoZSBzZXQgb2YgYEZpbGVJdGVtYHNcblx0ICovXG5cdEBJbnB1dCgpIGZpbGVJdGVtOiBGaWxlSXRlbTtcblxuXHRAT3V0cHV0KCkgcmVtb3ZlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1maWxlX19zZWxlY3RlZC1maWxlXCIpIHNlbGVjdGVkRmlsZSA9IHRydWU7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWZpbGVfX3NlbGVjdGVkLWZpbGUtLWludmFsaWRcIikgZ2V0IGlzSW52YWxpZFRleHQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuZmlsZUl0ZW0uaW52YWxpZFRleHQ7XG5cdH1cblxuXHRjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaTE4bjogSTE4bikge31cblxuXHRuZ09uRGVzdHJveSgpIHtcblx0XHR0aGlzLnJlbW92ZS5lbWl0KCk7XG5cdH1cbn1cbiJdfQ==