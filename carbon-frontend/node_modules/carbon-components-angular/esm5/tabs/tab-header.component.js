/**
 *
 * carbon-angular v0.0.0 | tab-header.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, ViewChild, ElementRef, Output } from "@angular/core";
import { Tab } from "./tab.component";
import { EventEmitter } from "@angular/core";
var TabHeader = /** @class */ (function () {
    function TabHeader() {
        /**
         * Indicates whether the `Tab` is active/selected.
         * Determines whether it's `TabPanel` is rendered.
         */
        this.active = false;
        /**
         * Indicates whether or not the `Tab` item is disabled.
         */
        this.disabled = false;
        /**
         * Value 'selected' to be emitted after a new `Tab` is selected.
         */
        this.selected = new EventEmitter();
        this._cacheActive = false;
    }
    Object.defineProperty(TabHeader.prototype, "cacheActive", {
        get: function () {
            return this._cacheActive;
        },
        /**
         * Set to 'true' to have pane reference cached and not reloaded on tab switching.
         */
        set: function (shouldCache) {
            this._cacheActive = shouldCache;
            // Updates the pane references associated with the tab header when cache active is changed.
            if (this.paneReference) {
                this.paneReference.cacheActive = this.cacheActive;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabHeader.prototype, "paneTabIndex", {
        set: function (tabIndex) {
            if (this.paneReference) {
                this.paneReference.tabIndex = tabIndex;
            }
        },
        enumerable: true,
        configurable: true
    });
    TabHeader.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.title = _this.title ? _this.title : _this.tabItem.nativeElement.textContent;
        });
    };
    TabHeader.prototype.selectTab = function () {
        this.tabItem.nativeElement.focus();
        if (!this.disabled) {
            this.selected.emit();
            this.active = true;
            if (this.paneReference) {
                this.paneReference.active = true;
            }
        }
    };
    TabHeader.decorators = [
        { type: Component, args: [{
                    selector: "ibm-tab-header",
                    template: "\n\t\t<li\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--tabs__nav-item--selected bx--tabs--scrollable__nav-item--selected': active,\n\t\t\t\t'bx--tabs__nav-item--disabled bx--tabs--scrollable__nav-item--disabled': disabled\n\t\t\t}\"\n\t\t\tclass=\"bx--tabs--scrollable__nav-item\"\n\t\t\trole=\"presentation\"\n\t\t\t(click)=\"selectTab()\">\n\t\t\t<button\n\t\t\t\t#tabItem\n\t\t\t\t[attr.aria-selected]=\"active\"\n\t\t\t\tdraggable=\"false\"\n\t\t\t\tclass=\"bx--tabs--scrollable__nav-link\"\n\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t[title]=\"title\"\n\t\t\t\t[attr.tabindex]=\"(active? 0 : -1)\"\n\t\t\t\trole=\"tab\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</button>\n\t\t</li>\n\t"
                }] }
    ];
    TabHeader.propDecorators = {
        active: [{ type: Input }],
        disabled: [{ type: Input }],
        paneReference: [{ type: Input }],
        title: [{ type: Input }],
        cacheActive: [{ type: Input }],
        paneTabIndex: [{ type: Input }],
        selected: [{ type: Output }],
        tabItem: [{ type: ViewChild, args: ["tabItem", { static: true },] }]
    };
    return TabHeader;
}());
export { TabHeader };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWhlYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3RhYnMvIiwic291cmNlcyI6WyJ0YWItaGVhZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLE1BQU0sRUFFTixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU3QztJQUFBO1FBMkJDOzs7V0FHRztRQUNNLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDeEI7O1dBRUc7UUFDTSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBNEIxQjs7V0FFRztRQUVPLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBS25DLGlCQUFZLEdBQUcsS0FBSyxDQUFDO0lBa0JoQyxDQUFDO0lBOUNBLHNCQUFhLGtDQUFXO2FBZXhCO1lBQ0MsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzFCLENBQUM7UUFwQkQ7O1dBRUc7YUFDSCxVQUF5QixXQUFvQjtZQUM1QyxJQUFJLENBQUMsWUFBWSxHQUFHLFdBQVcsQ0FBQztZQUVoQywyRkFBMkY7WUFDM0YsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO2dCQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO2FBQ2xEO1FBQ0YsQ0FBQzs7O09BQUE7SUFFRCxzQkFBYSxtQ0FBWTthQUF6QixVQUEwQixRQUF1QjtZQUNoRCxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7Z0JBQ3ZCLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQzthQUN2QztRQUNGLENBQUM7OztPQUFBO0lBaUJELG1DQUFlLEdBQWY7UUFBQSxpQkFJQztRQUhBLFVBQVUsQ0FBQztZQUNWLEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDO1FBQy9FLENBQUMsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVELDZCQUFTLEdBQVQ7UUFDQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNuQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNuQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBQ25CLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtnQkFDdkIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO2FBQ2pDO1NBQ0Q7SUFDRixDQUFDOztnQkF6RkQsU0FBUyxTQUFDO29CQUNWLFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFFBQVEsRUFBRSw4cUJBcUJUO2lCQUNEOzs7eUJBT0MsS0FBSzsyQkFJTCxLQUFLO2dDQUlMLEtBQUs7d0JBQ0wsS0FBSzs4QkFJTCxLQUFLOytCQVNMLEtBQUs7MkJBY0wsTUFBTTswQkFHTixTQUFTLFNBQUMsU0FBUyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7SUFvQnZDLGdCQUFDO0NBQUEsQUExRkQsSUEwRkM7U0FoRVksU0FBUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0SW5wdXQsXG5cdFZpZXdDaGlsZCxcblx0RWxlbWVudFJlZixcblx0T3V0cHV0LFxuXHRBZnRlclZpZXdJbml0XG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbmltcG9ydCB7IFRhYiB9IGZyb20gXCIuL3RhYi5jb21wb25lbnRcIjtcbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tdGFiLWhlYWRlclwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxsaVxuXHRcdFx0W25nQ2xhc3NdPVwie1xuXHRcdFx0XHQnYngtLXRhYnNfX25hdi1pdGVtLS1zZWxlY3RlZCBieC0tdGFicy0tc2Nyb2xsYWJsZV9fbmF2LWl0ZW0tLXNlbGVjdGVkJzogYWN0aXZlLFxuXHRcdFx0XHQnYngtLXRhYnNfX25hdi1pdGVtLS1kaXNhYmxlZCBieC0tdGFicy0tc2Nyb2xsYWJsZV9fbmF2LWl0ZW0tLWRpc2FibGVkJzogZGlzYWJsZWRcblx0XHRcdH1cIlxuXHRcdFx0Y2xhc3M9XCJieC0tdGFicy0tc2Nyb2xsYWJsZV9fbmF2LWl0ZW1cIlxuXHRcdFx0cm9sZT1cInByZXNlbnRhdGlvblwiXG5cdFx0XHQoY2xpY2spPVwic2VsZWN0VGFiKClcIj5cblx0XHRcdDxidXR0b25cblx0XHRcdFx0I3RhYkl0ZW1cblx0XHRcdFx0W2F0dHIuYXJpYS1zZWxlY3RlZF09XCJhY3RpdmVcIlxuXHRcdFx0XHRkcmFnZ2FibGU9XCJmYWxzZVwiXG5cdFx0XHRcdGNsYXNzPVwiYngtLXRhYnMtLXNjcm9sbGFibGVfX25hdi1saW5rXCJcblx0XHRcdFx0aHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiXG5cdFx0XHRcdFt0aXRsZV09XCJ0aXRsZVwiXG5cdFx0XHRcdFthdHRyLnRhYmluZGV4XT1cIihhY3RpdmU/IDAgOiAtMSlcIlxuXHRcdFx0XHRyb2xlPVwidGFiXCI+XG5cdFx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHRcdDwvYnV0dG9uPlxuXHRcdDwvbGk+XG5cdGBcbn0pXG5cbmV4cG9ydCBjbGFzcyBUYWJIZWFkZXIgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcblx0LyoqXG5cdCAqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBgVGFiYCBpcyBhY3RpdmUvc2VsZWN0ZWQuXG5cdCAqIERldGVybWluZXMgd2hldGhlciBpdCdzIGBUYWJQYW5lbGAgaXMgcmVuZGVyZWQuXG5cdCAqL1xuXHRASW5wdXQoKSBhY3RpdmUgPSBmYWxzZTtcblx0LyoqXG5cdCAqIEluZGljYXRlcyB3aGV0aGVyIG9yIG5vdCB0aGUgYFRhYmAgaXRlbSBpcyBkaXNhYmxlZC5cblx0ICovXG5cdEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2U7XG5cdC8qKlxuXHQgKiBSZWZlcmVuY2UgdG8gdGhlIGNvcnJlc3BvbnNpbmcgdGFiIHBhbmUuXG5cdCAqL1xuXHRASW5wdXQoKSBwYW5lUmVmZXJlbmNlOiBUYWI7XG5cdEBJbnB1dCgpIHRpdGxlO1xuXHQvKipcblx0ICogU2V0IHRvICd0cnVlJyB0byBoYXZlIHBhbmUgcmVmZXJlbmNlIGNhY2hlZCBhbmQgbm90IHJlbG9hZGVkIG9uIHRhYiBzd2l0Y2hpbmcuXG5cdCAqL1xuXHRASW5wdXQoKSBzZXQgY2FjaGVBY3RpdmUoc2hvdWxkQ2FjaGU6IGJvb2xlYW4pIHtcblx0XHR0aGlzLl9jYWNoZUFjdGl2ZSA9IHNob3VsZENhY2hlO1xuXG5cdFx0Ly8gVXBkYXRlcyB0aGUgcGFuZSByZWZlcmVuY2VzIGFzc29jaWF0ZWQgd2l0aCB0aGUgdGFiIGhlYWRlciB3aGVuIGNhY2hlIGFjdGl2ZSBpcyBjaGFuZ2VkLlxuXHRcdGlmICh0aGlzLnBhbmVSZWZlcmVuY2UpIHtcblx0XHRcdHRoaXMucGFuZVJlZmVyZW5jZS5jYWNoZUFjdGl2ZSA9IHRoaXMuY2FjaGVBY3RpdmU7XG5cdFx0fVxuXHR9XG5cblx0QElucHV0KCkgc2V0IHBhbmVUYWJJbmRleCh0YWJJbmRleDogbnVtYmVyIHwgbnVsbCkge1xuXHRcdGlmICh0aGlzLnBhbmVSZWZlcmVuY2UpIHtcblx0XHRcdHRoaXMucGFuZVJlZmVyZW5jZS50YWJJbmRleCA9IHRhYkluZGV4O1xuXHRcdH1cblx0fVxuXG5cdGdldCBjYWNoZUFjdGl2ZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5fY2FjaGVBY3RpdmU7XG5cdH1cblxuXHQvKipcblx0ICogVmFsdWUgJ3NlbGVjdGVkJyB0byBiZSBlbWl0dGVkIGFmdGVyIGEgbmV3IGBUYWJgIGlzIHNlbGVjdGVkLlxuXHQgKi9cblxuXHRAT3V0cHV0KCkgc2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuXHQvLyBAdHMtaWdub3JlXG5cdEBWaWV3Q2hpbGQoXCJ0YWJJdGVtXCIsIHsgc3RhdGljOiB0cnVlIH0pIHRhYkl0ZW06IEVsZW1lbnRSZWY7XG5cblx0cHJvdGVjdGVkIF9jYWNoZUFjdGl2ZSA9IGZhbHNlO1xuXG5cdG5nQWZ0ZXJWaWV3SW5pdCgpIHtcblx0XHRzZXRUaW1lb3V0KCgpID0+IHtcblx0XHRcdHRoaXMudGl0bGUgPSB0aGlzLnRpdGxlID8gdGhpcy50aXRsZSA6IHRoaXMudGFiSXRlbS5uYXRpdmVFbGVtZW50LnRleHRDb250ZW50O1xuXHRcdH0pO1xuXHR9XG5cblx0c2VsZWN0VGFiKCkge1xuXHRcdHRoaXMudGFiSXRlbS5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG5cdFx0aWYgKCF0aGlzLmRpc2FibGVkKSB7XG5cdFx0XHR0aGlzLnNlbGVjdGVkLmVtaXQoKTtcblx0XHRcdHRoaXMuYWN0aXZlID0gdHJ1ZTtcblx0XHRcdGlmICh0aGlzLnBhbmVSZWZlcmVuY2UpIHtcblx0XHRcdFx0dGhpcy5wYW5lUmVmZXJlbmNlLmFjdGl2ZSA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG4iXX0=