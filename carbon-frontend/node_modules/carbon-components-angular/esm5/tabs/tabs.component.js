/**
 *
 * carbon-angular v0.0.0 | tabs.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, ContentChildren, QueryList, ContentChild } from "@angular/core";
import { Tab } from "./tab.component";
import { TabHeaders } from "./tab-headers.component";
/**
 * Build out your application's tabs using this component.
 * This is the parent of the `Tab` and `TabHeader` components.
 *
 * [See demo](../../?path=/story/tabs--basic)
 *
 * `Tabs` expects a set of `n-tab` elements
 *
 * ```html
 * <ibm-tabs>
 * 	<ibm-tab heading='tab1'>
 * 		tab 1 content
 * 	</ibm-tab>
 * 	<ibm-tab heading='tab1'>
 * 		tab 2 content
 * 	</ibm-tab>
 * 	<!-- ... -->
 * 	<ibm-tab heading='tab1'>
 * 		tab n content
 * 	</ibm-tab>
 * </ibm-tabs>
 * ```
 *
 * <example-url>../../iframe.html?id=tabs--basic</example-url>
 */
var Tabs = /** @class */ (function () {
    function Tabs() {
        /**
         * Takes either the string value 'top' or 'bottom' to place TabHeader
         * relative to the `TabPanel`s.
         */
        this.position = "top";
        /**
         * Set to 'true' to have `Tab` items cached and not reloaded on tab switching.
         */
        this.cacheActive = false;
        /**
         * Set to 'true' to have tabs automatically activated and have their content displayed when they receive focus.
         */
        this.followFocus = true;
        /**
         * Set to `true` to put tabs in a loading state.
         */
        this.skeleton = false;
        /**
         * Set to `true` to have the tabIndex of the all tabpanels be -1.
         */
        this.isNavigation = false;
        /**
         * Sets the type of the `TabHeader`s
         */
        this.type = "default";
    }
    /**
     * After content is initialized update `Tab`s to cache (if turned on) and set the initial
     * selected Tab item.
     */
    Tabs.prototype.ngAfterContentInit = function () {
        var _this = this;
        if (this.tabHeaders) {
            this.tabHeaders.cacheActive = this.cacheActive;
        }
        this.tabs.forEach(function (tab) {
            tab.tabIndex = _this.isNavigation ? null : 0;
        });
    };
    Tabs.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (this.tabHeaders && changes.cacheActive) {
            this.tabHeaders.cacheActive = this.cacheActive;
        }
        if (this.tabs && changes.isNavigation) {
            this.tabs.forEach(function (tab) {
                tab.tabIndex = _this.isNavigation ? null : 0;
            });
        }
    };
    /**
     * true if the n-tab's are passed directly to the component as children
     */
    Tabs.prototype.hasTabHeaders = function () {
        return this.tabs.length > 0;
    };
    Tabs.decorators = [
        { type: Component, args: [{
                    selector: "ibm-tabs",
                    template: "\n\t\t\t<ibm-tab-headers\n\t\t\t\t*ngIf=\"hasTabHeaders() && position === 'top'\"\n\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t[tabs]=\"tabs\"\n\t\t\t\t[followFocus]=\"followFocus\"\n\t\t\t\t[cacheActive]=\"cacheActive\"\n\t\t\t\t[contentBefore]=\"before\"\n\t\t\t\t[contentAfter]=\"after\"\n\t\t\t\t[ariaLabel]=\"ariaLabel\"\n\t\t\t\t[ariaLabelledby]=\"ariaLabelledby\"\n\t\t\t\t[type]=\"type\">\n\t\t\t</ibm-tab-headers>\n\t\t\t<ng-content></ng-content>\n\t\t\t<ng-template #before>\n\t\t\t\t<ng-content select=\"[before]\"></ng-content>\n\t\t\t</ng-template>\n\t\t\t<ng-template #after>\n\t\t\t\t<ng-content select=\"[after]\"></ng-content>\n\t\t\t</ng-template>\n\t\t\t<ibm-tab-headers\n\t\t\t\t*ngIf=\"hasTabHeaders() && position === 'bottom'\"\n\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t[tabs]=\"tabs\"\n\t\t\t\t[cacheActive]=\"cacheActive\"\n\t\t\t\t[type]=\"type\">\n\t\t\t</ibm-tab-headers>\n\t"
                }] }
    ];
    Tabs.propDecorators = {
        position: [{ type: Input }],
        cacheActive: [{ type: Input }],
        followFocus: [{ type: Input }],
        skeleton: [{ type: Input }],
        isNavigation: [{ type: Input }],
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        type: [{ type: Input }],
        tabs: [{ type: ContentChildren, args: [Tab, { descendants: false },] }],
        tabHeaders: [{ type: ContentChild, args: [TabHeaders, { static: false },] }]
    };
    return Tabs;
}());
export { Tabs };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3RhYnMvIiwic291cmNlcyI6WyJ0YWJzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxlQUFlLEVBQ2YsU0FBUyxFQUVULFlBQVksRUFHWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBR3JEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F3Qkc7QUFDSDtJQUFBO1FBZ0NDOzs7V0FHRztRQUNNLGFBQVEsR0FBcUIsS0FBSyxDQUFDO1FBQzVDOztXQUVHO1FBQ00sZ0JBQVcsR0FBRyxLQUFLLENBQUM7UUFDN0I7O1dBRUc7UUFDTSxnQkFBVyxHQUFHLElBQUksQ0FBQztRQUM1Qjs7V0FFRztRQUNNLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDMUI7O1dBRUc7UUFDTSxpQkFBWSxHQUFHLEtBQUssQ0FBQztRQVM5Qjs7V0FFRztRQUNNLFNBQUksR0FBNEIsU0FBUyxDQUFDO0lBNENwRCxDQUFDO0lBaENBOzs7T0FHRztJQUNILGlDQUFrQixHQUFsQjtRQUFBLGlCQVFDO1FBUEEsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ3BCLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7U0FDL0M7UUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFBLEdBQUc7WUFDcEIsR0FBRyxDQUFDLFFBQVEsR0FBRyxLQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3QyxDQUFDLENBQUMsQ0FBQztJQUNKLENBQUM7SUFFRCwwQkFBVyxHQUFYLFVBQVksT0FBc0I7UUFBbEMsaUJBVUM7UUFUQSxJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUMzQyxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQy9DO1FBRUQsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxZQUFZLEVBQUU7WUFDdEMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHO2dCQUNwQixHQUFHLENBQUMsUUFBUSxHQUFHLEtBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdDLENBQUMsQ0FBQyxDQUFDO1NBQ0g7SUFDRixDQUFDO0lBRUQ7O09BRUc7SUFDSCw0QkFBYSxHQUFiO1FBQ0MsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7Z0JBM0dELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsVUFBVTtvQkFDcEIsUUFBUSxFQUFFLHE0QkEyQlQ7aUJBQ0Q7OzsyQkFNQyxLQUFLOzhCQUlMLEtBQUs7OEJBSUwsS0FBSzsyQkFJTCxLQUFLOytCQUlMLEtBQUs7NEJBSUwsS0FBSztpQ0FJTCxLQUFLO3VCQUlMLEtBQUs7dUJBS0wsZUFBZSxTQUFDLEdBQUcsRUFBRSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUU7NkJBSzNDLFlBQVksU0FBQyxVQUFVLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFOztJQWtDNUMsV0FBQztDQUFBLEFBNUdELElBNEdDO1NBN0VZLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdElucHV0LFxuXHRDb250ZW50Q2hpbGRyZW4sXG5cdFF1ZXJ5TGlzdCxcblx0QWZ0ZXJDb250ZW50SW5pdCxcblx0Q29udGVudENoaWxkLFxuXHRPbkNoYW5nZXMsXG5cdFNpbXBsZUNoYW5nZXNcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFRhYiB9IGZyb20gXCIuL3RhYi5jb21wb25lbnRcIjtcbmltcG9ydCB7IFRhYkhlYWRlcnMgfSBmcm9tIFwiLi90YWItaGVhZGVycy5jb21wb25lbnRcIjtcblxuXG4vKipcbiAqIEJ1aWxkIG91dCB5b3VyIGFwcGxpY2F0aW9uJ3MgdGFicyB1c2luZyB0aGlzIGNvbXBvbmVudC5cbiAqIFRoaXMgaXMgdGhlIHBhcmVudCBvZiB0aGUgYFRhYmAgYW5kIGBUYWJIZWFkZXJgIGNvbXBvbmVudHMuXG4gKlxuICogW1NlZSBkZW1vXSguLi8uLi8/cGF0aD0vc3RvcnkvdGFicy0tYmFzaWMpXG4gKlxuICogYFRhYnNgIGV4cGVjdHMgYSBzZXQgb2YgYG4tdGFiYCBlbGVtZW50c1xuICpcbiAqIGBgYGh0bWxcbiAqIDxpYm0tdGFicz5cbiAqIFx0PGlibS10YWIgaGVhZGluZz0ndGFiMSc+XG4gKiBcdFx0dGFiIDEgY29udGVudFxuICogXHQ8L2libS10YWI+XG4gKiBcdDxpYm0tdGFiIGhlYWRpbmc9J3RhYjEnPlxuICogXHRcdHRhYiAyIGNvbnRlbnRcbiAqIFx0PC9pYm0tdGFiPlxuICogXHQ8IS0tIC4uLiAtLT5cbiAqIFx0PGlibS10YWIgaGVhZGluZz0ndGFiMSc+XG4gKiBcdFx0dGFiIG4gY29udGVudFxuICogXHQ8L2libS10YWI+XG4gKiA8L2libS10YWJzPlxuICogYGBgXG4gKlxuICogPGV4YW1wbGUtdXJsPi4uLy4uL2lmcmFtZS5odG1sP2lkPXRhYnMtLWJhc2ljPC9leGFtcGxlLXVybD5cbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImlibS10YWJzXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0XHQ8aWJtLXRhYi1oZWFkZXJzXG5cdFx0XHRcdCpuZ0lmPVwiaGFzVGFiSGVhZGVycygpICYmIHBvc2l0aW9uID09PSAndG9wJ1wiXG5cdFx0XHRcdFtza2VsZXRvbl09XCJza2VsZXRvblwiXG5cdFx0XHRcdFt0YWJzXT1cInRhYnNcIlxuXHRcdFx0XHRbZm9sbG93Rm9jdXNdPVwiZm9sbG93Rm9jdXNcIlxuXHRcdFx0XHRbY2FjaGVBY3RpdmVdPVwiY2FjaGVBY3RpdmVcIlxuXHRcdFx0XHRbY29udGVudEJlZm9yZV09XCJiZWZvcmVcIlxuXHRcdFx0XHRbY29udGVudEFmdGVyXT1cImFmdGVyXCJcblx0XHRcdFx0W2FyaWFMYWJlbF09XCJhcmlhTGFiZWxcIlxuXHRcdFx0XHRbYXJpYUxhYmVsbGVkYnldPVwiYXJpYUxhYmVsbGVkYnlcIlxuXHRcdFx0XHRbdHlwZV09XCJ0eXBlXCI+XG5cdFx0XHQ8L2libS10YWItaGVhZGVycz5cblx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHRcdDxuZy10ZW1wbGF0ZSAjYmVmb3JlPlxuXHRcdFx0XHQ8bmctY29udGVudCBzZWxlY3Q9XCJbYmVmb3JlXVwiPjwvbmctY29udGVudD5cblx0XHRcdDwvbmctdGVtcGxhdGU+XG5cdFx0XHQ8bmctdGVtcGxhdGUgI2FmdGVyPlxuXHRcdFx0XHQ8bmctY29udGVudCBzZWxlY3Q9XCJbYWZ0ZXJdXCI+PC9uZy1jb250ZW50PlxuXHRcdFx0PC9uZy10ZW1wbGF0ZT5cblx0XHRcdDxpYm0tdGFiLWhlYWRlcnNcblx0XHRcdFx0Km5nSWY9XCJoYXNUYWJIZWFkZXJzKCkgJiYgcG9zaXRpb24gPT09ICdib3R0b20nXCJcblx0XHRcdFx0W3NrZWxldG9uXT1cInNrZWxldG9uXCJcblx0XHRcdFx0W3RhYnNdPVwidGFic1wiXG5cdFx0XHRcdFtjYWNoZUFjdGl2ZV09XCJjYWNoZUFjdGl2ZVwiXG5cdFx0XHRcdFt0eXBlXT1cInR5cGVcIj5cblx0XHRcdDwvaWJtLXRhYi1oZWFkZXJzPlxuXHRgXG59KVxuZXhwb3J0IGNsYXNzIFRhYnMgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMge1xuXHQvKipcblx0ICogVGFrZXMgZWl0aGVyIHRoZSBzdHJpbmcgdmFsdWUgJ3RvcCcgb3IgJ2JvdHRvbScgdG8gcGxhY2UgVGFiSGVhZGVyXG5cdCAqIHJlbGF0aXZlIHRvIHRoZSBgVGFiUGFuZWxgcy5cblx0ICovXG5cdEBJbnB1dCgpIHBvc2l0aW9uOiBcInRvcFwiIHwgXCJib3R0b21cIiA9IFwidG9wXCI7XG5cdC8qKlxuXHQgKiBTZXQgdG8gJ3RydWUnIHRvIGhhdmUgYFRhYmAgaXRlbXMgY2FjaGVkIGFuZCBub3QgcmVsb2FkZWQgb24gdGFiIHN3aXRjaGluZy5cblx0ICovXG5cdEBJbnB1dCgpIGNhY2hlQWN0aXZlID0gZmFsc2U7XG5cdC8qKlxuXHQgKiBTZXQgdG8gJ3RydWUnIHRvIGhhdmUgdGFicyBhdXRvbWF0aWNhbGx5IGFjdGl2YXRlZCBhbmQgaGF2ZSB0aGVpciBjb250ZW50IGRpc3BsYXllZCB3aGVuIHRoZXkgcmVjZWl2ZSBmb2N1cy5cblx0ICovXG5cdEBJbnB1dCgpIGZvbGxvd0ZvY3VzID0gdHJ1ZTtcblx0LyoqXG5cdCAqIFNldCB0byBgdHJ1ZWAgdG8gcHV0IHRhYnMgaW4gYSBsb2FkaW5nIHN0YXRlLlxuXHQgKi9cblx0QElucHV0KCkgc2tlbGV0b24gPSBmYWxzZTtcblx0LyoqXG5cdCAqIFNldCB0byBgdHJ1ZWAgdG8gaGF2ZSB0aGUgdGFiSW5kZXggb2YgdGhlIGFsbCB0YWJwYW5lbHMgYmUgLTEuXG5cdCAqL1xuXHRASW5wdXQoKSBpc05hdmlnYXRpb24gPSBmYWxzZTtcblx0LyoqXG5cdCAqIFNldHMgdGhlIGFyaWEgbGFiZWwgb24gdGhlIGBUYWJIZWFkZXJgcyBuYXYgZWxlbWVudC5cblx0ICovXG5cdEBJbnB1dCgpIGFyaWFMYWJlbDogc3RyaW5nO1xuXHQvKipcblx0ICogU2V0cyB0aGUgYXJpYSBsYWJlbGxlZGJ5IG9uIHRoZSBgVGFiSGVhZGVyYHMgbmF2IGVsZW1lbnQuXG5cdCAqL1xuXHRASW5wdXQoKSBhcmlhTGFiZWxsZWRieTogc3RyaW5nO1xuXHQvKipcblx0ICogU2V0cyB0aGUgdHlwZSBvZiB0aGUgYFRhYkhlYWRlcmBzXG5cdCAqL1xuXHRASW5wdXQoKSB0eXBlOiBcImRlZmF1bHRcIiB8IFwiY29udGFpbmVyXCIgPSBcImRlZmF1bHRcIjtcblxuXHQvKipcblx0ICogTWFpbnRhaW5zIGEgYFF1ZXJ5TGlzdGAgb2YgdGhlIGBUYWJgIGVsZW1lbnRzIGFuZCB1cGRhdGVzIGlmIGBUYWJgcyBhcmUgYWRkZWQgb3IgcmVtb3ZlZC5cblx0ICovXG5cdEBDb250ZW50Q2hpbGRyZW4oVGFiLCB7IGRlc2NlbmRhbnRzOiBmYWxzZSB9KSB0YWJzOiBRdWVyeUxpc3Q8VGFiPjtcblx0LyoqXG5cdCAqIENvbnRlbnQgY2hpbGQgb2YgdGhlIHByb2plY3RlZCBoZWFkZXIgY29tcG9uZW50XG5cdCAqL1xuXHQvLyBAdHMtaWdub3JlXG5cdEBDb250ZW50Q2hpbGQoVGFiSGVhZGVycywgeyBzdGF0aWM6IGZhbHNlIH0pIHRhYkhlYWRlcnM7XG5cblx0LyoqXG5cdCAqIEFmdGVyIGNvbnRlbnQgaXMgaW5pdGlhbGl6ZWQgdXBkYXRlIGBUYWJgcyB0byBjYWNoZSAoaWYgdHVybmVkIG9uKSBhbmQgc2V0IHRoZSBpbml0aWFsXG5cdCAqIHNlbGVjdGVkIFRhYiBpdGVtLlxuXHQgKi9cblx0bmdBZnRlckNvbnRlbnRJbml0KCkge1xuXHRcdGlmICh0aGlzLnRhYkhlYWRlcnMpIHtcblx0XHRcdHRoaXMudGFiSGVhZGVycy5jYWNoZUFjdGl2ZSA9IHRoaXMuY2FjaGVBY3RpdmU7XG5cdFx0fVxuXG5cdFx0dGhpcy50YWJzLmZvckVhY2godGFiID0+IHtcblx0XHRcdHRhYi50YWJJbmRleCA9IHRoaXMuaXNOYXZpZ2F0aW9uID8gbnVsbCA6IDA7XG5cdFx0fSk7XG5cdH1cblxuXHRuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG5cdFx0aWYgKHRoaXMudGFiSGVhZGVycyAmJiBjaGFuZ2VzLmNhY2hlQWN0aXZlKSB7XG5cdFx0XHR0aGlzLnRhYkhlYWRlcnMuY2FjaGVBY3RpdmUgPSB0aGlzLmNhY2hlQWN0aXZlO1xuXHRcdH1cblxuXHRcdGlmICh0aGlzLnRhYnMgJiYgY2hhbmdlcy5pc05hdmlnYXRpb24pIHtcblx0XHRcdHRoaXMudGFicy5mb3JFYWNoKHRhYiA9PiB7XG5cdFx0XHRcdHRhYi50YWJJbmRleCA9IHRoaXMuaXNOYXZpZ2F0aW9uID8gbnVsbCA6IDA7XG5cdFx0XHR9KTtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogdHJ1ZSBpZiB0aGUgbi10YWIncyBhcmUgcGFzc2VkIGRpcmVjdGx5IHRvIHRoZSBjb21wb25lbnQgYXMgY2hpbGRyZW5cblx0ICovXG5cdGhhc1RhYkhlYWRlcnMoKSB7XG5cdFx0cmV0dXJuIHRoaXMudGFicy5sZW5ndGggPiAwO1xuXHR9XG59XG4iXX0=