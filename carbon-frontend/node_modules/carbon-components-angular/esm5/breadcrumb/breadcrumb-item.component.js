/**
 *
 * carbon-angular v0.0.0 | breadcrumb-item.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, HostBinding, Input, Output, EventEmitter, Optional } from "@angular/core";
import { DomSanitizer } from "@angular/platform-browser";
import { Router } from "@angular/router";
var BreadcrumbItemComponent = /** @class */ (function () {
    function BreadcrumbItemComponent(domSanitizer, router) {
        this.domSanitizer = domSanitizer;
        this.router = router;
        /**
         * Emits the navigation status promise when the link is activated
         */
        this.navigation = new EventEmitter();
        this.skeleton = false;
        this.ariaCurrent = "page";
        this.current = false;
        this.itemClass = true;
    }
    Object.defineProperty(BreadcrumbItemComponent.prototype, "href", {
        get: function () {
            return this.domSanitizer.bypassSecurityTrustUrl(this._href);
        },
        set: function (v) {
            this._href = v;
        },
        enumerable: true,
        configurable: true
    });
    BreadcrumbItemComponent.prototype.useTemplate = function () {
        return this.skeleton || this._href || this.route;
    };
    BreadcrumbItemComponent.prototype.navigate = function (event) {
        if (this.router && this.route) {
            event.preventDefault();
            var status_1 = this.router.navigate(this.route, this.routeExtras);
            this.navigation.emit(status_1);
        }
    };
    BreadcrumbItemComponent.decorators = [
        { type: Component, args: [{
                    selector: "ibm-breadcrumb-item",
                    template: "\n\t<a\n\t\tclass=\"bx--link\"\n\t\t[href]=\"(skeleton ? '/#' : href)\"\n\t\t(click)=\"navigate($event)\"\n\t\t[attr.aria-current]=\"(current ? ariaCurrent : null)\"\n\t\t*ngIf=\"useTemplate(); else content\">\n\t\t<ng-container *ngTemplateOutlet=\"content\"></ng-container>\n\t</a>\n\t<ng-template #content>\n\t\t<ng-content></ng-content>\n\t</ng-template>"
                }] }
    ];
    /** @nocollapse */
    BreadcrumbItemComponent.ctorParameters = function () { return [
        { type: DomSanitizer },
        { type: Router, decorators: [{ type: Optional }] }
    ]; };
    BreadcrumbItemComponent.propDecorators = {
        href: [{ type: Input }],
        route: [{ type: Input }],
        routeExtras: [{ type: Input }],
        navigation: [{ type: Output }],
        skeleton: [{ type: Input }],
        ariaCurrent: [{ type: Input }],
        current: [{ type: HostBinding, args: ["class.bx--breadcrumb-item--current",] }, { type: Input }],
        itemClass: [{ type: HostBinding, args: ["class.bx--breadcrumb-item",] }]
    };
    return BreadcrumbItemComponent;
}());
export { BreadcrumbItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvYnJlYWRjcnVtYi8iLCJzb3VyY2VzIjpbImJyZWFkY3J1bWItaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sRUFDTixZQUFZLEVBQ1osUUFBUSxFQUNSLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFekM7SUFtREMsaUNBQXNCLFlBQTBCLEVBQXdCLE1BQWM7UUFBaEUsaUJBQVksR0FBWixZQUFZLENBQWM7UUFBd0IsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQWZ0Rjs7V0FFRztRQUNPLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBb0IsQ0FBQztRQUVuRCxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWpCLGdCQUFXLEdBQUcsTUFBTSxDQUFDO1FBRThCLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFFbEMsY0FBUyxHQUFHLElBQUksQ0FBQztJQUkrQixDQUFDO0lBbkMzRixzQkFBYSx5Q0FBSTthQUlqQjtZQUNDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFXLENBQUM7UUFDdkUsQ0FBQzthQU5ELFVBQWtCLENBQVM7WUFDMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDaEIsQ0FBQzs7O09BQUE7SUFtQ0QsNkNBQVcsR0FBWDtRQUNDLE9BQU8sSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDbEQsQ0FBQztJQUVELDBDQUFRLEdBQVIsVUFBUyxLQUFLO1FBQ2IsSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDOUIsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3ZCLElBQU0sUUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ2xFLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQU0sQ0FBQyxDQUFDO1NBQzdCO0lBQ0YsQ0FBQzs7Z0JBL0RELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUscUJBQXFCO29CQUMvQixRQUFRLEVBQUUsdVdBV0s7aUJBQ2Y7Ozs7Z0JBakJRLFlBQVk7Z0JBQ1osTUFBTSx1QkFxRHFDLFFBQVE7Ozt1QkFuQzFELEtBQUs7d0JBWUwsS0FBSzs4QkFNTCxLQUFLOzZCQUtMLE1BQU07MkJBRU4sS0FBSzs4QkFFTCxLQUFLOzBCQUVMLFdBQVcsU0FBQyxvQ0FBb0MsY0FBRyxLQUFLOzRCQUV4RCxXQUFXLFNBQUMsMkJBQTJCOztJQWlCekMsOEJBQUM7Q0FBQSxBQWhFRCxJQWdFQztTQWpEWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdEhvc3RCaW5kaW5nLFxuXHRJbnB1dCxcblx0T3V0cHV0LFxuXHRFdmVudEVtaXR0ZXIsXG5cdE9wdGlvbmFsXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIgfSBmcm9tIFwiQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3NlclwiO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiaWJtLWJyZWFkY3J1bWItaXRlbVwiLFxuXHR0ZW1wbGF0ZTogYFxuXHQ8YVxuXHRcdGNsYXNzPVwiYngtLWxpbmtcIlxuXHRcdFtocmVmXT1cIihza2VsZXRvbiA/ICcvIycgOiBocmVmKVwiXG5cdFx0KGNsaWNrKT1cIm5hdmlnYXRlKCRldmVudClcIlxuXHRcdFthdHRyLmFyaWEtY3VycmVudF09XCIoY3VycmVudCA/IGFyaWFDdXJyZW50IDogbnVsbClcIlxuXHRcdCpuZ0lmPVwidXNlVGVtcGxhdGUoKTsgZWxzZSBjb250ZW50XCI+XG5cdFx0PG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImNvbnRlbnRcIj48L25nLWNvbnRhaW5lcj5cblx0PC9hPlxuXHQ8bmctdGVtcGxhdGUgI2NvbnRlbnQ+XG5cdFx0PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuXHQ8L25nLXRlbXBsYXRlPmBcbn0pXG5leHBvcnQgY2xhc3MgQnJlYWRjcnVtYkl0ZW1Db21wb25lbnQge1xuXHRASW5wdXQoKSBzZXQgaHJlZih2OiBzdHJpbmcpIHtcblx0XHR0aGlzLl9ocmVmID0gdjtcblx0fVxuXG5cdGdldCBocmVmKCkge1xuXHRcdHJldHVybiB0aGlzLmRvbVNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0VXJsKHRoaXMuX2hyZWYpIGFzIHN0cmluZztcblx0fVxuXG5cdC8qKlxuXHQgKiBBcnJheSBvZiBjb21tYW5kcyB0byBzZW5kIHRvIHRoZSByb3V0ZXIgd2hlbiB0aGUgbGluayBpcyBhY3RpdmF0ZWRcblx0ICogU2VlOiBodHRwczovL2FuZ3VsYXIuaW8vYXBpL3JvdXRlci9Sb3V0ZXIjbmF2aWdhdGVcblx0ICovXG5cdEBJbnB1dCgpIHJvdXRlOiBhbnlbXTtcblxuXHQvKipcblx0ICogUm91dGVyIG9wdGlvbnMuIFVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgcm91dGVgXG5cdCAqIFNlZTogaHR0cHM6Ly9hbmd1bGFyLmlvL2FwaS9yb3V0ZXIvUm91dGVyI25hdmlnYXRlXG5cdCAqL1xuXHRASW5wdXQoKSByb3V0ZUV4dHJhczogYW55O1xuXG5cdC8qKlxuXHQgKiBFbWl0cyB0aGUgbmF2aWdhdGlvbiBzdGF0dXMgcHJvbWlzZSB3aGVuIHRoZSBsaW5rIGlzIGFjdGl2YXRlZFxuXHQgKi9cblx0QE91dHB1dCgpIG5hdmlnYXRpb24gPSBuZXcgRXZlbnRFbWl0dGVyPFByb21pc2U8Ym9vbGVhbj4+KCk7XG5cblx0QElucHV0KCkgc2tlbGV0b24gPSBmYWxzZTtcblxuXHRASW5wdXQoKSBhcmlhQ3VycmVudCA9IFwicGFnZVwiO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1icmVhZGNydW1iLWl0ZW0tLWN1cnJlbnRcIikgQElucHV0KCkgY3VycmVudCA9IGZhbHNlO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1icmVhZGNydW1iLWl0ZW1cIikgaXRlbUNsYXNzID0gdHJ1ZTtcblxuXHRwcm90ZWN0ZWQgX2hyZWY6IHN0cmluZztcblxuXHRjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZG9tU2FuaXRpemVyOiBEb21TYW5pdGl6ZXIsIEBPcHRpb25hbCgpIHByb3RlY3RlZCByb3V0ZXI6IFJvdXRlcikgeyB9XG5cblx0dXNlVGVtcGxhdGUoKSB7XG5cdFx0cmV0dXJuIHRoaXMuc2tlbGV0b24gfHwgdGhpcy5faHJlZiB8fCB0aGlzLnJvdXRlO1xuXHR9XG5cblx0bmF2aWdhdGUoZXZlbnQpIHtcblx0XHRpZiAodGhpcy5yb3V0ZXIgJiYgdGhpcy5yb3V0ZSkge1xuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdGNvbnN0IHN0YXR1cyA9IHRoaXMucm91dGVyLm5hdmlnYXRlKHRoaXMucm91dGUsIHRoaXMucm91dGVFeHRyYXMpO1xuXHRcdFx0dGhpcy5uYXZpZ2F0aW9uLmVtaXQoc3RhdHVzKTtcblx0XHR9XG5cdH1cbn1cbiJdfQ==