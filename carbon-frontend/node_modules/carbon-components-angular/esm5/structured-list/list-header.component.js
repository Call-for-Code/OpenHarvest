/**
 *
 * carbon-angular v0.0.0 | list-header.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, HostBinding, ContentChildren, QueryList, Input } from "@angular/core";
import { ListColumn } from "./list-column.component";
/**
 * `ListHeader` provides a container for the `ListColumn`s that make up the header of a structured list.
 *
 * Example:
 * ```html
 * 	<ibm-list-header>
 *		<ibm-list-column nowrap="true">Column 1</ibm-list-column>
 *		<ibm-list-column nowrap="true">Column 2</ibm-list-column>
 *		<ibm-list-column>Column 3</ibm-list-column>
 *	</ibm-list-header>
 * ```
 */
var ListHeader = /** @class */ (function () {
    function ListHeader() {
        this.wrapper = true;
        /**
         * Set by the containing `StructuredList`. Adds a dummy header for the selection column when set to true.
         */
        this.selection = false;
        this._skeleton = false;
    }
    Object.defineProperty(ListHeader.prototype, "skeleton", {
        get: function () {
            return this._skeleton;
        },
        set: function (value) {
            this._skeleton = value;
            this.updateChildren();
        },
        enumerable: true,
        configurable: true
    });
    ListHeader.prototype.ngAfterContentInit = function () {
        this.columns.forEach(function (column) {
            column.isBodyColumn = false;
            column.isHeaderColumn = true;
        });
        this.updateChildren();
    };
    ListHeader.prototype.updateChildren = function () {
        var _this = this;
        if (this.columns) {
            this.columns.toArray().forEach(function (child) { return child.skeleton = _this.skeleton; });
        }
    };
    ListHeader.decorators = [
        { type: Component, args: [{
                    selector: "ibm-list-header",
                    template: "\n\t\t<div class=\"bx--structured-list-row bx--structured-list-row--header-row\">\n\t\t\t<ng-content></ng-content>\n\t\t\t<div *ngIf=\"selection\" class=\"bx--structured-list-th\"></div>\n\t\t</div>\n\t"
                }] }
    ];
    ListHeader.propDecorators = {
        wrapper: [{ type: HostBinding, args: ["class.bx--structured-list-thead",] }],
        skeleton: [{ type: Input }],
        columns: [{ type: ContentChildren, args: [ListColumn,] }]
    };
    return ListHeader;
}());
export { ListHeader };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9zdHJ1Y3R1cmVkLWxpc3QvIiwic291cmNlcyI6WyJsaXN0LWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxXQUFXLEVBQ1gsZUFBZSxFQUNmLFNBQVMsRUFFVCxLQUFLLEVBQ0wsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRXJEOzs7Ozs7Ozs7OztHQVdHO0FBQ0g7SUFBQTtRQVVpRCxZQUFPLEdBQUcsSUFBSSxDQUFDO1FBYy9EOztXQUVHO1FBQ0gsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUVSLGNBQVMsR0FBRyxLQUFLLENBQUM7SUFlN0IsQ0FBQztJQWhDQSxzQkFDSSxnQ0FBUTthQUtaO1lBQ0MsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3ZCLENBQUM7YUFSRCxVQUNhLEtBQVU7WUFDdEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7WUFDdkIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7OztPQUFBO0lBZUQsdUNBQWtCLEdBQWxCO1FBQ0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBQSxNQUFNO1lBQzFCLE1BQU0sQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1lBQzVCLE1BQU0sQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBQzlCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFUyxtQ0FBYyxHQUF4QjtRQUFBLGlCQUlDO1FBSEEsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2pCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLFVBQUEsS0FBSyxJQUFJLE9BQUEsS0FBSyxDQUFDLFFBQVEsR0FBRyxLQUFJLENBQUMsUUFBUSxFQUE5QixDQUE4QixDQUFDLENBQUM7U0FDeEU7SUFDRixDQUFDOztnQkEzQ0QsU0FBUyxTQUFDO29CQUNWLFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLFFBQVEsRUFBRSw0TUFLVDtpQkFDRDs7OzBCQUVDLFdBQVcsU0FBQyxpQ0FBaUM7MkJBRTdDLEtBQUs7MEJBVUwsZUFBZSxTQUFDLFVBQVU7O0lBc0I1QixpQkFBQztDQUFBLEFBNUNELElBNENDO1NBbkNZLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdEhvc3RCaW5kaW5nLFxuXHRDb250ZW50Q2hpbGRyZW4sXG5cdFF1ZXJ5TGlzdCxcblx0QWZ0ZXJDb250ZW50SW5pdCxcblx0SW5wdXRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IExpc3RDb2x1bW4gfSBmcm9tIFwiLi9saXN0LWNvbHVtbi5jb21wb25lbnRcIjtcblxuLyoqXG4gKiBgTGlzdEhlYWRlcmAgcHJvdmlkZXMgYSBjb250YWluZXIgZm9yIHRoZSBgTGlzdENvbHVtbmBzIHRoYXQgbWFrZSB1cCB0aGUgaGVhZGVyIG9mIGEgc3RydWN0dXJlZCBsaXN0LlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGBodG1sXG4gKiBcdDxpYm0tbGlzdC1oZWFkZXI+XG4gKlx0XHQ8aWJtLWxpc3QtY29sdW1uIG5vd3JhcD1cInRydWVcIj5Db2x1bW4gMTwvaWJtLWxpc3QtY29sdW1uPlxuICpcdFx0PGlibS1saXN0LWNvbHVtbiBub3dyYXA9XCJ0cnVlXCI+Q29sdW1uIDI8L2libS1saXN0LWNvbHVtbj5cbiAqXHRcdDxpYm0tbGlzdC1jb2x1bW4+Q29sdW1uIDM8L2libS1saXN0LWNvbHVtbj5cbiAqXHQ8L2libS1saXN0LWhlYWRlcj5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiaWJtLWxpc3QtaGVhZGVyXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PGRpdiBjbGFzcz1cImJ4LS1zdHJ1Y3R1cmVkLWxpc3Qtcm93IGJ4LS1zdHJ1Y3R1cmVkLWxpc3Qtcm93LS1oZWFkZXItcm93XCI+XG5cdFx0XHQ8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG5cdFx0XHQ8ZGl2ICpuZ0lmPVwic2VsZWN0aW9uXCIgY2xhc3M9XCJieC0tc3RydWN0dXJlZC1saXN0LXRoXCI+PC9kaXY+XG5cdFx0PC9kaXY+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgTGlzdEhlYWRlciBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tc3RydWN0dXJlZC1saXN0LXRoZWFkXCIpIHdyYXBwZXIgPSB0cnVlO1xuXG5cdEBJbnB1dCgpXG5cdHNldCBza2VsZXRvbih2YWx1ZTogYW55KSB7XG5cdFx0dGhpcy5fc2tlbGV0b24gPSB2YWx1ZTtcblx0XHR0aGlzLnVwZGF0ZUNoaWxkcmVuKCk7XG5cdH1cblxuXHRnZXQgc2tlbGV0b24oKTogYW55IHtcblx0XHRyZXR1cm4gdGhpcy5fc2tlbGV0b247XG5cdH1cblxuXHRAQ29udGVudENoaWxkcmVuKExpc3RDb2x1bW4pIGNvbHVtbnM6IFF1ZXJ5TGlzdDxMaXN0Q29sdW1uPjtcblxuXHQvKipcblx0ICogU2V0IGJ5IHRoZSBjb250YWluaW5nIGBTdHJ1Y3R1cmVkTGlzdGAuIEFkZHMgYSBkdW1teSBoZWFkZXIgZm9yIHRoZSBzZWxlY3Rpb24gY29sdW1uIHdoZW4gc2V0IHRvIHRydWUuXG5cdCAqL1xuXHRzZWxlY3Rpb24gPSBmYWxzZTtcblxuXHRwcm90ZWN0ZWQgX3NrZWxldG9uID0gZmFsc2U7XG5cblx0bmdBZnRlckNvbnRlbnRJbml0KCkge1xuXHRcdHRoaXMuY29sdW1ucy5mb3JFYWNoKGNvbHVtbiA9PiB7XG5cdFx0XHRjb2x1bW4uaXNCb2R5Q29sdW1uID0gZmFsc2U7XG5cdFx0XHRjb2x1bW4uaXNIZWFkZXJDb2x1bW4gPSB0cnVlO1xuXHRcdH0pO1xuXHRcdHRoaXMudXBkYXRlQ2hpbGRyZW4oKTtcblx0fVxuXG5cdHByb3RlY3RlZCB1cGRhdGVDaGlsZHJlbigpIHtcblx0XHRpZiAodGhpcy5jb2x1bW5zKSB7XG5cdFx0XHR0aGlzLmNvbHVtbnMudG9BcnJheSgpLmZvckVhY2goY2hpbGQgPT4gY2hpbGQuc2tlbGV0b24gPSB0aGlzLnNrZWxldG9uKTtcblx0XHR9XG5cdH1cbn1cbiJdfQ==