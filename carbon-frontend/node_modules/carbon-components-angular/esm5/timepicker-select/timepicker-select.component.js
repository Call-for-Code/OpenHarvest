/**
 *
 * carbon-angular v0.0.0 | timepicker-select.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import * as tslib_1 from "tslib";
import { Component, Input, HostBinding } from "@angular/core";
import { Select } from "carbon-components-angular/select";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
/**
 * [See demo](../../?path=/story/time-picker-select--simple)
 *
 * <example-url>../../iframe.html?id=time-picker-select--simple</example-url>
 */
var TimePickerSelect = /** @class */ (function (_super) {
    tslib_1.__extends(TimePickerSelect, _super);
    function TimePickerSelect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timeSelect = true;
        _this.timePickerSelect = true;
        _this.id = "timepicker-select-" + TimePickerSelect.selectCount++;
        /**
         * Set to true for a loading select.
         */
        _this.skeleton = false;
        /**
         * `light` or `dark` select theme
         */
        _this.theme = "dark";
        _this.timePickerSelectSkeleton = _this.skeleton;
        return _this;
    }
    Object.defineProperty(TimePickerSelect.prototype, "timePickerSelectLight", {
        get: function () {
            return this.theme === "light";
        },
        enumerable: true,
        configurable: true
    });
    TimePickerSelect.decorators = [
        { type: Component, args: [{
                    selector: "ibm-timepicker-select",
                    template: "\n\t\t<label *ngIf=\"!skeleton && label\" [attr.for]=\"id\" class=\"bx--label bx--visually-hidden\">{{label}}</label>\n\t\t<div class=\"bx--select-input__wrapper\">\n\t\t\t<select\n\t\t\t\t#select\n\t\t\t\t[attr.id]=\"id\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t(change)=\"onChange($event)\"\n\t\t\t\tclass=\"bx--select-input\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</select>\n\t\t\t<svg ibmIcon=\"chevron--down\" size=\"16\" *ngIf=\"!skeleton\" class=\"bx--select__arrow\"></svg>\n\t\t</div>\n\t",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: TimePickerSelect,
                            multi: true
                        }
                    ]
                }] }
    ];
    TimePickerSelect.propDecorators = {
        timeSelect: [{ type: HostBinding, args: ["class.bx--select",] }],
        timePickerSelect: [{ type: HostBinding, args: ["class.bx--time-picker__select",] }],
        id: [{ type: Input }],
        skeleton: [{ type: Input }],
        theme: [{ type: Input }],
        label: [{ type: Input }],
        timePickerSelectSkeleton: [{ type: HostBinding, args: ["class.bx--skeleton",] }],
        timePickerSelectLight: [{ type: HostBinding, args: ["class.bx--select--light",] }]
    };
    return TimePickerSelect;
}(Select));
export { TimePickerSelect };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXBpY2tlci1zZWxlY3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci90aW1lcGlja2VyLXNlbGVjdC8iLCJzb3VyY2VzIjpbInRpbWVwaWNrZXItc2VsZWN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxLQUFLLEVBR0wsV0FBVyxFQUVYLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMxRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVuRDs7OztHQUlHO0FBQ0g7SUF3QnNDLDRDQUFNO0lBeEI1QztRQUFBLHFFQStDQztRQXRCaUMsZ0JBQVUsR0FBRyxJQUFJLENBQUM7UUFDTCxzQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFFN0QsUUFBRSxHQUFHLHVCQUFxQixnQkFBZ0IsQ0FBQyxXQUFXLEVBQUksQ0FBQztRQUVwRTs7V0FFRztRQUNNLGNBQVEsR0FBRyxLQUFLLENBQUM7UUFFMUI7O1dBRUc7UUFDTSxXQUFLLEdBQXFCLE1BQU0sQ0FBQztRQUlQLDhCQUF3QixHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUM7O0lBSzdFLENBQUM7SUFIQSxzQkFBNEMsbURBQXFCO2FBQWpFO1lBQ0MsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLE9BQU8sQ0FBQztRQUMvQixDQUFDOzs7T0FBQTs7Z0JBOUNELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxRQUFRLEVBQUUsMGZBYVQ7b0JBQ0QsU0FBUyxFQUFFO3dCQUNWOzRCQUNDLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxnQkFBZ0I7NEJBQzdCLEtBQUssRUFBRSxJQUFJO3lCQUNYO3FCQUNEO2lCQUNEOzs7NkJBRUMsV0FBVyxTQUFDLGtCQUFrQjttQ0FDOUIsV0FBVyxTQUFDLCtCQUErQjtxQkFFM0MsS0FBSzsyQkFLTCxLQUFLO3dCQUtMLEtBQUs7d0JBRUwsS0FBSzsyQ0FFTCxXQUFXLFNBQUMsb0JBQW9CO3dDQUVoQyxXQUFXLFNBQUMseUJBQXlCOztJQUd2Qyx1QkFBQztDQUFBLEFBL0NELENBd0JzQyxNQUFNLEdBdUIzQztTQXZCWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdElucHV0LFxuXHRPdXRwdXQsXG5cdEV2ZW50RW1pdHRlcixcblx0SG9zdEJpbmRpbmcsXG5cdFRlbXBsYXRlUmVmXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBTZWxlY3QgfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9zZWxlY3RcIjtcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5cbi8qKlxuICogW1NlZSBkZW1vXSguLi8uLi8/cGF0aD0vc3RvcnkvdGltZS1waWNrZXItc2VsZWN0LS1zaW1wbGUpXG4gKlxuICogPGV4YW1wbGUtdXJsPi4uLy4uL2lmcmFtZS5odG1sP2lkPXRpbWUtcGlja2VyLXNlbGVjdC0tc2ltcGxlPC9leGFtcGxlLXVybD5cbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImlibS10aW1lcGlja2VyLXNlbGVjdFwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxsYWJlbCAqbmdJZj1cIiFza2VsZXRvbiAmJiBsYWJlbFwiIFthdHRyLmZvcl09XCJpZFwiIGNsYXNzPVwiYngtLWxhYmVsIGJ4LS12aXN1YWxseS1oaWRkZW5cIj57e2xhYmVsfX08L2xhYmVsPlxuXHRcdDxkaXYgY2xhc3M9XCJieC0tc2VsZWN0LWlucHV0X193cmFwcGVyXCI+XG5cdFx0XHQ8c2VsZWN0XG5cdFx0XHRcdCNzZWxlY3Rcblx0XHRcdFx0W2F0dHIuaWRdPVwiaWRcIlxuXHRcdFx0XHRbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuXHRcdFx0XHQoY2hhbmdlKT1cIm9uQ2hhbmdlKCRldmVudClcIlxuXHRcdFx0XHRjbGFzcz1cImJ4LS1zZWxlY3QtaW5wdXRcIj5cblx0XHRcdFx0PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuXHRcdFx0PC9zZWxlY3Q+XG5cdFx0XHQ8c3ZnIGlibUljb249XCJjaGV2cm9uLS1kb3duXCIgc2l6ZT1cIjE2XCIgKm5nSWY9XCIhc2tlbGV0b25cIiBjbGFzcz1cImJ4LS1zZWxlY3RfX2Fycm93XCI+PC9zdmc+XG5cdFx0PC9kaXY+XG5cdGAsXG5cdHByb3ZpZGVyczogW1xuXHRcdHtcblx0XHRcdHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuXHRcdFx0dXNlRXhpc3Rpbmc6IFRpbWVQaWNrZXJTZWxlY3QsXG5cdFx0XHRtdWx0aTogdHJ1ZVxuXHRcdH1cblx0XVxufSlcbmV4cG9ydCBjbGFzcyBUaW1lUGlja2VyU2VsZWN0IGV4dGVuZHMgU2VsZWN0IHtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXNlbGVjdFwiKSB0aW1lU2VsZWN0ID0gdHJ1ZTtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXRpbWUtcGlja2VyX19zZWxlY3RcIikgdGltZVBpY2tlclNlbGVjdCA9IHRydWU7XG5cblx0QElucHV0KCkgaWQgPSBgdGltZXBpY2tlci1zZWxlY3QtJHtUaW1lUGlja2VyU2VsZWN0LnNlbGVjdENvdW50Kyt9YDtcblxuXHQvKipcblx0ICogU2V0IHRvIHRydWUgZm9yIGEgbG9hZGluZyBzZWxlY3QuXG5cdCAqL1xuXHRASW5wdXQoKSBza2VsZXRvbiA9IGZhbHNlO1xuXG5cdC8qKlxuXHQgKiBgbGlnaHRgIG9yIGBkYXJrYCBzZWxlY3QgdGhlbWVcblx0ICovXG5cdEBJbnB1dCgpIHRoZW1lOiBcImxpZ2h0XCIgfCBcImRhcmtcIiA9IFwiZGFya1wiO1xuXG5cdEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXNrZWxldG9uXCIpIHRpbWVQaWNrZXJTZWxlY3RTa2VsZXRvbiA9IHRoaXMuc2tlbGV0b247XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXNlbGVjdC0tbGlnaHRcIikgZ2V0IHRpbWVQaWNrZXJTZWxlY3RMaWdodCgpIHtcblx0XHRyZXR1cm4gdGhpcy50aGVtZSA9PT0gXCJsaWdodFwiO1xuXHR9XG59XG4iXX0=