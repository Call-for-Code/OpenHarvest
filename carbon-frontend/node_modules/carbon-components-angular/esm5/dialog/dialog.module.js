/**
 *
 * carbon-angular v0.0.0 | dialog.module.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


// modules
import { NgModule } from "@angular/core";
import { CommonModule } from "@angular/common";
// imports
import { DialogService } from "./dialog.service";
import { Dialog } from "./dialog.component";
import { DialogDirective } from "./dialog.directive";
import { Tooltip } from "./tooltip/tooltip.component";
import { TooltipDefinition } from "./tooltip/tooltip-definition.component";
import { TooltipIcon } from "./tooltip/tooltip-icon.component";
import { TooltipDirective } from "./tooltip/tooltip.directive";
import { EllipsisTooltip } from "./tooltip/ellipsis-tooltip.directive";
import { OverflowMenu } from "./overflow-menu/overflow-menu.component";
import { OverflowMenuPane } from "./overflow-menu/overflow-menu-pane.component";
import { OverflowMenuCustomPane } from "./overflow-menu/overflow-menu-custom-pane.component";
import { OverflowMenuDirective } from "./overflow-menu/overflow-menu.directive";
import { OverflowMenuOption } from "./overflow-menu/overflow-menu-option.component";
import { I18nModule } from "carbon-components-angular/i18n";
import { PlaceholderModule } from "carbon-components-angular/placeholder";
import { ExperimentalModule } from "carbon-components-angular/experimental";
import { UtilsModule } from "carbon-components-angular/utils";
import { IconModule } from "carbon-components-angular/icon";
var DialogModule = /** @class */ (function () {
    function DialogModule() {
    }
    DialogModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        Dialog,
                        Tooltip,
                        TooltipDefinition,
                        TooltipIcon,
                        OverflowMenu,
                        OverflowMenuPane,
                        OverflowMenuCustomPane,
                        DialogDirective,
                        TooltipDirective,
                        EllipsisTooltip,
                        OverflowMenuDirective,
                        OverflowMenuOption
                    ],
                    exports: [
                        Dialog,
                        Tooltip,
                        TooltipDefinition,
                        TooltipIcon,
                        OverflowMenu,
                        OverflowMenuPane,
                        OverflowMenuCustomPane,
                        DialogDirective,
                        TooltipDirective,
                        EllipsisTooltip,
                        OverflowMenuDirective,
                        OverflowMenuOption
                    ],
                    providers: [DialogService],
                    entryComponents: [
                        Dialog,
                        Tooltip,
                        OverflowMenuPane,
                        OverflowMenuCustomPane
                    ],
                    imports: [
                        CommonModule,
                        I18nModule,
                        PlaceholderModule,
                        ExperimentalModule,
                        UtilsModule,
                        IconModule
                    ]
                },] }
    ];
    return DialogModule;
}());
export { DialogModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvZGlhbG9nLyIsInNvdXJjZXMiOlsiZGlhbG9nLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVO0FBQ1YsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsVUFBVTtBQUNWLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDNUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBRXZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNoRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUM3RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNwRixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDMUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzlELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUU1RDtJQUFBO0lBNkMyQixDQUFDOztnQkE3QzNCLFFBQVEsU0FBQztvQkFDVCxZQUFZLEVBQUU7d0JBQ2IsTUFBTTt3QkFDTixPQUFPO3dCQUNQLGlCQUFpQjt3QkFDakIsV0FBVzt3QkFDWCxZQUFZO3dCQUNaLGdCQUFnQjt3QkFDaEIsc0JBQXNCO3dCQUN0QixlQUFlO3dCQUNmLGdCQUFnQjt3QkFDaEIsZUFBZTt3QkFDZixxQkFBcUI7d0JBQ3JCLGtCQUFrQjtxQkFDbEI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNSLE1BQU07d0JBQ04sT0FBTzt3QkFDUCxpQkFBaUI7d0JBQ2pCLFdBQVc7d0JBQ1gsWUFBWTt3QkFDWixnQkFBZ0I7d0JBQ2hCLHNCQUFzQjt3QkFDdEIsZUFBZTt3QkFDZixnQkFBZ0I7d0JBQ2hCLGVBQWU7d0JBQ2YscUJBQXFCO3dCQUNyQixrQkFBa0I7cUJBQ2xCO29CQUNELFNBQVMsRUFBRSxDQUFFLGFBQWEsQ0FBRTtvQkFDNUIsZUFBZSxFQUFFO3dCQUNoQixNQUFNO3dCQUNOLE9BQU87d0JBQ1AsZ0JBQWdCO3dCQUNoQixzQkFBc0I7cUJBQ3RCO29CQUNELE9BQU8sRUFBRTt3QkFDUixZQUFZO3dCQUNaLFVBQVU7d0JBQ1YsaUJBQWlCO3dCQUNqQixrQkFBa0I7d0JBQ2xCLFdBQVc7d0JBQ1gsVUFBVTtxQkFDVjtpQkFDRDs7SUFDMEIsbUJBQUM7Q0FBQSxBQTdDNUIsSUE2QzRCO1NBQWYsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbIi8vIG1vZHVsZXNcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcblxuLy8gaW1wb3J0c1xuaW1wb3J0IHsgRGlhbG9nU2VydmljZSB9IGZyb20gXCIuL2RpYWxvZy5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBEaWFsb2cgfSBmcm9tIFwiLi9kaWFsb2cuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBEaWFsb2dEaXJlY3RpdmUgfSBmcm9tIFwiLi9kaWFsb2cuZGlyZWN0aXZlXCI7XG5cbmltcG9ydCB7IFRvb2x0aXAgfSBmcm9tIFwiLi90b29sdGlwL3Rvb2x0aXAuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBUb29sdGlwRGVmaW5pdGlvbiB9IGZyb20gXCIuL3Rvb2x0aXAvdG9vbHRpcC1kZWZpbml0aW9uLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgVG9vbHRpcEljb24gfSBmcm9tIFwiLi90b29sdGlwL3Rvb2x0aXAtaWNvbi5jb21wb25lbnRcIjtcbmltcG9ydCB7IFRvb2x0aXBEaXJlY3RpdmUgfSBmcm9tIFwiLi90b29sdGlwL3Rvb2x0aXAuZGlyZWN0aXZlXCI7XG5pbXBvcnQgeyBFbGxpcHNpc1Rvb2x0aXAgfSBmcm9tIFwiLi90b29sdGlwL2VsbGlwc2lzLXRvb2x0aXAuZGlyZWN0aXZlXCI7XG5cbmltcG9ydCB7IE92ZXJmbG93TWVudSB9IGZyb20gXCIuL292ZXJmbG93LW1lbnUvb3ZlcmZsb3ctbWVudS5jb21wb25lbnRcIjtcbmltcG9ydCB7IE92ZXJmbG93TWVudVBhbmUgfSBmcm9tIFwiLi9vdmVyZmxvdy1tZW51L292ZXJmbG93LW1lbnUtcGFuZS5jb21wb25lbnRcIjtcbmltcG9ydCB7IE92ZXJmbG93TWVudUN1c3RvbVBhbmUgfSBmcm9tIFwiLi9vdmVyZmxvdy1tZW51L292ZXJmbG93LW1lbnUtY3VzdG9tLXBhbmUuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBPdmVyZmxvd01lbnVEaXJlY3RpdmUgfSBmcm9tIFwiLi9vdmVyZmxvdy1tZW51L292ZXJmbG93LW1lbnUuZGlyZWN0aXZlXCI7XG5pbXBvcnQgeyBPdmVyZmxvd01lbnVPcHRpb24gfSBmcm9tIFwiLi9vdmVyZmxvdy1tZW51L292ZXJmbG93LW1lbnUtb3B0aW9uLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgSTE4bk1vZHVsZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2kxOG5cIjtcbmltcG9ydCB7IFBsYWNlaG9sZGVyTW9kdWxlIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvcGxhY2Vob2xkZXJcIjtcbmltcG9ydCB7IEV4cGVyaW1lbnRhbE1vZHVsZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2V4cGVyaW1lbnRhbFwiO1xuaW1wb3J0IHsgVXRpbHNNb2R1bGUgfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci91dGlsc1wiO1xuaW1wb3J0IHsgSWNvbk1vZHVsZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2ljb25cIjtcblxuQE5nTW9kdWxlKHtcblx0ZGVjbGFyYXRpb25zOiBbXG5cdFx0RGlhbG9nLFxuXHRcdFRvb2x0aXAsXG5cdFx0VG9vbHRpcERlZmluaXRpb24sXG5cdFx0VG9vbHRpcEljb24sXG5cdFx0T3ZlcmZsb3dNZW51LFxuXHRcdE92ZXJmbG93TWVudVBhbmUsXG5cdFx0T3ZlcmZsb3dNZW51Q3VzdG9tUGFuZSxcblx0XHREaWFsb2dEaXJlY3RpdmUsXG5cdFx0VG9vbHRpcERpcmVjdGl2ZSxcblx0XHRFbGxpcHNpc1Rvb2x0aXAsXG5cdFx0T3ZlcmZsb3dNZW51RGlyZWN0aXZlLFxuXHRcdE92ZXJmbG93TWVudU9wdGlvblxuXHRdLFxuXHRleHBvcnRzOiBbXG5cdFx0RGlhbG9nLFxuXHRcdFRvb2x0aXAsXG5cdFx0VG9vbHRpcERlZmluaXRpb24sXG5cdFx0VG9vbHRpcEljb24sXG5cdFx0T3ZlcmZsb3dNZW51LFxuXHRcdE92ZXJmbG93TWVudVBhbmUsXG5cdFx0T3ZlcmZsb3dNZW51Q3VzdG9tUGFuZSxcblx0XHREaWFsb2dEaXJlY3RpdmUsXG5cdFx0VG9vbHRpcERpcmVjdGl2ZSxcblx0XHRFbGxpcHNpc1Rvb2x0aXAsXG5cdFx0T3ZlcmZsb3dNZW51RGlyZWN0aXZlLFxuXHRcdE92ZXJmbG93TWVudU9wdGlvblxuXHRdLFxuXHRwcm92aWRlcnM6IFsgRGlhbG9nU2VydmljZSBdLFxuXHRlbnRyeUNvbXBvbmVudHM6IFtcblx0XHREaWFsb2csXG5cdFx0VG9vbHRpcCxcblx0XHRPdmVyZmxvd01lbnVQYW5lLFxuXHRcdE92ZXJmbG93TWVudUN1c3RvbVBhbmVcblx0XSxcblx0aW1wb3J0czogW1xuXHRcdENvbW1vbk1vZHVsZSxcblx0XHRJMThuTW9kdWxlLFxuXHRcdFBsYWNlaG9sZGVyTW9kdWxlLFxuXHRcdEV4cGVyaW1lbnRhbE1vZHVsZSxcblx0XHRVdGlsc01vZHVsZSxcblx0XHRJY29uTW9kdWxlXG5cdF1cbn0pXG5leHBvcnQgY2xhc3MgRGlhbG9nTW9kdWxlIHt9XG4iXX0=