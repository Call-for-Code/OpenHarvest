/**
 *
 * carbon-angular v0.0.0 | ellipsis-tooltip.directive.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import * as tslib_1 from "tslib";
import { Directive, HostListener } from "@angular/core";
import { TooltipDirective } from "./tooltip.directive";
import { DialogService } from "../dialog.service";
/**
 * A directive that creates a tooltip `Dialog` for exposing truncated text.
 *
 * class: EllipsisTooltip (extends PopoverDirective)
 *
 * selector: `nEllipsisTooltip`
 *
 * ```html
 * <div class="ellipsis" nEllipsisTooltip>Tooltip for ellipsis because I can and I am really really long</div>
 * ```
 */
var EllipsisTooltip = /** @class */ (function (_super) {
    tslib_1.__extends(EllipsisTooltip, _super);
    function EllipsisTooltip() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * If text is truncated, this appends the text to the dialog as content.
     * @returns null
     * @memberof EllipsisTooltip
     */
    EllipsisTooltip.prototype.updateTooltipContent = function () {
        if (this.elementRef.nativeElement.scrollWidth <= this.elementRef.nativeElement.offsetWidth) {
            this.disabled = true;
            return;
        }
        this.disabled = false;
        this.dialogConfig.content = this.elementRef.nativeElement.innerText;
    };
    EllipsisTooltip.prototype.onClick = function () {
        if (this.trigger === "click") {
            this.updateTooltipContent();
        }
    };
    EllipsisTooltip.prototype.onHover = function () {
        if (this.trigger === "hover" || this.trigger === "mouseenter") {
            this.updateTooltipContent();
        }
    };
    EllipsisTooltip.prototype.onFocus = function () {
        this.updateTooltipContent();
    };
    EllipsisTooltip.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmEllipsisTooltip]",
                    providers: [
                        DialogService
                    ]
                },] }
    ];
    EllipsisTooltip.propDecorators = {
        onClick: [{ type: HostListener, args: ["click",] }],
        onHover: [{ type: HostListener, args: ["mouseenter",] }],
        onFocus: [{ type: HostListener, args: ["focus",] }]
    };
    return EllipsisTooltip;
}(TooltipDirective));
export { EllipsisTooltip };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxsaXBzaXMtdG9vbHRpcC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2RpYWxvZy8iLCJzb3VyY2VzIjpbInRvb2x0aXAvZWxsaXBzaXMtdG9vbHRpcC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTixTQUFTLEVBT1QsWUFBWSxFQUNaLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUlsRDs7Ozs7Ozs7OztHQVVHO0FBQ0g7SUFNcUMsMkNBQWdCO0lBTnJEOztJQXdDQSxDQUFDO0lBakNBOzs7O09BSUc7SUFDSCw4Q0FBb0IsR0FBcEI7UUFDQyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUU7WUFDM0YsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDckIsT0FBTztTQUNQO1FBRUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO0lBQ3JFLENBQUM7SUFHRCxpQ0FBTyxHQURQO1FBRUMsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLE9BQU8sRUFBRTtZQUM3QixJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztTQUM1QjtJQUNGLENBQUM7SUFHRCxpQ0FBTyxHQURQO1FBRUMsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLFlBQVksRUFBRTtZQUM5RCxJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztTQUM1QjtJQUNGLENBQUM7SUFHRCxpQ0FBTyxHQURQO1FBRUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7SUFDN0IsQ0FBQzs7Z0JBdkNELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxTQUFTLEVBQUU7d0JBQ1YsYUFBYTtxQkFDYjtpQkFDRDs7OzBCQWlCQyxZQUFZLFNBQUMsT0FBTzswQkFPcEIsWUFBWSxTQUFDLFlBQVk7MEJBT3pCLFlBQVksU0FBQyxPQUFPOztJQUl0QixzQkFBQztDQUFBLEFBeENELENBTXFDLGdCQUFnQixHQWtDcEQ7U0FsQ1ksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdERpcmVjdGl2ZSxcblx0SW5wdXQsXG5cdFRlbXBsYXRlUmVmLFxuXHRFbGVtZW50UmVmLFxuXHRJbmplY3Rvcixcblx0Q29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuXHRWaWV3Q29udGFpbmVyUmVmLFxuXHRIb3N0TGlzdGVuZXJcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFRvb2x0aXBEaXJlY3RpdmUgfSBmcm9tIFwiLi90b29sdGlwLmRpcmVjdGl2ZVwiO1xuaW1wb3J0IHsgRGlhbG9nU2VydmljZSB9IGZyb20gXCIuLi9kaWFsb2cuc2VydmljZVwiO1xuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gXCIuL3Rvb2x0aXAuY29tcG9uZW50XCI7XG5cblxuLyoqXG4gKiBBIGRpcmVjdGl2ZSB0aGF0IGNyZWF0ZXMgYSB0b29sdGlwIGBEaWFsb2dgIGZvciBleHBvc2luZyB0cnVuY2F0ZWQgdGV4dC5cbiAqXG4gKiBjbGFzczogRWxsaXBzaXNUb29sdGlwIChleHRlbmRzIFBvcG92ZXJEaXJlY3RpdmUpXG4gKlxuICogc2VsZWN0b3I6IGBuRWxsaXBzaXNUb29sdGlwYFxuICpcbiAqIGBgYGh0bWxcbiAqIDxkaXYgY2xhc3M9XCJlbGxpcHNpc1wiIG5FbGxpcHNpc1Rvb2x0aXA+VG9vbHRpcCBmb3IgZWxsaXBzaXMgYmVjYXVzZSBJIGNhbiBhbmQgSSBhbSByZWFsbHkgcmVhbGx5IGxvbmc8L2Rpdj5cbiAqIGBgYFxuICovXG5ARGlyZWN0aXZlKHtcblx0c2VsZWN0b3I6IFwiW2libUVsbGlwc2lzVG9vbHRpcF1cIixcblx0cHJvdmlkZXJzOiBbXG5cdFx0RGlhbG9nU2VydmljZVxuXHRdXG59KVxuZXhwb3J0IGNsYXNzIEVsbGlwc2lzVG9vbHRpcCBleHRlbmRzIFRvb2x0aXBEaXJlY3RpdmUge1xuXHQvKipcblx0ICogSWYgdGV4dCBpcyB0cnVuY2F0ZWQsIHRoaXMgYXBwZW5kcyB0aGUgdGV4dCB0byB0aGUgZGlhbG9nIGFzIGNvbnRlbnQuXG5cdCAqIEByZXR1cm5zIG51bGxcblx0ICogQG1lbWJlcm9mIEVsbGlwc2lzVG9vbHRpcFxuXHQgKi9cblx0dXBkYXRlVG9vbHRpcENvbnRlbnQoKSB7XG5cdFx0aWYgKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnNjcm9sbFdpZHRoIDw9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50Lm9mZnNldFdpZHRoKSB7XG5cdFx0XHR0aGlzLmRpc2FibGVkID0gdHJ1ZTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR0aGlzLmRpc2FibGVkID0gZmFsc2U7XG5cdFx0dGhpcy5kaWFsb2dDb25maWcuY29udGVudCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmlubmVyVGV4dDtcblx0fVxuXG5cdEBIb3N0TGlzdGVuZXIoXCJjbGlja1wiKVxuXHRvbkNsaWNrKCkge1xuXHRcdGlmICh0aGlzLnRyaWdnZXIgPT09IFwiY2xpY2tcIikge1xuXHRcdFx0dGhpcy51cGRhdGVUb29sdGlwQ29udGVudCgpO1xuXHRcdH1cblx0fVxuXG5cdEBIb3N0TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIpXG5cdG9uSG92ZXIoKSB7XG5cdFx0aWYgKHRoaXMudHJpZ2dlciA9PT0gXCJob3ZlclwiIHx8IHRoaXMudHJpZ2dlciA9PT0gXCJtb3VzZWVudGVyXCIpIHtcblx0XHRcdHRoaXMudXBkYXRlVG9vbHRpcENvbnRlbnQoKTtcblx0XHR9XG5cdH1cblxuXHRASG9zdExpc3RlbmVyKFwiZm9jdXNcIilcblx0b25Gb2N1cygpIHtcblx0XHR0aGlzLnVwZGF0ZVRvb2x0aXBDb250ZW50KCk7XG5cdH1cbn1cbiJdfQ==