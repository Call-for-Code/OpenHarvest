/**
 *
 * carbon-angular v0.0.0 | table-toolbar-search.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import * as tslib_1 from "tslib";
import { Search } from "carbon-components-angular/search";
import { Component, HostBinding, Input } from "@angular/core";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
var TableToolbarSearch = /** @class */ (function (_super) {
    tslib_1.__extends(TableToolbarSearch, _super);
    function TableToolbarSearch() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableSearch = true;
        _this.expandable = false;
        return _this;
    }
    Object.defineProperty(TableToolbarSearch.prototype, "persistentClass", {
        get: function () { return !this.expandable; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableToolbarSearch.prototype, "activeClass", {
        get: function () {
            return this.active && (this.value !== null || this.value !== "");
        },
        enumerable: true,
        configurable: true
    });
    TableToolbarSearch.prototype.ngOnInit = function () {
        this.size = "sm";
        if (this.expandable) {
            this.toolbar = true;
        }
    };
    TableToolbarSearch.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            if (_this.value) {
                _this.openSearch();
            }
        });
    };
    TableToolbarSearch.decorators = [
        { type: Component, args: [{
                    selector: "ibm-table-toolbar-search",
                    template: "<div\n\tclass=\"bx--search\"\n\t[ngClass]=\"{\n\t\t'bx--search--sm': size === 'sm',\n\t\t'bx--search--lg': size === 'md',\n\t\t'bx--search--xl': size === 'xl',\n\t\t'bx--search--light': theme === 'light',\n\t\t'bx--skeleton': skeleton,\n\t\t'bx--toolbar-search': toolbar,\n\t\t'bx--toolbar-search--active': toolbar && active\n\t}\"\n\trole=\"search\"\n\t[attr.aria-label]=\"ariaLabel\"\n\ttabindex=\"0\"\n\t(click)=\"openSearch()\">\n\t<label class=\"bx--label\" [for]=\"id\">{{label}}</label>\n\n\t<div *ngIf=\"skeleton; else enableInput\" class=\"bx--search-input\"></div>\n\t<ng-template #enableInput>\n\t\t<input\n\t\t\t#input\n\t\t\tclass=\"bx--search-input\"\n\t\t\t[type]=\"tableSearch || !toolbar ? 'text' : 'search'\"\n\t\t\t[id]=\"id\"\n\t\t\t[value]=\"value\"\n\t\t\t[autocomplete]=\"autocomplete\"\n\t\t\t[placeholder]=\"placeholder\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[required]=\"required\"\n\t\t\t(input)=\"onSearch($event.target.value)\"\n\t\t\t(keyup.enter)=\"onEnter()\"/>\n\t\t<button\n\t\t\t*ngIf=\"!tableSearch && toolbar\"\n\t\t\tclass=\"bx--toolbar-search__btn\"\n\t\t\t(click)=\"openSearch()\"\n\t\t\taria-label=\"Open search\">\n\t\t\t<svg ibmIcon=\"search\" size=\"16\" class=\"bx--search-magnifier\"></svg>\n\t\t</button>\n\t\t<svg\n\t\t\tibmIcon=\"search\"\n\t\t\t*ngIf=\"tableSearch || !toolbar\"\n\t\t\tclass=\"bx--search-magnifier\"\n\t\t\tsize=\"16\">\n\t\t</svg>\n\t</ng-template>\n\n\t<button\n\t\t*ngIf=\"tableSearch || !toolbar\"\n\t\tclass=\"bx--search-close\"\n\t\t[ngClass]=\"{\n\t\t\t'bx--search-close--hidden': !value || value.length === 0\n\t\t}\"\n\t\t[title]=\"clearButtonTitle\"\n\t\t(click)=\"clearSearch()\">\n\t\t<span class=\"bx--visually-hidden\">{{ clearButtonTitle }}</span>\n\t\t<svg ibmIcon=\"close\" size=\"16\"></svg>\n\t</button>\n</div>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: TableToolbarSearch,
                            multi: true
                        }
                    ]
                }] }
    ];
    TableToolbarSearch.propDecorators = {
        expandable: [{ type: HostBinding, args: ["class.bx--toolbar-search-container-expandable",] }, { type: Input }],
        persistentClass: [{ type: HostBinding, args: ["class.bx--toolbar-search-container-persistent",] }],
        activeClass: [{ type: HostBinding, args: ["class.bx--toolbar-search-container-active",] }]
    };
    return TableToolbarSearch;
}(Search));
export { TableToolbarSearch };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtdG9vbGJhci1zZWFyY2guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci90YWJsZS8iLCJzb3VyY2VzIjpbInRvb2xiYXIvdGFibGUtdG9vbGJhci1zZWFyY2guY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDMUQsT0FBTyxFQUNOLFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxFQUdMLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRW5EO0lBV3dDLDhDQUFNO0lBWDlDO1FBQUEscUVBb0NDO1FBeEJBLGlCQUFXLEdBQUcsSUFBSSxDQUFDO1FBRW9ELGdCQUFVLEdBQUcsS0FBSyxDQUFDOztJQXNCM0YsQ0FBQztJQXBCQSxzQkFBa0UsK0NBQWU7YUFBakYsY0FBc0YsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDOzs7T0FBQTtJQUVoSCxzQkFBOEQsMkNBQVc7YUFBekU7WUFDQyxPQUFPLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ2xFLENBQUM7OztPQUFBO0lBRUQscUNBQVEsR0FBUjtRQUNDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNwQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztTQUNwQjtJQUNGLENBQUM7SUFFRCw0Q0FBZSxHQUFmO1FBQUEsaUJBTUM7UUFMQSxVQUFVLENBQUM7WUFDVixJQUFJLEtBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQ2YsS0FBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO2FBQ2xCO1FBQ0YsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDOztnQkFuQ0QsU0FBUyxTQUFDO29CQUNWLFFBQVEsRUFBRSwwQkFBMEI7b0JBQ3BDLG94REFBaUQ7b0JBQ2pELFNBQVMsRUFBRTt3QkFDVjs0QkFDQyxPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixXQUFXLEVBQUUsa0JBQWtCOzRCQUMvQixLQUFLLEVBQUUsSUFBSTt5QkFDWDtxQkFDRDtpQkFDRDs7OzZCQUlDLFdBQVcsU0FBQywrQ0FBK0MsY0FBRyxLQUFLO2tDQUVuRSxXQUFXLFNBQUMsK0NBQStDOzhCQUUzRCxXQUFXLFNBQUMsMkNBQTJDOztJQWtCekQseUJBQUM7Q0FBQSxBQXBDRCxDQVd3QyxNQUFNLEdBeUI3QztTQXpCWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZWFyY2ggfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9zZWFyY2hcIjtcbmltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0SG9zdEJpbmRpbmcsXG5cdElucHV0LFxuXHRPbkluaXQsXG5cdEFmdGVyVmlld0luaXRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tdGFibGUtdG9vbGJhci1zZWFyY2hcIixcblx0dGVtcGxhdGVVcmw6IFwiLi4vLi4vc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuaHRtbFwiLFxuXHRwcm92aWRlcnM6IFtcblx0XHR7XG5cdFx0XHRwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcblx0XHRcdHVzZUV4aXN0aW5nOiBUYWJsZVRvb2xiYXJTZWFyY2gsXG5cdFx0XHRtdWx0aTogdHJ1ZVxuXHRcdH1cblx0XVxufSlcbmV4cG9ydCBjbGFzcyBUYWJsZVRvb2xiYXJTZWFyY2ggZXh0ZW5kcyBTZWFyY2ggaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuXHR0YWJsZVNlYXJjaCA9IHRydWU7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXRvb2xiYXItc2VhcmNoLWNvbnRhaW5lci1leHBhbmRhYmxlXCIpIEBJbnB1dCgpIGV4cGFuZGFibGUgPSBmYWxzZTtcblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdG9vbGJhci1zZWFyY2gtY29udGFpbmVyLXBlcnNpc3RlbnRcIikgZ2V0IHBlcnNpc3RlbnRDbGFzcygpIHsgcmV0dXJuICF0aGlzLmV4cGFuZGFibGU7IH1cblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdG9vbGJhci1zZWFyY2gtY29udGFpbmVyLWFjdGl2ZVwiKSBnZXQgYWN0aXZlQ2xhc3MoKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWN0aXZlICYmICh0aGlzLnZhbHVlICE9PSBudWxsIHx8IHRoaXMudmFsdWUgIT09IFwiXCIpO1xuXHR9XG5cblx0bmdPbkluaXQoKSB7XG5cdFx0dGhpcy5zaXplID0gXCJzbVwiO1xuXHRcdGlmICh0aGlzLmV4cGFuZGFibGUpIHtcblx0XHRcdHRoaXMudG9vbGJhciA9IHRydWU7XG5cdFx0fVxuXHR9XG5cblx0bmdBZnRlclZpZXdJbml0KCkge1xuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0aWYgKHRoaXMudmFsdWUpIHtcblx0XHRcdFx0dGhpcy5vcGVuU2VhcmNoKCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH1cbn1cbiJdfQ==