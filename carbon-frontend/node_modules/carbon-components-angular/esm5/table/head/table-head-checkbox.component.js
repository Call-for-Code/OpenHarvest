/**
 *
 * carbon-angular v0.0.0 | table-head-checkbox.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, Output, HostBinding, EventEmitter } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
var TableHeadCheckbox = /** @class */ (function () {
    function TableHeadCheckbox(i18n) {
        this.i18n = i18n;
        /**
         * Size of the table rows.
         */
        this.size = "md";
        this.checked = false;
        this.indeterminate = false;
        this.skeleton = false;
        this.name = "select-all-" + TableHeadCheckbox.tableSelectAllCount++;
        this.change = new EventEmitter();
        this.hostClass = true;
        this._ariaLabel = this.i18n.getOverridable("TABLE.CHECKBOX_HEADER");
    }
    Object.defineProperty(TableHeadCheckbox.prototype, "ariaLabel", {
        get: function () {
            return this._ariaLabel.value;
        },
        set: function (value) {
            this._ariaLabel.override(value);
        },
        enumerable: true,
        configurable: true
    });
    TableHeadCheckbox.prototype.getAriaLabel = function () {
        return this._ariaLabel.subject;
    };
    TableHeadCheckbox.tableSelectAllCount = 0;
    TableHeadCheckbox.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: "[ibmTableHeadCheckbox]",
                    template: "\n\t\t<ibm-checkbox\n\t\t\t*ngIf=\"!skeleton\"\n\t\t\tinline=\"true\"\n\t\t\t[size]=\"(size !== 'sm' ? 'md' : 'sm')\"\n\t\t\t[name]=\"name\"\n\t\t\t[checked]=\"checked\"\n\t\t\t[indeterminate]=\"indeterminate\"\n\t\t\t(checkedChange)=\"change.emit()\"\n\t\t\t[aria-label]=\"getAriaLabel() | async\">\n\t\t</ibm-checkbox>\n\t",
                    styles: ["\n        :host { width: 10px; }\n    "]
                }] }
    ];
    /** @nocollapse */
    TableHeadCheckbox.ctorParameters = function () { return [
        { type: I18n }
    ]; };
    TableHeadCheckbox.propDecorators = {
        size: [{ type: Input }],
        checked: [{ type: Input }],
        indeterminate: [{ type: Input }],
        skeleton: [{ type: Input }],
        name: [{ type: Input }],
        ariaLabel: [{ type: Input }],
        change: [{ type: Output }],
        hostClass: [{ type: HostBinding, args: ["class.bx--table-column-checkbox",] }]
    };
    return TableHeadCheckbox;
}());
export { TableHeadCheckbox };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtaGVhZC1jaGVja2JveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3RhYmxlLyIsInNvdXJjZXMiOlsiaGVhZC90YWJsZS1oZWFkLWNoZWNrYm94LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxNQUFNLEVBQ04sV0FBVyxFQUNYLFlBQVksRUFDWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsSUFBSSxFQUFlLE1BQU0sZ0NBQWdDLENBQUM7QUFJbkU7SUFpREMsMkJBQXNCLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBNUJoQzs7V0FFRztRQUNNLFNBQUksR0FBaUIsSUFBSSxDQUFDO1FBRTFCLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFFaEIsa0JBQWEsR0FBRyxLQUFLLENBQUM7UUFFdEIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQixTQUFJLEdBQUcsZ0JBQWMsaUJBQWlCLENBQUMsbUJBQW1CLEVBQUksQ0FBQztRQVc5RCxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUVJLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFFdkQsZUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLHVCQUF1QixDQUFDLENBQUM7SUFFckMsQ0FBQztJQWZyQyxzQkFDSSx3Q0FBUzthQUliO1lBQ0MsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQztRQUM5QixDQUFDO2FBUEQsVUFDYyxLQUFrQztZQUMvQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNqQyxDQUFDOzs7T0FBQTtJQWNELHdDQUFZLEdBQVo7UUFDQyxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO0lBQ2hDLENBQUM7SUFqQ2MscUNBQW1CLEdBQUcsQ0FBQyxDQUFDOztnQkFwQnZDLFNBQVMsU0FBQztvQkFDViwrQ0FBK0M7b0JBQy9DLFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFFBQVEsRUFBRSxzVUFXVDs2QkFDUSx3Q0FFTDtpQkFDSjs7OztnQkF0QlEsSUFBSTs7O3VCQTRCWCxLQUFLOzBCQUVMLEtBQUs7Z0NBRUwsS0FBSzsyQkFFTCxLQUFLO3VCQUVMLEtBQUs7NEJBRUwsS0FBSzt5QkFTTCxNQUFNOzRCQUVOLFdBQVcsU0FBQyxpQ0FBaUM7O0lBUy9DLHdCQUFDO0NBQUEsQUF0REQsSUFzREM7U0FuQ1ksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRJbnB1dCxcblx0T3V0cHV0LFxuXHRIb3N0QmluZGluZyxcblx0RXZlbnRFbWl0dGVyXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBJMThuLCBPdmVycmlkYWJsZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2kxOG5cIjtcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgVGFibGVSb3dTaXplIH0gZnJvbSBcIi4uL3RhYmxlLnR5cGVzXCI7XG5cbkBDb21wb25lbnQoe1xuXHQvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IGNvbXBvbmVudC1zZWxlY3RvclxuXHRzZWxlY3RvcjogXCJbaWJtVGFibGVIZWFkQ2hlY2tib3hdXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PGlibS1jaGVja2JveFxuXHRcdFx0Km5nSWY9XCIhc2tlbGV0b25cIlxuXHRcdFx0aW5saW5lPVwidHJ1ZVwiXG5cdFx0XHRbc2l6ZV09XCIoc2l6ZSAhPT0gJ3NtJyA/ICdtZCcgOiAnc20nKVwiXG5cdFx0XHRbbmFtZV09XCJuYW1lXCJcblx0XHRcdFtjaGVja2VkXT1cImNoZWNrZWRcIlxuXHRcdFx0W2luZGV0ZXJtaW5hdGVdPVwiaW5kZXRlcm1pbmF0ZVwiXG5cdFx0XHQoY2hlY2tlZENoYW5nZSk9XCJjaGFuZ2UuZW1pdCgpXCJcblx0XHRcdFthcmlhLWxhYmVsXT1cImdldEFyaWFMYWJlbCgpIHwgYXN5bmNcIj5cblx0XHQ8L2libS1jaGVja2JveD5cblx0YCxcblx0c3R5bGVzOiBbYFxuICAgICAgICA6aG9zdCB7IHdpZHRoOiAxMHB4OyB9XG4gICAgYF1cbn0pXG5leHBvcnQgY2xhc3MgVGFibGVIZWFkQ2hlY2tib3gge1xuXHRwcml2YXRlIHN0YXRpYyB0YWJsZVNlbGVjdEFsbENvdW50ID0gMDtcblx0LyoqXG5cdCAqIFNpemUgb2YgdGhlIHRhYmxlIHJvd3MuXG5cdCAqL1xuXHRASW5wdXQoKSBzaXplOiBUYWJsZVJvd1NpemUgPSBcIm1kXCI7XG5cblx0QElucHV0KCkgY2hlY2tlZCA9IGZhbHNlO1xuXG5cdEBJbnB1dCgpIGluZGV0ZXJtaW5hdGUgPSBmYWxzZTtcblxuXHRASW5wdXQoKSBza2VsZXRvbiA9IGZhbHNlO1xuXG5cdEBJbnB1dCgpIG5hbWUgPSBgc2VsZWN0LWFsbC0ke1RhYmxlSGVhZENoZWNrYm94LnRhYmxlU2VsZWN0QWxsQ291bnQrK31gO1xuXG5cdEBJbnB1dCgpXG5cdHNldCBhcmlhTGFiZWwodmFsdWU6IHN0cmluZyB8IE9ic2VydmFibGU8c3RyaW5nPikge1xuXHRcdHRoaXMuX2FyaWFMYWJlbC5vdmVycmlkZSh2YWx1ZSk7XG5cdH1cblxuXHRnZXQgYXJpYUxhYmVsKCkge1xuXHRcdHJldHVybiB0aGlzLl9hcmlhTGFiZWwudmFsdWU7XG5cdH1cblxuXHRAT3V0cHV0KCkgY2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10YWJsZS1jb2x1bW4tY2hlY2tib3hcIikgaG9zdENsYXNzID0gdHJ1ZTtcblxuXHRwcm90ZWN0ZWQgX2FyaWFMYWJlbCA9IHRoaXMuaTE4bi5nZXRPdmVycmlkYWJsZShcIlRBQkxFLkNIRUNLQk9YX0hFQURFUlwiKTtcblxuXHRjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaTE4bjogSTE4bikgeyB9XG5cblx0Z2V0QXJpYUxhYmVsKCk6IE9ic2VydmFibGU8c3RyaW5nPiB7XG5cdFx0cmV0dXJuIHRoaXMuX2FyaWFMYWJlbC5zdWJqZWN0O1xuXHR9XG59XG4iXX0=