/**
 *
 * carbon-angular v0.0.0 | table.directive.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Directive, HostBinding, Input } from "@angular/core";
var TableDirective = /** @class */ (function () {
    function TableDirective() {
        this.sortable = true;
        this.noBorder = true;
        this.striped = false;
        this.skeleton = false;
        /**
         * Size of the table rows.
         */
        this.size = "md";
        this.tableClass = true;
    }
    Object.defineProperty(TableDirective.prototype, "compactClass", {
        get: function () {
            return this.size === "sm";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableDirective.prototype, "tallClass", {
        get: function () {
            return this.size === "lg";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableDirective.prototype, "shortClass", {
        get: function () {
            return this.size === "sh";
        },
        enumerable: true,
        configurable: true
    });
    TableDirective.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmTable]"
                },] }
    ];
    TableDirective.propDecorators = {
        sortable: [{ type: Input }, { type: HostBinding, args: ["class.bx--data-table--sort",] }],
        noBorder: [{ type: Input }, { type: HostBinding, args: ["class.bx--data-table--no-border",] }],
        striped: [{ type: Input }, { type: HostBinding, args: ["class.bx--data-table--zebra",] }],
        skeleton: [{ type: Input }, { type: HostBinding, args: ["class.bx--skeleton",] }],
        size: [{ type: Input }],
        tableClass: [{ type: HostBinding, args: ["class.bx--data-table",] }],
        compactClass: [{ type: HostBinding, args: ["class.bx--data-table--compact",] }],
        tallClass: [{ type: HostBinding, args: ["class.bx--data-table--tall",] }],
        shortClass: [{ type: HostBinding, args: ["class.bx--data-table--short",] }]
    };
    return TableDirective;
}());
export { TableDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci90YWJsZS8iLCJzb3VyY2VzIjpbInRhYmxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHOUQ7SUFBQTtRQUlxRCxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBRVgsYUFBUSxHQUFHLElBQUksQ0FBQztRQUVwQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBRXpCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFN0Q7O1dBRUc7UUFDTSxTQUFJLEdBQWlCLElBQUksQ0FBQztRQUVFLGVBQVUsR0FBRyxJQUFJLENBQUM7SUFheEQsQ0FBQztJQVhBLHNCQUFrRCx3Q0FBWTthQUE5RDtZQUNDLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUM7UUFDM0IsQ0FBQzs7O09BQUE7SUFFRCxzQkFBK0MscUNBQVM7YUFBeEQ7WUFDQyxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO1FBQzNCLENBQUM7OztPQUFBO0lBRUQsc0JBQWdELHNDQUFVO2FBQTFEO1lBQ0MsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztRQUMzQixDQUFDOzs7T0FBQTs7Z0JBN0JELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsWUFBWTtpQkFDdEI7OzsyQkFFQyxLQUFLLFlBQUksV0FBVyxTQUFDLDRCQUE0QjsyQkFFakQsS0FBSyxZQUFJLFdBQVcsU0FBQyxpQ0FBaUM7MEJBRXRELEtBQUssWUFBSSxXQUFXLFNBQUMsNkJBQTZCOzJCQUVsRCxLQUFLLFlBQUksV0FBVyxTQUFDLG9CQUFvQjt1QkFLekMsS0FBSzs2QkFFTCxXQUFXLFNBQUMsc0JBQXNCOytCQUVsQyxXQUFXLFNBQUMsK0JBQStCOzRCQUkzQyxXQUFXLFNBQUMsNEJBQTRCOzZCQUl4QyxXQUFXLFNBQUMsNkJBQTZCOztJQUczQyxxQkFBQztDQUFBLEFBOUJELElBOEJDO1NBM0JZLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBUYWJsZVJvd1NpemUgfSBmcm9tIFwiLi90YWJsZS50eXBlc1wiO1xuXG5ARGlyZWN0aXZlKHtcblx0c2VsZWN0b3I6IFwiW2libVRhYmxlXVwiXG59KVxuZXhwb3J0IGNsYXNzIFRhYmxlRGlyZWN0aXZlIHtcblx0QElucHV0KCkgQEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWRhdGEtdGFibGUtLXNvcnRcIikgc29ydGFibGUgPSB0cnVlO1xuXG5cdEBJbnB1dCgpIEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1kYXRhLXRhYmxlLS1uby1ib3JkZXJcIikgbm9Cb3JkZXIgPSB0cnVlO1xuXG5cdEBJbnB1dCgpIEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1kYXRhLXRhYmxlLS16ZWJyYVwiKSBzdHJpcGVkID0gZmFsc2U7XG5cblx0QElucHV0KCkgQEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXNrZWxldG9uXCIpIHNrZWxldG9uID0gZmFsc2U7XG5cblx0LyoqXG5cdCAqIFNpemUgb2YgdGhlIHRhYmxlIHJvd3MuXG5cdCAqL1xuXHRASW5wdXQoKSBzaXplOiBUYWJsZVJvd1NpemUgPSBcIm1kXCI7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWRhdGEtdGFibGVcIikgdGFibGVDbGFzcyA9IHRydWU7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWRhdGEtdGFibGUtLWNvbXBhY3RcIikgZ2V0IGNvbXBhY3RDbGFzcygpIHtcblx0XHRyZXR1cm4gdGhpcy5zaXplID09PSBcInNtXCI7XG5cdH1cblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tZGF0YS10YWJsZS0tdGFsbFwiKSBnZXQgdGFsbENsYXNzKCkge1xuXHRcdHJldHVybiB0aGlzLnNpemUgPT09IFwibGdcIjtcblx0fVxuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1kYXRhLXRhYmxlLS1zaG9ydFwiKSBnZXQgc2hvcnRDbGFzcygpIHtcblx0XHRyZXR1cm4gdGhpcy5zaXplID09PSBcInNoXCI7XG5cdH1cbn1cbiJdfQ==