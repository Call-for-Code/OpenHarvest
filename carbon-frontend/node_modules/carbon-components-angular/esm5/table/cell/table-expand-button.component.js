/**
 *
 * carbon-angular v0.0.0 | table-expand-button.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, Output, EventEmitter, HostBinding } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
var TableExpandButton = /** @class */ (function () {
    function TableExpandButton(i18n) {
        this.i18n = i18n;
        /**
         * Set to true to indicate the row has expanded
         */
        this.expanded = false;
        /**
         * Set to true to indicate the row can be expanded.
         * Defaults to false to allow for correct column alignment
         */
        this.expandable = false;
        this.skeleton = false;
        this.expandClass = true;
        this.expandRow = new EventEmitter();
        this._ariaLabel = this.i18n.getOverridable("TABLE.EXPAND_BUTTON");
    }
    Object.defineProperty(TableExpandButton.prototype, "ariaLabel", {
        get: function () {
            return this._ariaLabel.value;
        },
        set: function (value) {
            this._ariaLabel.override(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableExpandButton.prototype, "previousValue", {
        get: function () {
            return this.expanded ? "collapsed" : null;
        },
        enumerable: true,
        configurable: true
    });
    TableExpandButton.prototype.getAriaLabel = function () {
        return this._ariaLabel.subject;
    };
    TableExpandButton.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: "[ibmTableExpandButton]",
                    template: "\n\t\t<button\n\t\t\t*ngIf=\"expandable\"\n\t\t\tclass=\"bx--table-expand__button\"\n\t\t\t[attr.aria-label]=\"getAriaLabel() | async\"\n\t\t\t(click)=\"expandRow.emit()\">\n\t\t\t<svg ibmIcon=\"chevron--right\" size=\"16\" class=\"bx--table-expand__svg\"></svg>\n\t\t</button>\n\t"
                }] }
    ];
    /** @nocollapse */
    TableExpandButton.ctorParameters = function () { return [
        { type: I18n }
    ]; };
    TableExpandButton.propDecorators = {
        expanded: [{ type: Input }],
        expandable: [{ type: Input }],
        ariaLabel: [{ type: Input }],
        skeleton: [{ type: Input }],
        expandClass: [{ type: HostBinding, args: ["class.bx--table-expand",] }],
        previousValue: [{ type: HostBinding, args: ["attr.data-previous-value",] }],
        expandRow: [{ type: Output }]
    };
    return TableExpandButton;
}());
export { TableExpandButton };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtZXhwYW5kLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3RhYmxlLyIsInNvdXJjZXMiOlsiY2VsbC90YWJsZS1leHBhbmQtYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxNQUFNLEVBQ04sWUFBWSxFQUNaLFdBQVcsRUFDWCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsSUFBSSxFQUFlLE1BQU0sZ0NBQWdDLENBQUM7QUFHbkU7SUE2Q0MsMkJBQXNCLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBL0JoQzs7V0FFRztRQUNNLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDMUI7OztXQUdHO1FBQ00sZUFBVSxHQUFHLEtBQUssQ0FBQztRQVduQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWEsZ0JBQVcsR0FBRyxJQUFJLENBQUM7UUFNaEQsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFFckMsZUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFFbkMsQ0FBQztJQXJCckMsc0JBQ0ksd0NBQVM7YUFJYjtZQUNDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUM7UUFDOUIsQ0FBQzthQVBELFVBQ2MsS0FBa0M7WUFDL0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDakMsQ0FBQzs7O09BQUE7SUFVRCxzQkFBNkMsNENBQWE7YUFBMUQ7WUFDQyxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzNDLENBQUM7OztPQUFBO0lBUUQsd0NBQVksR0FBWjtRQUNDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUM7SUFDaEMsQ0FBQzs7Z0JBakRELFNBQVMsU0FBQztvQkFDViwrQ0FBK0M7b0JBQy9DLFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFFBQVEsRUFBRSwyUkFRVDtpQkFDRDs7OztnQkFmUSxJQUFJOzs7MkJBb0JYLEtBQUs7NkJBS0wsS0FBSzs0QkFFTCxLQUFLOzJCQVNMLEtBQUs7OEJBRUwsV0FBVyxTQUFDLHdCQUF3QjtnQ0FFcEMsV0FBVyxTQUFDLDBCQUEwQjs0QkFJdEMsTUFBTTs7SUFTUix3QkFBQztDQUFBLEFBbERELElBa0RDO1NBckNZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0SW5wdXQsXG5cdE91dHB1dCxcblx0RXZlbnRFbWl0dGVyLFxuXHRIb3N0QmluZGluZ1xufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgSTE4biwgT3ZlcnJpZGFibGUgfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pMThuXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anNcIjtcblxuQENvbXBvbmVudCh7XG5cdC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogY29tcG9uZW50LXNlbGVjdG9yXG5cdHNlbGVjdG9yOiBcIltpYm1UYWJsZUV4cGFuZEJ1dHRvbl1cIixcblx0dGVtcGxhdGU6IGBcblx0XHQ8YnV0dG9uXG5cdFx0XHQqbmdJZj1cImV4cGFuZGFibGVcIlxuXHRcdFx0Y2xhc3M9XCJieC0tdGFibGUtZXhwYW5kX19idXR0b25cIlxuXHRcdFx0W2F0dHIuYXJpYS1sYWJlbF09XCJnZXRBcmlhTGFiZWwoKSB8IGFzeW5jXCJcblx0XHRcdChjbGljayk9XCJleHBhbmRSb3cuZW1pdCgpXCI+XG5cdFx0XHQ8c3ZnIGlibUljb249XCJjaGV2cm9uLS1yaWdodFwiIHNpemU9XCIxNlwiIGNsYXNzPVwiYngtLXRhYmxlLWV4cGFuZF9fc3ZnXCI+PC9zdmc+XG5cdFx0PC9idXR0b24+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgVGFibGVFeHBhbmRCdXR0b24ge1xuXHQvKipcblx0ICogU2V0IHRvIHRydWUgdG8gaW5kaWNhdGUgdGhlIHJvdyBoYXMgZXhwYW5kZWRcblx0ICovXG5cdEBJbnB1dCgpIGV4cGFuZGVkID0gZmFsc2U7XG5cdC8qKlxuXHQgKiBTZXQgdG8gdHJ1ZSB0byBpbmRpY2F0ZSB0aGUgcm93IGNhbiBiZSBleHBhbmRlZC5cblx0ICogRGVmYXVsdHMgdG8gZmFsc2UgdG8gYWxsb3cgZm9yIGNvcnJlY3QgY29sdW1uIGFsaWdubWVudFxuXHQgKi9cblx0QElucHV0KCkgZXhwYW5kYWJsZSA9IGZhbHNlO1xuXG5cdEBJbnB1dCgpXG5cdHNldCBhcmlhTGFiZWwodmFsdWU6IHN0cmluZyB8IE9ic2VydmFibGU8c3RyaW5nPikge1xuXHRcdHRoaXMuX2FyaWFMYWJlbC5vdmVycmlkZSh2YWx1ZSk7XG5cdH1cblxuXHRnZXQgYXJpYUxhYmVsKCkge1xuXHRcdHJldHVybiB0aGlzLl9hcmlhTGFiZWwudmFsdWU7XG5cdH1cblxuXHRASW5wdXQoKSBza2VsZXRvbiA9IGZhbHNlO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10YWJsZS1leHBhbmRcIikgZXhwYW5kQ2xhc3MgPSB0cnVlO1xuXG5cdEBIb3N0QmluZGluZyhcImF0dHIuZGF0YS1wcmV2aW91cy12YWx1ZVwiKSBnZXQgcHJldmlvdXNWYWx1ZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5leHBhbmRlZCA/IFwiY29sbGFwc2VkXCIgOiBudWxsO1xuXHR9XG5cblx0QE91dHB1dCgpIGV4cGFuZFJvdyA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcblxuXHRwcm90ZWN0ZWQgX2FyaWFMYWJlbCA9IHRoaXMuaTE4bi5nZXRPdmVycmlkYWJsZShcIlRBQkxFLkVYUEFORF9CVVRUT05cIik7XG5cblx0Y29uc3RydWN0b3IocHJvdGVjdGVkIGkxOG46IEkxOG4pIHsgfVxuXG5cdGdldEFyaWFMYWJlbCgpOiBPYnNlcnZhYmxlPHN0cmluZz4ge1xuXHRcdHJldHVybiB0aGlzLl9hcmlhTGFiZWwuc3ViamVjdDtcblx0fVxufVxuIl19