/**
 *
 * carbon-angular v0.0.0 | expanded-row-hover.directive.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Directive, HostListener } from "@angular/core";
var ExpandedRowHover = /** @class */ (function () {
    function ExpandedRowHover() {
    }
    ExpandedRowHover.prototype.addHoverClass = function (event) {
        event.target.previousElementSibling.classList.add("bx--expandable-row--hover");
    };
    ExpandedRowHover.prototype.removeHoverClass = function (event) {
        event.target.previousElementSibling.classList.remove("bx--expandable-row--hover");
    };
    ExpandedRowHover.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmExpandedRowHover]"
                },] }
    ];
    ExpandedRowHover.propDecorators = {
        addHoverClass: [{ type: HostListener, args: ["mouseenter", ["$event"],] }],
        removeHoverClass: [{ type: HostListener, args: ["mouseleave", ["$event"],] }]
    };
    return ExpandedRowHover;
}());
export { ExpandedRowHover };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5kZWQtcm93LWhvdmVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvdGFibGUvIiwic291cmNlcyI6WyJleHBhbmRlZC1yb3ctaG92ZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsWUFBWSxFQUNaLE1BQU0sZUFBZSxDQUFDO0FBRXZCO0lBQUE7SUFhQSxDQUFDO0lBUkEsd0NBQWEsR0FEYixVQUNjLEtBQUs7UUFDbEIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDLENBQUM7SUFDaEYsQ0FBQztJQUdELDJDQUFnQixHQURoQixVQUNpQixLQUFLO1FBQ3JCLEtBQUssQ0FBQyxNQUFNLENBQUMsc0JBQXNCLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0lBQ25GLENBQUM7O2dCQVpELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsdUJBQXVCO2lCQUNqQzs7O2dDQUVDLFlBQVksU0FBQyxZQUFZLEVBQUUsQ0FBQyxRQUFRLENBQUM7bUNBS3JDLFlBQVksU0FBQyxZQUFZLEVBQUUsQ0FBQyxRQUFRLENBQUM7O0lBSXZDLHVCQUFDO0NBQUEsQUFiRCxJQWFDO1NBVlksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0RGlyZWN0aXZlLFxuXHRIb3N0TGlzdGVuZXJcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiBcIltpYm1FeHBhbmRlZFJvd0hvdmVyXVwiXG59KVxuZXhwb3J0IGNsYXNzIEV4cGFuZGVkUm93SG92ZXIge1xuXHRASG9zdExpc3RlbmVyKFwibW91c2VlbnRlclwiLCBbXCIkZXZlbnRcIl0pXG5cdGFkZEhvdmVyQ2xhc3MoZXZlbnQpIHtcblx0XHRldmVudC50YXJnZXQucHJldmlvdXNFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKFwiYngtLWV4cGFuZGFibGUtcm93LS1ob3ZlclwiKTtcblx0fVxuXG5cdEBIb3N0TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsIFtcIiRldmVudFwiXSlcblx0cmVtb3ZlSG92ZXJDbGFzcyhldmVudCkge1xuXHRcdGV2ZW50LnRhcmdldC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5yZW1vdmUoXCJieC0tZXhwYW5kYWJsZS1yb3ctLWhvdmVyXCIpO1xuXHR9XG59XG4iXX0=