/**
 *
 * carbon-angular v0.0.0 | accordion-item.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, HostBinding, Output, TemplateRef, EventEmitter } from "@angular/core";
var AccordionItem = /** @class */ (function () {
    function AccordionItem() {
        this.context = null;
        this.id = "accordion-item-" + AccordionItem.accordionItemCount;
        this.skeleton = false;
        this.selected = new EventEmitter();
        this.itemClass = true;
        this.expanded = false;
        this.itemType = "list-item";
        this.role = "heading";
        this.ariaLevel = 3;
        AccordionItem.accordionItemCount++;
    }
    AccordionItem.prototype.toggleExpanded = function () {
        if (!this.skeleton) {
            this.expanded = !this.expanded;
            this.selected.emit({ id: this.id, expanded: this.expanded });
        }
    };
    AccordionItem.prototype.isTemplate = function (value) {
        return value instanceof TemplateRef;
    };
    AccordionItem.accordionItemCount = 0;
    AccordionItem.decorators = [
        { type: Component, args: [{
                    selector: "ibm-accordion-item",
                    template: "\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\t[attr.aria-expanded]=\"expanded\"\n\t\t\t[attr.aria-controls]=\"id\"\n\t\t\t(click)=\"toggleExpanded()\"\n\t\t\tclass=\"bx--accordion__heading\">\n\t\t\t<svg ibmIcon=\"chevron--right\" size=\"16\" class=\"bx--accordion__arrow\"></svg>\n\t\t\t<p *ngIf=\"!isTemplate(title)\"\n\t\t\t\tclass=\"bx--accordion__title\"\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t'bx--skeleton__text': skeleton\n\t\t\t\t}\">\n\t\t\t\t{{!skeleton ? title : null}}\n\t\t\t</p>\n\t\t\t<ng-template\n\t\t\t\t*ngIf=\"isTemplate(title)\"\n\t\t\t\t[ngTemplateOutlet]=\"title\"\n\t\t\t\t[ngTemplateOutletContext]=\"context\">\n\t\t\t</ng-template>\n\t\t</button>\n\t\t<div [id]=\"id\" class=\"bx--accordion__content\">\n\t\t\t<ng-content *ngIf=\"!skeleton; else skeletonTemplate\"></ng-content>\n\t\t\t<ng-template #skeletonTemplate>\n\t\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 90%\"></p>\n\t\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 80%\"></p>\n\t\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 95%\"></p>\n\t\t\t</ng-template>\n\t\t</div>\n\t"
                }] }
    ];
    /** @nocollapse */
    AccordionItem.ctorParameters = function () { return []; };
    AccordionItem.propDecorators = {
        title: [{ type: Input }],
        context: [{ type: Input }],
        id: [{ type: Input }],
        skeleton: [{ type: Input }],
        selected: [{ type: Output }],
        itemClass: [{ type: HostBinding, args: ["class.bx--accordion__item",] }],
        expanded: [{ type: HostBinding, args: ["class.bx--accordion__item--active",] }, { type: Input }],
        itemType: [{ type: HostBinding, args: ["style.display",] }],
        role: [{ type: HostBinding, args: ["attr.role",] }],
        ariaLevel: [{ type: HostBinding, args: ["attr.aria-level",] }, { type: Input }]
    };
    return AccordionItem;
}());
export { AccordionItem };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9hY2NvcmRpb24vIiwic291cmNlcyI6WyJhY2NvcmRpb24taXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxLQUFLLEVBQ0wsV0FBVyxFQUNYLE1BQU0sRUFDTixXQUFXLEVBQ1gsWUFBWSxFQUNaLE1BQU0sZUFBZSxDQUFDO0FBRXZCO0lBK0NDO1FBWFMsWUFBTyxHQUFrQixJQUFJLENBQUM7UUFDOUIsT0FBRSxHQUFHLG9CQUFrQixhQUFhLENBQUMsa0JBQW9CLENBQUM7UUFDMUQsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNoQixhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUVFLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFDQSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQzlDLGFBQVEsR0FBRyxXQUFXLENBQUM7UUFDM0IsU0FBSSxHQUFHLFNBQVMsQ0FBQztRQUNGLGNBQVMsR0FBRyxDQUFDLENBQUM7UUFHdEQsYUFBYSxDQUFDLGtCQUFrQixFQUFFLENBQUM7SUFDcEMsQ0FBQztJQUVNLHNDQUFjLEdBQXJCO1FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUM7U0FDM0Q7SUFDRixDQUFDO0lBRU0sa0NBQVUsR0FBakIsVUFBa0IsS0FBSztRQUN0QixPQUFPLEtBQUssWUFBWSxXQUFXLENBQUM7SUFDckMsQ0FBQztJQTFCTSxnQ0FBa0IsR0FBRyxDQUFDLENBQUM7O2dCQWxDOUIsU0FBUyxTQUFDO29CQUNWLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFFBQVEsRUFBRSxzakNBNkJUO2lCQUNEOzs7Ozt3QkFHQyxLQUFLOzBCQUNMLEtBQUs7cUJBQ0wsS0FBSzsyQkFDTCxLQUFLOzJCQUNMLE1BQU07NEJBRU4sV0FBVyxTQUFDLDJCQUEyQjsyQkFDdkMsV0FBVyxTQUFDLG1DQUFtQyxjQUFHLEtBQUs7MkJBQ3ZELFdBQVcsU0FBQyxlQUFlO3VCQUMzQixXQUFXLFNBQUMsV0FBVzs0QkFDdkIsV0FBVyxTQUFDLGlCQUFpQixjQUFHLEtBQUs7O0lBZ0J2QyxvQkFBQztDQUFBLEFBN0RELElBNkRDO1NBNUJZLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdElucHV0LFxuXHRIb3N0QmluZGluZyxcblx0T3V0cHV0LFxuXHRUZW1wbGF0ZVJlZixcblx0RXZlbnRFbWl0dGVyXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tYWNjb3JkaW9uLWl0ZW1cIixcblx0dGVtcGxhdGU6IGBcblx0XHQ8YnV0dG9uXG5cdFx0XHR0eXBlPVwiYnV0dG9uXCJcblx0XHRcdFthdHRyLmFyaWEtZXhwYW5kZWRdPVwiZXhwYW5kZWRcIlxuXHRcdFx0W2F0dHIuYXJpYS1jb250cm9sc109XCJpZFwiXG5cdFx0XHQoY2xpY2spPVwidG9nZ2xlRXhwYW5kZWQoKVwiXG5cdFx0XHRjbGFzcz1cImJ4LS1hY2NvcmRpb25fX2hlYWRpbmdcIj5cblx0XHRcdDxzdmcgaWJtSWNvbj1cImNoZXZyb24tLXJpZ2h0XCIgc2l6ZT1cIjE2XCIgY2xhc3M9XCJieC0tYWNjb3JkaW9uX19hcnJvd1wiPjwvc3ZnPlxuXHRcdFx0PHAgKm5nSWY9XCIhaXNUZW1wbGF0ZSh0aXRsZSlcIlxuXHRcdFx0XHRjbGFzcz1cImJ4LS1hY2NvcmRpb25fX3RpdGxlXCJcblx0XHRcdFx0W25nQ2xhc3NdPVwie1xuXHRcdFx0XHRcdCdieC0tc2tlbGV0b25fX3RleHQnOiBza2VsZXRvblxuXHRcdFx0XHR9XCI+XG5cdFx0XHRcdHt7IXNrZWxldG9uID8gdGl0bGUgOiBudWxsfX1cblx0XHRcdDwvcD5cblx0XHRcdDxuZy10ZW1wbGF0ZVxuXHRcdFx0XHQqbmdJZj1cImlzVGVtcGxhdGUodGl0bGUpXCJcblx0XHRcdFx0W25nVGVtcGxhdGVPdXRsZXRdPVwidGl0bGVcIlxuXHRcdFx0XHRbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwiY29udGV4dFwiPlxuXHRcdFx0PC9uZy10ZW1wbGF0ZT5cblx0XHQ8L2J1dHRvbj5cblx0XHQ8ZGl2IFtpZF09XCJpZFwiIGNsYXNzPVwiYngtLWFjY29yZGlvbl9fY29udGVudFwiPlxuXHRcdFx0PG5nLWNvbnRlbnQgKm5nSWY9XCIhc2tlbGV0b247IGVsc2Ugc2tlbGV0b25UZW1wbGF0ZVwiPjwvbmctY29udGVudD5cblx0XHRcdDxuZy10ZW1wbGF0ZSAjc2tlbGV0b25UZW1wbGF0ZT5cblx0XHRcdFx0PHAgY2xhc3M9XCJieC0tc2tlbGV0b25fX3RleHRcIiBzdHlsZT1cIndpZHRoOiA5MCVcIj48L3A+XG5cdFx0XHRcdDxwIGNsYXNzPVwiYngtLXNrZWxldG9uX190ZXh0XCIgc3R5bGU9XCJ3aWR0aDogODAlXCI+PC9wPlxuXHRcdFx0XHQ8cCBjbGFzcz1cImJ4LS1za2VsZXRvbl9fdGV4dFwiIHN0eWxlPVwid2lkdGg6IDk1JVwiPjwvcD5cblx0XHRcdDwvbmctdGVtcGxhdGU+XG5cdFx0PC9kaXY+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgQWNjb3JkaW9uSXRlbSB7XG5cdHN0YXRpYyBhY2NvcmRpb25JdGVtQ291bnQgPSAwO1xuXHRASW5wdXQoKSB0aXRsZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55Pjtcblx0QElucHV0KCkgY29udGV4dDogT2JqZWN0IHwgbnVsbCA9IG51bGw7XG5cdEBJbnB1dCgpIGlkID0gYGFjY29yZGlvbi1pdGVtLSR7QWNjb3JkaW9uSXRlbS5hY2NvcmRpb25JdGVtQ291bnR9YDtcblx0QElucHV0KCkgc2tlbGV0b24gPSBmYWxzZTtcblx0QE91dHB1dCgpIHNlbGVjdGVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1hY2NvcmRpb25fX2l0ZW1cIikgaXRlbUNsYXNzID0gdHJ1ZTtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWFjY29yZGlvbl9faXRlbS0tYWN0aXZlXCIpIEBJbnB1dCgpIGV4cGFuZGVkID0gZmFsc2U7XG5cdEBIb3N0QmluZGluZyhcInN0eWxlLmRpc3BsYXlcIikgaXRlbVR5cGUgPSBcImxpc3QtaXRlbVwiO1xuXHRASG9zdEJpbmRpbmcoXCJhdHRyLnJvbGVcIikgcm9sZSA9IFwiaGVhZGluZ1wiO1xuXHRASG9zdEJpbmRpbmcoXCJhdHRyLmFyaWEtbGV2ZWxcIikgQElucHV0KCkgYXJpYUxldmVsID0gMztcblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRBY2NvcmRpb25JdGVtLmFjY29yZGlvbkl0ZW1Db3VudCsrO1xuXHR9XG5cblx0cHVibGljIHRvZ2dsZUV4cGFuZGVkKCkge1xuXHRcdGlmICghdGhpcy5za2VsZXRvbikge1xuXHRcdFx0dGhpcy5leHBhbmRlZCA9ICF0aGlzLmV4cGFuZGVkO1xuXHRcdFx0dGhpcy5zZWxlY3RlZC5lbWl0KHtpZDogdGhpcy5pZCwgZXhwYW5kZWQ6IHRoaXMuZXhwYW5kZWR9KTtcblx0XHR9XG5cdH1cblxuXHRwdWJsaWMgaXNUZW1wbGF0ZSh2YWx1ZSkge1xuXHRcdHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmO1xuXHR9XG59XG4iXX0=