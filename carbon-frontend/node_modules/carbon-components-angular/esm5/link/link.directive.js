/**
 *
 * carbon-angular v0.0.0 | link.directive.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Directive, HostBinding, Input } from "@angular/core";
/**
 * A convenience directive for applying styling to a link.
 *
 * [See demo](../../?path=/story/link--basic)
 *
 * Example:
 *
 * ```html
 * <a href="#" ibmLink>A link</a>
 * ```
 *
 * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/link/code) for more detail.
 *
 * <example-url>../../iframe.html?id=link--basic</example-url>
 */
var Link = /** @class */ (function () {
    function Link() {
        this.baseClass = true;
        /**
         * Set to true to show links inline in a sentence or paragraph.
         */
        this.inline = false;
    }
    Object.defineProperty(Link.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        /**
         * Set to true to disable link.
         */
        set: function (disabled) {
            this._disabled = disabled;
            this.tabindex = this.disabled ? -1 : null;
        },
        enumerable: true,
        configurable: true
    });
    Link.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmLink]"
                },] }
    ];
    Link.propDecorators = {
        baseClass: [{ type: HostBinding, args: ["class.bx--link",] }],
        tabindex: [{ type: HostBinding, args: ["attr.tabindex",] }],
        inline: [{ type: Input }, { type: HostBinding, args: ["class.bx--link--inline",] }],
        disabled: [{ type: Input }, { type: HostBinding, args: ["attr.aria-disabled",] }, { type: HostBinding, args: ["class.bx--link--disabled",] }]
    };
    return Link;
}());
export { Link };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluay5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2xpbmsvIiwic291cmNlcyI6WyJsaW5rLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULFdBQVcsRUFDWCxLQUFLLEVBQ0wsTUFBTSxlQUFlLENBQUM7QUFFdkI7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSDtJQUFBO1FBTWdDLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFPaEQ7O1dBRUc7UUFFb0MsV0FBTSxHQUFHLEtBQUssQ0FBQztJQWtCdkQsQ0FBQztJQWJBLHNCQUdJLDBCQUFRO2FBS1o7WUFDQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDdkIsQ0FBQztRQWJEOztXQUVHO2FBQ0gsVUFHYSxRQUFpQjtZQUM3QixJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztZQUMxQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDM0MsQ0FBQzs7O09BQUE7O2dCQTVCRCxTQUFTLFNBQUM7b0JBQ1YsUUFBUSxFQUFFLFdBQVc7aUJBQ3JCOzs7NEJBSUMsV0FBVyxTQUFDLGdCQUFnQjsyQkFLNUIsV0FBVyxTQUFDLGVBQWU7eUJBSzNCLEtBQUssWUFDTCxXQUFXLFNBQUMsd0JBQXdCOzJCQUtwQyxLQUFLLFlBQ0wsV0FBVyxTQUFDLG9CQUFvQixjQUNoQyxXQUFXLFNBQUMsMEJBQTBCOztJQVd4QyxXQUFDO0NBQUEsQUFuQ0QsSUFtQ0M7U0E5QlksSUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdERpcmVjdGl2ZSxcblx0SG9zdEJpbmRpbmcsXG5cdElucHV0XG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbi8qKlxuICogQSBjb252ZW5pZW5jZSBkaXJlY3RpdmUgZm9yIGFwcGx5aW5nIHN0eWxpbmcgdG8gYSBsaW5rLlxuICpcbiAqIFtTZWUgZGVtb10oLi4vLi4vP3BhdGg9L3N0b3J5L2xpbmstLWJhc2ljKVxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgaHRtbFxuICogPGEgaHJlZj1cIiNcIiBpYm1MaW5rPkEgbGluazwvYT5cbiAqIGBgYFxuICpcbiAqIFNlZSB0aGUgW3ZhbmlsbGEgY2FyYm9uIGRvY3NdKGh0dHA6Ly93d3cuY2FyYm9uZGVzaWduc3lzdGVtLmNvbS9jb21wb25lbnRzL2xpbmsvY29kZSkgZm9yIG1vcmUgZGV0YWlsLlxuICpcbiAqIDxleGFtcGxlLXVybD4uLi8uLi9pZnJhbWUuaHRtbD9pZD1saW5rLS1iYXNpYzwvZXhhbXBsZS11cmw+XG4gKi9cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogXCJbaWJtTGlua11cIlxufSlcblxuXG5leHBvcnQgY2xhc3MgTGluayB7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1saW5rXCIpIGJhc2VDbGFzcyA9IHRydWU7XG5cblx0LyoqXG5cdCAqIEF1dG9tYXRpY2FsbHkgc2V0IHRvIGAtMWAgd2hlbiBsaW5rIGlzIGRpc2FibGVkLlxuXHQgKi9cblx0QEhvc3RCaW5kaW5nKFwiYXR0ci50YWJpbmRleFwiKSB0YWJpbmRleDtcblxuXHQvKipcblx0ICogU2V0IHRvIHRydWUgdG8gc2hvdyBsaW5rcyBpbmxpbmUgaW4gYSBzZW50ZW5jZSBvciBwYXJhZ3JhcGguXG5cdCAqL1xuXHRASW5wdXQoKVxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tbGluay0taW5saW5lXCIpIGlubGluZSA9IGZhbHNlO1xuXG5cdC8qKlxuXHQgKiBTZXQgdG8gdHJ1ZSB0byBkaXNhYmxlIGxpbmsuXG5cdCAqL1xuXHRASW5wdXQoKVxuXHRASG9zdEJpbmRpbmcoXCJhdHRyLmFyaWEtZGlzYWJsZWRcIilcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWxpbmstLWRpc2FibGVkXCIpXG5cdHNldCBkaXNhYmxlZChkaXNhYmxlZDogYm9vbGVhbikge1xuXHRcdHRoaXMuX2Rpc2FibGVkID0gZGlzYWJsZWQ7XG5cdFx0dGhpcy50YWJpbmRleCA9IHRoaXMuZGlzYWJsZWQgPyAtMSA6IG51bGw7XG5cdH1cblxuXHRnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuXHR9XG5cblx0cHJpdmF0ZSBfZGlzYWJsZWQ7XG59XG4iXX0=