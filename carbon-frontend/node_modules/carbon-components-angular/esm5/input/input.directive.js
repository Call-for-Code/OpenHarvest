/**
 *
 * carbon-angular v0.0.0 | input.directive.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Directive, HostBinding, Input } from "@angular/core";
/**
 * A directive for applying styling to an input element.
 *
 * Example:
 *
 * ```html
 * <input ibmText/>
 * ```
 *
 * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/text-input/code) for more detail.
 */
var TextInput = /** @class */ (function () {
    function TextInput() {
        /**
         * `light` or `dark` input theme
         */
        this.theme = "dark";
        /**
         * Input field render size
         */
        this.size = "md";
        this.inputClass = true;
        this.invalid = false;
        this.skeleton = false;
    }
    Object.defineProperty(TextInput.prototype, "isSizeXl", {
        get: function () {
            return this.size === "xl";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextInput.prototype, "isSizeSm", {
        get: function () {
            return this.size === "sm";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextInput.prototype, "isLightTheme", {
        get: function () {
            return this.theme === "light";
        },
        enumerable: true,
        configurable: true
    });
    TextInput.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmText]"
                },] }
    ];
    TextInput.propDecorators = {
        theme: [{ type: Input }],
        size: [{ type: Input }],
        inputClass: [{ type: HostBinding, args: ["class.bx--text-input",] }],
        isSizeXl: [{ type: HostBinding, args: ["class.bx--text-input--xl",] }],
        isSizeSm: [{ type: HostBinding, args: ["class.bx--text-input--sm",] }],
        invalid: [{ type: HostBinding, args: ["class.bx--text-input--invalid",] }, { type: Input }],
        skeleton: [{ type: HostBinding, args: ["class.bx--skeleton",] }, { type: Input }],
        isLightTheme: [{ type: HostBinding, args: ["class.bx--text-input--light",] }]
    };
    return TextInput;
}());
export { TextInput };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pbnB1dC8iLCJzb3VyY2VzIjpbImlucHV0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUQ7Ozs7Ozs7Ozs7R0FVRztBQUNIO0lBQUE7UUFJQzs7V0FFRztRQUNNLFVBQUssR0FBcUIsTUFBTSxDQUFDO1FBRTFDOztXQUVHO1FBQ00sU0FBSSxHQUF1QixJQUFJLENBQUM7UUFFSixlQUFVLEdBQUcsSUFBSSxDQUFDO1FBT0EsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUMzQixhQUFRLEdBQUcsS0FBSyxDQUFDO0lBSTlELENBQUM7SUFYQSxzQkFBNkMsK0JBQVE7YUFBckQ7WUFDQyxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO1FBQzNCLENBQUM7OztPQUFBO0lBQ0Qsc0JBQTZDLCtCQUFRO2FBQXJEO1lBQ0MsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztRQUMzQixDQUFDOzs7T0FBQTtJQUdELHNCQUFnRCxtQ0FBWTthQUE1RDtZQUNDLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxPQUFPLENBQUM7UUFDL0IsQ0FBQzs7O09BQUE7O2dCQXpCRCxTQUFTLFNBQUM7b0JBQ1YsUUFBUSxFQUFFLFdBQVc7aUJBQ3JCOzs7d0JBS0MsS0FBSzt1QkFLTCxLQUFLOzZCQUVMLFdBQVcsU0FBQyxzQkFBc0I7MkJBQ2xDLFdBQVcsU0FBQywwQkFBMEI7MkJBR3RDLFdBQVcsU0FBQywwQkFBMEI7MEJBR3RDLFdBQVcsU0FBQywrQkFBK0IsY0FBRyxLQUFLOzJCQUNuRCxXQUFXLFNBQUMsb0JBQW9CLGNBQUcsS0FBSzsrQkFDeEMsV0FBVyxTQUFDLDZCQUE2Qjs7SUFHM0MsZ0JBQUM7Q0FBQSxBQTFCRCxJQTBCQztTQXZCWSxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG4vKipcbiAqIEEgZGlyZWN0aXZlIGZvciBhcHBseWluZyBzdHlsaW5nIHRvIGFuIGlucHV0IGVsZW1lbnQuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGBodG1sXG4gKiA8aW5wdXQgaWJtVGV4dC8+XG4gKiBgYGBcbiAqXG4gKiBTZWUgdGhlIFt2YW5pbGxhIGNhcmJvbiBkb2NzXShodHRwOi8vd3d3LmNhcmJvbmRlc2lnbnN5c3RlbS5jb20vY29tcG9uZW50cy90ZXh0LWlucHV0L2NvZGUpIGZvciBtb3JlIGRldGFpbC5cbiAqL1xuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiBcIltpYm1UZXh0XVwiXG59KVxuZXhwb3J0IGNsYXNzIFRleHRJbnB1dCB7XG5cdC8qKlxuXHQgKiBgbGlnaHRgIG9yIGBkYXJrYCBpbnB1dCB0aGVtZVxuXHQgKi9cblx0QElucHV0KCkgdGhlbWU6IFwibGlnaHRcIiB8IFwiZGFya1wiID0gXCJkYXJrXCI7XG5cblx0LyoqXG5cdCAqIElucHV0IGZpZWxkIHJlbmRlciBzaXplXG5cdCAqL1xuXHRASW5wdXQoKSBzaXplOiBcInNtXCIgfCBcIm1kXCIgfCBcInhsXCIgPSBcIm1kXCI7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXRleHQtaW5wdXRcIikgaW5wdXRDbGFzcyA9IHRydWU7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10ZXh0LWlucHV0LS14bFwiKSBnZXQgaXNTaXplWGwoKSB7XG5cdFx0cmV0dXJuIHRoaXMuc2l6ZSA9PT0gXCJ4bFwiO1xuXHR9XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10ZXh0LWlucHV0LS1zbVwiKSBnZXQgaXNTaXplU20oKSB7XG5cdFx0cmV0dXJuIHRoaXMuc2l6ZSA9PT0gXCJzbVwiO1xuXHR9XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10ZXh0LWlucHV0LS1pbnZhbGlkXCIpIEBJbnB1dCgpIGludmFsaWQgPSBmYWxzZTtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXNrZWxldG9uXCIpIEBJbnB1dCgpIHNrZWxldG9uID0gZmFsc2U7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10ZXh0LWlucHV0LS1saWdodFwiKSBnZXQgaXNMaWdodFRoZW1lKCkge1xuXHRcdHJldHVybiB0aGlzLnRoZW1lID09PSBcImxpZ2h0XCI7XG5cdH1cbn1cbiJdfQ==