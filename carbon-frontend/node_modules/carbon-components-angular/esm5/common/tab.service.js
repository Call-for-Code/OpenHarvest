/**
 *
 * carbon-angular v0.0.0 | tab.service.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


export var tabbableSelector = "a[href], area[href], input:not([disabled]):not([tabindex=\'-1\']), " +
    "button:not([disabled]):not([tabindex=\'-1\']),select:not([disabled]):not([tabindex=\'-1\']), " +
    "textarea:not([disabled]):not([tabindex=\'-1\']), " +
    "iframe, object, embed, *[tabindex]:not([tabindex=\'-1\']), *[contenteditable=true]";
export var tabbableSelectorIgnoreTabIndex = "a[href], area[href], input:not([disabled]), " +
    "button:not([disabled]),select:not([disabled]), " +
    "textarea:not([disabled]), " +
    "iframe, object, embed, *[tabindex], *[contenteditable=true]";
export function getFocusElementList(element, selector) {
    if (selector === void 0) { selector = tabbableSelector; }
    var elements = element.querySelectorAll(selector);
    return elements ? Array.prototype.filter.call(elements, function (el) { return isVisible(el); }) : elements;
}
export function isFocusInFirstItem(event, list) {
    if (list.length > 0) {
        return (event.target || event.srcElement) === list[0];
    }
    return false;
}
export function isFocusInLastItem(event, list) {
    if (list.length > 0) {
        return (event.target || event.srcElement) === list[list.length - 1];
    }
    return false;
}
export function isElementFocused(event, element) {
    return (event.target || event.srcElement) === element;
}
export function focusFirstFocusableElement(list) {
    if (list.length > 0) {
        list[0].focus();
        return true;
    }
    return false;
}
export function focusLastFocusableElement(list) {
    if (list.length > 0) {
        list[list.length - 1].focus();
        return true;
    }
    return false;
}
export function isVisible(element) {
    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);
}
export function cycleTabs(event, element) {
    if (event.key === "Tab") {
        var list = getFocusElementList(element);
        var focusChanged = false;
        if (event.shiftKey) {
            if (isFocusInFirstItem(event, list) || isElementFocused(event, element)) {
                focusChanged = focusLastFocusableElement(list);
            }
        }
        else {
            if (isFocusInLastItem(event, list)) {
                focusChanged = focusFirstFocusableElement(list);
            }
        }
        if (focusChanged) {
            event.preventDefault();
            event.stopPropagation();
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2NvbW1vbi8iLCJzb3VyY2VzIjpbInRhYi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxJQUFJLGdCQUFnQixHQUFHLHFFQUFxRTtJQUNqRywrRkFBK0Y7SUFDL0YsbURBQW1EO0lBQ25ELG9GQUFvRixDQUFDO0FBRXZGLE1BQU0sQ0FBQyxJQUFJLDhCQUE4QixHQUFHLDhDQUE4QztJQUN4RixpREFBaUQ7SUFDakQsNEJBQTRCO0lBQzVCLDZEQUE2RCxDQUFDO0FBRWhFLE1BQU0sVUFBVSxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsUUFBMkI7SUFBM0IseUJBQUEsRUFBQSwyQkFBMkI7SUFDdkUsSUFBSSxRQUFRLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELE9BQU8sUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLFVBQUEsRUFBRSxJQUFJLE9BQUEsU0FBUyxDQUFDLEVBQUUsQ0FBQyxFQUFiLENBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7QUFDekYsQ0FBQztBQUVELE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsSUFBSTtJQUM3QyxJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1FBQ3BCLE9BQU8sQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLEtBQUssQ0FBQyxVQUFVLENBQUMsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDdEQ7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNkLENBQUM7QUFFRCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsS0FBSyxFQUFFLElBQUk7SUFDNUMsSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtRQUNwQixPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sSUFBSSxLQUFLLENBQUMsVUFBVSxDQUFDLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7S0FDcEU7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNkLENBQUM7QUFFRCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLE9BQU87SUFDOUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxLQUFLLE9BQU8sQ0FBQztBQUN2RCxDQUFDO0FBRUQsTUFBTSxVQUFVLDBCQUEwQixDQUFDLElBQUk7SUFDOUMsSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtRQUNwQixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDaEIsT0FBTyxJQUFJLENBQUM7S0FDWjtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2QsQ0FBQztBQUVELE1BQU0sVUFBVSx5QkFBeUIsQ0FBQyxJQUFJO0lBQzdDLElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7UUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDOUIsT0FBTyxJQUFJLENBQUM7S0FDWjtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2QsQ0FBQztBQUVELE1BQU0sVUFBVSxTQUFTLENBQUMsT0FBTztJQUNoQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLElBQUksT0FBTyxDQUFDLFlBQVksSUFBSSxPQUFPLENBQUMsY0FBYyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDM0YsQ0FBQztBQUVELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBSyxFQUFFLE9BQU87SUFDdkMsSUFBSSxLQUFLLENBQUMsR0FBRyxLQUFLLEtBQUssRUFBRTtRQUN4QixJQUFJLElBQUksR0FBRyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN4QyxJQUFJLFlBQVksR0FBRyxLQUFLLENBQUM7UUFFekIsSUFBSSxLQUFLLENBQUMsUUFBUSxFQUFFO1lBQ25CLElBQUksa0JBQWtCLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLGdCQUFnQixDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsRUFBRTtnQkFDeEUsWUFBWSxHQUFHLHlCQUF5QixDQUFDLElBQUksQ0FBQyxDQUFDO2FBQy9DO1NBQ0Q7YUFBTTtZQUNOLElBQUksaUJBQWlCLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxFQUFFO2dCQUNuQyxZQUFZLEdBQUcsMEJBQTBCLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDaEQ7U0FDRDtRQUVELElBQUksWUFBWSxFQUFFO1lBQ2pCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDeEI7S0FDRDtBQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgbGV0IHRhYmJhYmxlU2VsZWN0b3IgPSBcImFbaHJlZl0sIGFyZWFbaHJlZl0sIGlucHV0Om5vdChbZGlzYWJsZWRdKTpub3QoW3RhYmluZGV4PVxcJy0xXFwnXSksIFwiICtcblx0XHRcImJ1dHRvbjpub3QoW2Rpc2FibGVkXSk6bm90KFt0YWJpbmRleD1cXCctMVxcJ10pLHNlbGVjdDpub3QoW2Rpc2FibGVkXSk6bm90KFt0YWJpbmRleD1cXCctMVxcJ10pLCBcIiArXG5cdFx0XCJ0ZXh0YXJlYTpub3QoW2Rpc2FibGVkXSk6bm90KFt0YWJpbmRleD1cXCctMVxcJ10pLCBcIiArXG5cdFx0XCJpZnJhbWUsIG9iamVjdCwgZW1iZWQsICpbdGFiaW5kZXhdOm5vdChbdGFiaW5kZXg9XFwnLTFcXCddKSwgKltjb250ZW50ZWRpdGFibGU9dHJ1ZV1cIjtcblxuZXhwb3J0IGxldCB0YWJiYWJsZVNlbGVjdG9ySWdub3JlVGFiSW5kZXggPSBcImFbaHJlZl0sIGFyZWFbaHJlZl0sIGlucHV0Om5vdChbZGlzYWJsZWRdKSwgXCIgK1xuXHRcdFwiYnV0dG9uOm5vdChbZGlzYWJsZWRdKSxzZWxlY3Q6bm90KFtkaXNhYmxlZF0pLCBcIiArXG5cdFx0XCJ0ZXh0YXJlYTpub3QoW2Rpc2FibGVkXSksIFwiICtcblx0XHRcImlmcmFtZSwgb2JqZWN0LCBlbWJlZCwgKlt0YWJpbmRleF0sICpbY29udGVudGVkaXRhYmxlPXRydWVdXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRGb2N1c0VsZW1lbnRMaXN0KGVsZW1lbnQsIHNlbGVjdG9yID0gdGFiYmFibGVTZWxlY3Rvcikge1xuXHRsZXQgZWxlbWVudHMgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuXHRyZXR1cm4gZWxlbWVudHMgPyBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwoZWxlbWVudHMsIGVsID0+IGlzVmlzaWJsZShlbCkpIDogZWxlbWVudHM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0ZvY3VzSW5GaXJzdEl0ZW0oZXZlbnQsIGxpc3QpIHtcblx0aWYgKGxpc3QubGVuZ3RoID4gMCkge1xuXHRcdHJldHVybiAoZXZlbnQudGFyZ2V0IHx8IGV2ZW50LnNyY0VsZW1lbnQpID09PSBsaXN0WzBdO1xuXHR9XG5cdHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRm9jdXNJbkxhc3RJdGVtKGV2ZW50LCBsaXN0KSB7XG5cdGlmIChsaXN0Lmxlbmd0aCA+IDApIHtcblx0XHRyZXR1cm4gKGV2ZW50LnRhcmdldCB8fCBldmVudC5zcmNFbGVtZW50KSA9PT0gbGlzdFtsaXN0Lmxlbmd0aCAtIDFdO1xuXHR9XG5cdHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRWxlbWVudEZvY3VzZWQoZXZlbnQsIGVsZW1lbnQpIHtcblx0cmV0dXJuIChldmVudC50YXJnZXQgfHwgZXZlbnQuc3JjRWxlbWVudCkgPT09IGVsZW1lbnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb2N1c0ZpcnN0Rm9jdXNhYmxlRWxlbWVudChsaXN0KSB7XG5cdGlmIChsaXN0Lmxlbmd0aCA+IDApIHtcblx0XHRsaXN0WzBdLmZvY3VzKCk7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblx0cmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9jdXNMYXN0Rm9jdXNhYmxlRWxlbWVudChsaXN0KSB7XG5cdGlmIChsaXN0Lmxlbmd0aCA+IDApIHtcblx0XHRsaXN0W2xpc3QubGVuZ3RoIC0gMV0uZm9jdXMoKTtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXHRyZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1Zpc2libGUoZWxlbWVudCkge1xuXHRyZXR1cm4gISEoZWxlbWVudC5vZmZzZXRXaWR0aCB8fCBlbGVtZW50Lm9mZnNldEhlaWdodCB8fCBlbGVtZW50LmdldENsaWVudFJlY3RzKCkubGVuZ3RoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGN5Y2xlVGFicyhldmVudCwgZWxlbWVudCkge1xuXHRpZiAoZXZlbnQua2V5ID09PSBcIlRhYlwiKSB7XG5cdFx0bGV0IGxpc3QgPSBnZXRGb2N1c0VsZW1lbnRMaXN0KGVsZW1lbnQpO1xuXHRcdGxldCBmb2N1c0NoYW5nZWQgPSBmYWxzZTtcblxuXHRcdGlmIChldmVudC5zaGlmdEtleSkge1xuXHRcdFx0aWYgKGlzRm9jdXNJbkZpcnN0SXRlbShldmVudCwgbGlzdCkgfHwgaXNFbGVtZW50Rm9jdXNlZChldmVudCwgZWxlbWVudCkpIHtcblx0XHRcdFx0Zm9jdXNDaGFuZ2VkID0gZm9jdXNMYXN0Rm9jdXNhYmxlRWxlbWVudChsaXN0KTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0aWYgKGlzRm9jdXNJbkxhc3RJdGVtKGV2ZW50LCBsaXN0KSkge1xuXHRcdFx0XHRmb2N1c0NoYW5nZWQgPSBmb2N1c0ZpcnN0Rm9jdXNhYmxlRWxlbWVudChsaXN0KTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZm9jdXNDaGFuZ2VkKSB7XG5cdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXHR9XG59XG4iXX0=