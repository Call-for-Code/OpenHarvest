/**
 *
 * carbon-angular v0.0.0 | carbon-components-angular-timepicker-select.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { __extends } from 'tslib';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { Component, Input, HostBinding, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { Select, SelectModule } from 'carbon-components-angular/select';
import { IconModule } from 'carbon-components-angular/icon';

/**
 * [See demo](../../?path=/story/time-picker-select--simple)
 *
 * <example-url>../../iframe.html?id=time-picker-select--simple</example-url>
 */
var TimePickerSelect = /** @class */ (function (_super) {
    __extends(TimePickerSelect, _super);
    function TimePickerSelect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timeSelect = true;
        _this.timePickerSelect = true;
        _this.id = "timepicker-select-" + TimePickerSelect.selectCount++;
        /**
         * Set to true for a loading select.
         */
        _this.skeleton = false;
        /**
         * `light` or `dark` select theme
         */
        _this.theme = "dark";
        _this.timePickerSelectSkeleton = _this.skeleton;
        return _this;
    }
    Object.defineProperty(TimePickerSelect.prototype, "timePickerSelectLight", {
        get: function () {
            return this.theme === "light";
        },
        enumerable: true,
        configurable: true
    });
    TimePickerSelect.decorators = [
        { type: Component, args: [{
                    selector: "ibm-timepicker-select",
                    template: "\n\t\t<label *ngIf=\"!skeleton && label\" [attr.for]=\"id\" class=\"bx--label bx--visually-hidden\">{{label}}</label>\n\t\t<div class=\"bx--select-input__wrapper\">\n\t\t\t<select\n\t\t\t\t#select\n\t\t\t\t[attr.id]=\"id\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t(change)=\"onChange($event)\"\n\t\t\t\tclass=\"bx--select-input\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</select>\n\t\t\t<svg ibmIcon=\"chevron--down\" size=\"16\" *ngIf=\"!skeleton\" class=\"bx--select__arrow\"></svg>\n\t\t</div>\n\t",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: TimePickerSelect,
                            multi: true
                        }
                    ]
                }] }
    ];
    TimePickerSelect.propDecorators = {
        timeSelect: [{ type: HostBinding, args: ["class.bx--select",] }],
        timePickerSelect: [{ type: HostBinding, args: ["class.bx--time-picker__select",] }],
        id: [{ type: Input }],
        skeleton: [{ type: Input }],
        theme: [{ type: Input }],
        label: [{ type: Input }],
        timePickerSelectSkeleton: [{ type: HostBinding, args: ["class.bx--skeleton",] }],
        timePickerSelectLight: [{ type: HostBinding, args: ["class.bx--select--light",] }]
    };
    return TimePickerSelect;
}(Select));

var TimePickerSelectModule = /** @class */ (function () {
    function TimePickerSelectModule() {
    }
    TimePickerSelectModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        TimePickerSelect
                    ],
                    exports: [
                        TimePickerSelect
                    ],
                    imports: [
                        SelectModule,
                        CommonModule,
                        IconModule
                    ]
                },] }
    ];
    return TimePickerSelectModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TimePickerSelect, TimePickerSelectModule };

//# sourceMappingURL=carbon-components-angular-timepicker-select.js.map