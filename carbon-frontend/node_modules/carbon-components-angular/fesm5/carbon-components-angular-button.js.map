{"version":3,"file":"carbon-components-angular-button.js.map","sources":["ng://carbon-components-angular/button/button.directive.ts","ng://carbon-components-angular/button/button.module.ts","ng://carbon-components-angular/button/carbon-components-angular-button.ts"],"sourcesContent":["import {\n\tDirective,\n\tHostBinding,\n\tInput,\n\tOnInit\n} from \"@angular/core\";\nimport { ButtonSize, ButtonType } from \"./button.types\";\n\n/**\n * A convenience directive for applying styling to a button.\n *\n * [See demo](../../?path=/story/button--basic)\n *\n * Example:\n *\n * ```html\n * <button ibmButton>A button</button>\n * <button ibmButton=\"secondary\">A secondary button</button>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/button/code) for more detail.\n *\n * <example-url>../../iframe.html?id=button--basic</example-url>\n */\n@Directive({\n\tselector: \"[ibmButton]\"\n})\nexport class Button implements OnInit {\n\t/**\n\t * sets the button type\n\t */\n\t@Input() ibmButton: ButtonType = \"primary\";\n\t/**\n\t * Specify the size of the button\n\t */\n\t@Input() size: ButtonSize;\n\t/**\n\t * If assistive text is used, this specifies the placement.\n\t * Possible placements are `top`, `bottom`, `left`, `right`.\n\t * If assistive text is not used, this can be left undefined.\n\t */\n\t@Input() assistiveTextPlacement: \"top\" | \"bottom\" | \"left\" | \"right\" = \"top\";\n\t/**\n\t * If assistive text is used, this specifies the alignment.\n\t * Possible alignments are `center`, `start`, `end`.\n\t * If assistive text is not used, this can be left undefined.\n\t */\n\t@Input() assistiveTextAlignment: \"center\" | \"start\" | \"end\" = \"center\";\n\n\t// a whole lot of HostBindings ... this way we don't have to touch the elementRef directly\n\t@HostBinding(\"class.bx--btn\") get baseClass() {\n\t\treturn !this.toolbarAction;\n\t}\n\t@HostBinding(\"class.bx--btn--primary\") get primaryButton() {\n\t\treturn this.ibmButton === \"primary\";\n\t}\n\t@HostBinding(\"class.bx--btn--secondary\") get secondaryButton() {\n\t\treturn this.ibmButton === \"secondary\";\n\t}\n\t@HostBinding(\"class.bx--btn--tertiary\") get tertiaryButton() {\n\t\treturn this.ibmButton === \"tertiary\";\n\t}\n\t@HostBinding(\"class.bx--btn--ghost\") get ghostButton() {\n\t\treturn this.ibmButton === \"ghost\";\n\t}\n\t@HostBinding(\"class.bx--btn--danger\") get dangerButton() {\n\t\treturn this.ibmButton === \"danger\" || this.ibmButton === \"danger--primary\";\n\t}\n\t@HostBinding(\"class.bx--skeleton\") @Input() skeleton = false;\n\t@HostBinding(\"class.bx--btn--sm\") get smallSize() {\n\t\treturn this.size === \"sm\";\n\t}\n\t@HostBinding(\"class.bx--btn--field\") get fieldSize() {\n\t\treturn this.size === \"field\";\n\t}\n\t@HostBinding(\"class.bx--toolbar-action\") toolbarAction = false;\n\t@HostBinding(\"class.bx--overflow-menu\") overflowMenu = false;\n\t@HostBinding(\"class.bx--btn--icon-only\") @Input() iconOnly = false;\n\n\t/**\n\t * `hasAssistiveText` input specifies whether the button contains assistive text or not.\n\t * Assistive text can be utilized as follows:\n\t * ```typescript\n\t *\t<button\n\t *\t\tibmButton=\"tertiary\"\n\t *\t\t[iconOnly]=\"true\"\n\t *\t\t[hasAssistiveText]=\"true\"\n\t *\t\tassistiveTextPlacement=\"top\"\n\t *\t\tassistiveTextAlignment=\"center\">\n\t *\t\t<svg class=\"bx--btn__icon\" ibmIconCopy size=\"20\"></svg>\n\t *\t\t<span class=\"bx--assistive-text\">Icon description</span>\n\t *\t</button>\n\t * ```\n\t */\n\t@HostBinding(\"class.bx--tooltip__trigger\")\n\t@HostBinding(\"class.bx--tooltip--a11y\") @Input() hasAssistiveText = false;\n\n\t@HostBinding(\"class.bx--tooltip--align-center\") get isAssistiveTextCenterAligned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextAlignment === \"center\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--align-start\") get isAssistiveTextStartAligned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextAlignment === \"start\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--align-end\") get isAssistiveTextEndAligned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextAlignment === \"end\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--top\") get isAssistiveTextTopPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"top\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--bottom\") get isAssistiveTextBottomPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"bottom\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--left\") get isAssistiveTextLeftPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"left\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--right\") get isAssistiveTextRightPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"right\";\n\t}\n\n\tngOnInit() {\n\t\tif (!this.ibmButton) {\n\t\t\tthis.ibmButton = \"primary\";\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Button } from \"./button.directive\";\n\n@NgModule({\n\tdeclarations: [Button],\n\texports: [Button],\n\timports: [CommonModule]\n})\nexport class ButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
