{"version":3,"file":"carbon-components-angular-accordion.js.map","sources":["ng://carbon-components-angular/accordion/accordion-item.component.ts","ng://carbon-components-angular/accordion/accordion.component.ts","ng://carbon-components-angular/accordion/accordion.module.ts","ng://carbon-components-angular/accordion/carbon-components-angular-accordion.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tHostBinding,\n\tOutput,\n\tTemplateRef,\n\tEventEmitter\n} from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-accordion-item\",\n\ttemplate: `\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\t[attr.aria-expanded]=\"expanded\"\n\t\t\t[attr.aria-controls]=\"id\"\n\t\t\t(click)=\"toggleExpanded()\"\n\t\t\tclass=\"bx--accordion__heading\">\n\t\t\t<svg ibmIcon=\"chevron--right\" size=\"16\" class=\"bx--accordion__arrow\"></svg>\n\t\t\t<p *ngIf=\"!isTemplate(title)\"\n\t\t\t\tclass=\"bx--accordion__title\"\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t'bx--skeleton__text': skeleton\n\t\t\t\t}\">\n\t\t\t\t{{!skeleton ? title : null}}\n\t\t\t</p>\n\t\t\t<ng-template\n\t\t\t\t*ngIf=\"isTemplate(title)\"\n\t\t\t\t[ngTemplateOutlet]=\"title\"\n\t\t\t\t[ngTemplateOutletContext]=\"context\">\n\t\t\t</ng-template>\n\t\t</button>\n\t\t<div [id]=\"id\" class=\"bx--accordion__content\">\n\t\t\t<ng-content *ngIf=\"!skeleton; else skeletonTemplate\"></ng-content>\n\t\t\t<ng-template #skeletonTemplate>\n\t\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 90%\"></p>\n\t\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 80%\"></p>\n\t\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 95%\"></p>\n\t\t\t</ng-template>\n\t\t</div>\n\t`\n})\nexport class AccordionItem {\n\tstatic accordionItemCount = 0;\n\t@Input() title: string | TemplateRef<any>;\n\t@Input() context: Object | null = null;\n\t@Input() id = `accordion-item-${AccordionItem.accordionItemCount}`;\n\t@Input() skeleton = false;\n\t@Output() selected = new EventEmitter();\n\n\t@HostBinding(\"class.bx--accordion__item\") itemClass = true;\n\t@HostBinding(\"class.bx--accordion__item--active\") @Input() expanded = false;\n\t@HostBinding(\"style.display\") itemType = \"list-item\";\n\t@HostBinding(\"attr.role\") role = \"heading\";\n\t@HostBinding(\"attr.aria-level\") @Input() ariaLevel = 3;\n\n\tconstructor() {\n\t\tAccordionItem.accordionItemCount++;\n\t}\n\n\tpublic toggleExpanded() {\n\t\tif (!this.skeleton) {\n\t\t\tthis.expanded = !this.expanded;\n\t\t\tthis.selected.emit({id: this.id, expanded: this.expanded});\n\t\t}\n\t}\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tContentChildren,\n\tQueryList,\n\tAfterContentInit\n} from \"@angular/core\";\nimport { AccordionItem } from \"./accordion-item.component\";\n\n/**\n * [See demo](../../?path=/story/accordion--basic)\n *\n * <example-url>../../iframe.html?id=accordion--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-accordion\",\n\ttemplate: `\n\t\t<ul class=\"bx--accordion\"\n\t\t\t[class.bx--accordion--end]=\"align == 'end'\"\n\t\t\t[class.bx--accordion--start]=\"align == 'start'\">\n\t\t\t<ng-content></ng-content>\n\t\t</ul>\n\t`\n})\nexport class Accordion implements AfterContentInit {\n\t@Input() align: \"start\" | \"end\" = \"end\";\n\n\t@ContentChildren(AccordionItem) children: QueryList<AccordionItem>;\n\n\tprotected _skeleton = false;\n\n\t@Input()\n\tset skeleton(value: any) {\n\t\tthis._skeleton = value;\n\t\tthis.updateChildren();\n\t}\n\n\tget skeleton(): any {\n\t\treturn this._skeleton;\n\t}\n\n\tngAfterContentInit() {\n\t\tthis.updateChildren();\n\t}\n\n\tprotected updateChildren() {\n\t\tif (this.children) {\n\t\t\tthis.children.toArray().forEach(child => child.skeleton = this.skeleton);\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Accordion } from \"./accordion.component\";\nimport { AccordionItem } from \"./accordion-item.component\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tAccordion,\n\t\tAccordionItem\n\t],\n\texports: [\n\t\tAccordion,\n\t\tAccordionItem\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tIconModule\n\t]\n})\nexport class AccordionModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;IAwDC;QAXS,YAAO,GAAkB,IAAI,CAAC;QAC9B,OAAE,GAAG,oBAAkB,aAAa,CAAC,kBAAoB,CAAC;QAC1D,aAAQ,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAEE,cAAS,GAAG,IAAI,CAAC;QACA,aAAQ,GAAG,KAAK,CAAC;QAC9C,aAAQ,GAAG,WAAW,CAAC;QAC3B,SAAI,GAAG,SAAS,CAAC;QACF,cAAS,GAAG,CAAC,CAAC;QAGtD,aAAa,CAAC,kBAAkB,EAAE,CAAC;KACnC;IAEM,sCAAc,GAArB;QACC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC;SAC3D;KACD;IAEM,kCAAU,GAAjB,UAAkB,KAAK;QACtB,OAAO,KAAK,YAAY,WAAW,CAAC;KACpC;IA1BM,gCAAkB,GAAG,CAAC,CAAC;;gBAlC9B,SAAS,SAAC;oBACV,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,sjCA6BT;iBACD;;;;;wBAGC,KAAK;0BACL,KAAK;qBACL,KAAK;2BACL,KAAK;2BACL,MAAM;4BAEN,WAAW,SAAC,2BAA2B;2BACvC,WAAW,SAAC,mCAAmC,cAAG,KAAK;2BACvD,WAAW,SAAC,eAAe;uBAC3B,WAAW,SAAC,WAAW;4BACvB,WAAW,SAAC,iBAAiB,cAAG,KAAK;;IAgBvC,oBAAC;CA7DD;;ACAA;;;;;AAKA;IAAA;QAWU,UAAK,GAAoB,KAAK,CAAC;QAI9B,cAAS,GAAG,KAAK,CAAC;KAqB5B;IAnBA,sBACI,+BAAQ;aAKZ;YACC,OAAO,IAAI,CAAC,SAAS,CAAC;SACtB;aARD,UACa,KAAU;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;SACtB;;;OAAA;IAMD,sCAAkB,GAAlB;QACC,IAAI,CAAC,cAAc,EAAE,CAAC;KACtB;IAES,kCAAc,GAAxB;QAAA,iBAIC;QAHA,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,GAAA,CAAC,CAAC;SACzE;KACD;;gBAnCD,SAAS,SAAC;oBACV,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,kMAMT;iBACD;;;wBAEC,KAAK;2BAEL,eAAe,SAAC,aAAa;2BAI7B,KAAK;;IAmBP,gBAAC;CApCD;;;ICPA;KAcgC;;gBAd/B,QAAQ,SAAC;oBACT,YAAY,EAAE;wBACb,SAAS;wBACT,aAAa;qBACb;oBACD,OAAO,EAAE;wBACR,SAAS;wBACT,aAAa;qBACb;oBACD,OAAO,EAAE;wBACR,YAAY;wBACZ,UAAU;qBACV;iBACD;;IAC8B,sBAAC;CAdhC;;ACPA;;GAEG;;;;"}
