{"version":3,"file":"carbon-components-angular-list.js.map","sources":["ng://carbon-components-angular/list/list-item.directive.ts","ng://carbon-components-angular/list/list.directive.ts","ng://carbon-components-angular/list/list.module.ts","ng://carbon-components-angular/list/carbon-components-angular-list.ts"],"sourcesContent":["import { Directive, HostBinding } from \"@angular/core\";\n\n/**\n * Applies list styling to the item it is used on. Best used with `li`s.\n */\n@Directive({\n\tselector: \"[ibmListItem]\"\n})\nexport class ListItemDirective {\n\t@HostBinding(\"class.bx--list__item\") wrapper = true;\n}\n","import { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n/**\n * Applies either ordered or unordered styling to the list container it is applied to.\n *\n * [See demo](../../?path=/story/list--basic)\n *\n * For `ul`s it will apply unordered list styles, and for `ol`s it will apply ordered list styles.\n *\n * If a `ul` or `ol` is nested within a `li` the directive will apply nested list styling.\n *\n * <example-url>../../iframe.html?id=list--basic</example-url>\n */\n@Directive({\n\tselector: \"[ibmList]\"\n})\nexport class List {\n\t@HostBinding(\"class.bx--list--ordered\") get ordered() {\n\t\tif (this.nested) { return false; }\n\t\treturn this.elementRef.nativeElement.tagName === \"OL\";\n\t}\n\n\t@HostBinding(\"class.bx--list--unordered\") get unordered() {\n\t\tif (this.nested) { return false; }\n\t\treturn this.elementRef.nativeElement.tagName === \"UL\";\n\t}\n\n\t@HostBinding(\"class.bx--list--nested\") get nested() {\n\t\treturn !!(this.elementRef.nativeElement.parentElement && this.elementRef.nativeElement.parentElement.tagName === \"LI\");\n\t}\n\n\tconstructor(protected elementRef: ElementRef) {}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ListItemDirective } from \"./list-item.directive\";\nimport { List } from \"./list.directive\";\n\n@NgModule({\n\tdeclarations: [\n\t\tListItemDirective,\n\t\tList\n\t],\n\texports: [\n\t\tListItemDirective,\n\t\tList\n\t],\n\timports: [CommonModule]\n})\nexport class ListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;AAEA;;;AAGA;IAAA;QAIsC,YAAO,GAAG,IAAI,CAAC;KACpD;;gBALA,SAAS,SAAC;oBACV,QAAQ,EAAE,eAAe;iBACzB;;;0BAEC,WAAW,SAAC,sBAAsB;;IACpC,wBAAC;CALD;;ACHA;;;;;;;;;;;AAWA;IAkBC,cAAsB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAI;IAdhD,sBAA4C,yBAAO;aAAnD;YACC,IAAI,IAAI,CAAC,MAAM,EAAE;gBAAE,OAAO,KAAK,CAAC;aAAE;YAClC,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,KAAK,IAAI,CAAC;SACtD;;;OAAA;IAED,sBAA8C,2BAAS;aAAvD;YACC,IAAI,IAAI,CAAC,MAAM,EAAE;gBAAE,OAAO,KAAK,CAAC;aAAE;YAClC,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,KAAK,IAAI,CAAC;SACtD;;;OAAA;IAED,sBAA2C,wBAAM;aAAjD;YACC,OAAO,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC;SACvH;;;OAAA;;gBAhBD,SAAS,SAAC;oBACV,QAAQ,EAAE,WAAW;iBACrB;;;;gBAfmB,UAAU;;;0BAiB5B,WAAW,SAAC,yBAAyB;4BAKrC,WAAW,SAAC,2BAA2B;yBAKvC,WAAW,SAAC,wBAAwB;;IAKtC,WAAC;CAnBD;;;ICPA;KAW0B;;gBAXzB,QAAQ,SAAC;oBACT,YAAY,EAAE;wBACb,iBAAiB;wBACjB,IAAI;qBACJ;oBACD,OAAO,EAAE;wBACR,iBAAiB;wBACjB,IAAI;qBACJ;oBACD,OAAO,EAAE,CAAC,YAAY,CAAC;iBACvB;;IACwB,iBAAC;CAX1B;;ACNA;;GAEG;;;;"}
