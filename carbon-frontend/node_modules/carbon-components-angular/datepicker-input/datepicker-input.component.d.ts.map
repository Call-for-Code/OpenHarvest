{"version":3,"file":"datepicker-input.component.d.ts","sources":["datepicker-input.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | datepicker-input.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { EventEmitter, ElementRef, TemplateRef } from \"@angular/core\";\nexport declare class DatePickerInput {\n    protected elementRef: ElementRef;\n    private static datePickerCount;\n    /**\n     * Select a calendar type for the `model`.\n     * Internal purposes only.\n     */\n    type: \"simple\" | \"single\" | \"range\";\n    id: string;\n    hasIcon: boolean;\n    label: string | TemplateRef<any>;\n    placeholder: string;\n    pattern: string;\n    valueChange: EventEmitter<string>;\n    theme: \"light\" | \"dark\";\n    disabled: boolean;\n    invalid: boolean;\n    invalidText: string | TemplateRef<any>;\n    skeleton: boolean;\n    value: string;\n    size: \"sm\" | \"md\" | \"xl\";\n    input: ElementRef;\n    constructor(elementRef: ElementRef);\n    onChange(event: any): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    onTouched: () => any;\n    propagateChange: (_: any) => void;\n    isTemplate(value: any): boolean;\n}\n"]}