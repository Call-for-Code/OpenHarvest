{"version":3,"file":"scrollable-list.directive.d.ts","sources":["scrollable-list.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | scrollable-list.directive.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ElementRef, OnChanges, SimpleChanges, AfterViewInit } from \"@angular/core\";\nexport declare class ScrollableList implements OnChanges, AfterViewInit {\n    protected elementRef: ElementRef;\n    /**\n     * Optional target list to scroll\n     */\n    nScrollableList: string;\n    /**\n     * Enables or disables scrolling for the whole directive\n     */\n    scrollEnabled: boolean;\n    /**\n     * Sets the target used for hover scrolling up\n     */\n    scrollUpTarget: HTMLElement;\n    /**\n     * Sets the target used for hover scrolling down\n     */\n    scrollDownTarget: HTMLElement;\n    /**\n     * How many lines to scroll by each time `wheel` fires\n     * Defaults to 10 - based on testing this isn't too fast or slow on any platform\n     */\n    scrollBy: number;\n    protected hoverScrollInterval: any;\n    protected lastTouch: any;\n    protected canScrollUp: boolean;\n    protected canScrollDown: boolean;\n    protected list: any;\n    constructor(elementRef: ElementRef);\n    ngOnChanges(changes: SimpleChanges): void;\n    ngAfterViewInit(): void;\n    updateScrollHeight(): void;\n    protected checkScrollArrows(): void;\n    protected onWheel(event: any): void;\n    protected onTouchStart(event: any): void;\n    protected onTouchMove(event: any): void;\n    protected hoverScrollBy(hovering: any, amount: any): void;\n    protected onHoverUp(hovering: any): void;\n    protected onHoverDown(hovering: any): void;\n    protected onKeyDown(event: any): void;\n}\n"]}