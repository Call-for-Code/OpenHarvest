{"version":3,"file":"selection-tile.component.d.ts","sources":["selection-tile.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | selection-tile.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { EventEmitter, AfterViewInit } from \"@angular/core\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nexport declare class SelectionTile implements AfterViewInit {\n    i18n: I18n;\n    static tileCount: number;\n    /**\n     * The unique id for the input.\n     */\n    id: string;\n    /**\n     * Updating the state of the input to match the state of the parameter passed in.\n     * Set to `true` if this tile should be selected.\n     */\n    selected: boolean;\n    /**\n     * The value for the tile. Returned via `ngModel` or `selected` event on the containing `TileGroup`.\n     */\n    value: string;\n    /**\n     * Internal event used to notify the containing `TileGroup` of changes.\n     */\n    change: EventEmitter<Event>;\n    /**\n     * Set by the containing `TileGroup`. Used for the `name` property on the input.\n     */\n    name: string;\n    /**\n     * Defines whether or not the `SelectionTile` supports selecting multiple tiles as opposed to single\n     * tile selection.\n     */\n    multiple: boolean;\n    input: any;\n    protected _selected: any;\n    constructor(i18n: I18n);\n    ngAfterViewInit(): void;\n    keyboardInput(event: any): void;\n    onChange(event: any): void;\n}\n"]}