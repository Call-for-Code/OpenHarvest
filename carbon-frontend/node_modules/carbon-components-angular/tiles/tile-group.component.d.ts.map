{"version":3,"file":"tile-group.component.d.ts","sources":["tile-group.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | tile-group.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AfterContentInit, EventEmitter, QueryList, OnDestroy } from \"@angular/core\";\nimport { SelectionTile } from \"./selection-tile.component\";\nimport { TileSelection } from \"./tile-selection.interface\";\nimport { Subject } from \"rxjs\";\nexport declare class TileGroup implements AfterContentInit, OnDestroy {\n    static tileGroupCount: number;\n    /**\n     * The tile group `name`\n     */\n    name: string;\n    /**\n     * Set to `true` to support multiple tile selection\n     */\n    multiple: boolean;\n    /**\n     * Emits an event when the tile selection changes.\n     *\n     * Emits an object that looks like:\n     * ```javascript\n     * {\n     * \tvalue: \"something\",\n     * \tselected: true,\n     * \tname: \"tile-group-1\"\n     * }\n     * ```\n     */\n    selected: EventEmitter<TileSelection>;\n    tileGroupClass: boolean;\n    selectionTiles: QueryList<SelectionTile>;\n    protected unsubscribe$: Subject<void>;\n    protected unsubscribeTiles$: Subject<void>;\n    constructor();\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n}\n"]}