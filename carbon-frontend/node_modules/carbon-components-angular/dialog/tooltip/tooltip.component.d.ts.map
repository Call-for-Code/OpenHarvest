{"version":3,"file":"tooltip.component.d.ts","sources":["tooltip.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | tooltip.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ElementRef } from \"@angular/core\";\nimport { Dialog } from \"../dialog.component\";\nimport { AnimationFrameService, ElementService } from \"carbon-components-angular/utils\";\n/**\n * Extend the `Dialog` component to create a tooltip for exposing content.\n */\nexport declare class Tooltip extends Dialog {\n    protected elementRef: ElementRef;\n    protected elementService: ElementService;\n    protected animationFrameService: AnimationFrameService;\n    style: string;\n    /**\n     * Value is set to `true` if the `Tooltip` is to display a `TemplateRef` instead of a string.\n     */\n    hasContentTemplate: boolean;\n    /**\n     * Sets the role of the tooltip. If there's no focusable content we leave it as a `tooltip`,\n     * if there _is_ focusable content we switch to the interactive `dialog` role.\n     */\n    role: string;\n    constructor(elementRef: ElementRef, elementService: ElementService, animationFrameService?: AnimationFrameService);\n    /**\n     * Check whether there is a template for the `Tooltip` content.\n     */\n    onDialogInit(): void;\n    getAdjustOffset(): {\n        top: number;\n        left: number;\n    };\n    afterDialogViewInit(): void;\n}\n"]}