{"version":3,"file":"overflow-menu.component.d.ts","sources":["overflow-menu.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | overflow-menu.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ElementRef, EventEmitter, TemplateRef } from \"@angular/core\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { OverflowMenuDirective } from \"./overflow-menu.directive\";\n/**\n * The OverFlow menu component encapsulates the OverFlowMenu directive, and the menu iconography into one convienent component\n *\n * [See demo](../../?path=/story/overflow-menu--basic)\n *\n * html:\n * ```\n * <ibm-overflow-menu>\n *\t<ibm-overflow-menu-option>Option 1</ibm-overflow-menu-option>\n *\t<ibm-overflow-menu-option>Option 2</ibm-overflow-menu-option>\n * </ibm-overflow-menu>\n * ```\n *\n * <example-url>../../iframe.html?id=overflow-menu--basic</example-url>\n */\nexport declare class OverflowMenu {\n    protected elementRef: ElementRef;\n    protected i18n: I18n;\n    buttonLabel: any;\n    flip: boolean;\n    placement: \"bottom\" | \"top\";\n    open: boolean;\n    openChange: EventEmitter<boolean>;\n    /**\n     * Sets the custom overflow menu trigger\n     */\n    customTrigger: TemplateRef<any>;\n    /**\n     * This specifies any vertical and horizontal offset for the position of the dialog\n     */\n    offset: {\n        x: number;\n        y: number;\n    };\n    wrapperClass: string;\n    /**\n     * This appends additional classes to the overflow trigger/button.\n     */\n    triggerClass: string;\n    overflowMenuDirective: OverflowMenuDirective;\n    constructor(elementRef: ElementRef, i18n: I18n);\n    handleOpenChange(event: boolean): void;\n}\n"]}