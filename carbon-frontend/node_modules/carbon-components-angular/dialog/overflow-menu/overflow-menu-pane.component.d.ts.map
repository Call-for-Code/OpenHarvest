{"version":3,"file":"overflow-menu-pane.component.d.ts","sources":["overflow-menu-pane.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | overflow-menu-pane.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ElementRef, AfterViewInit } from \"@angular/core\";\nimport { Dialog } from \"../dialog.component\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { ExperimentalService } from \"carbon-components-angular/experimental\";\nimport { AnimationFrameService, ElementService } from \"carbon-components-angular/utils\";\n/**\n * Extend the `Dialog` component to create an overflow menu.\n *\n * Not used directly. See overflow-menu.component and overflow-menu.directive for more\n */\nexport declare class OverflowMenuPane extends Dialog implements AfterViewInit {\n    protected elementRef: ElementRef;\n    protected i18n: I18n;\n    protected experimental: ExperimentalService;\n    protected animationFrameService: AnimationFrameService;\n    protected elementService: ElementService;\n    constructor(elementRef: ElementRef, i18n: I18n, experimental: ExperimentalService, animationFrameService?: AnimationFrameService, elementService?: ElementService);\n    onDialogInit(): void;\n    hostkeys(event: KeyboardEvent): void;\n    onClose(event: any): void;\n    afterDialogViewInit(): void;\n    protected listItems(): HTMLElement[];\n}\n"]}