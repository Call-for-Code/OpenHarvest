/**
 *
 * carbon-angular v0.0.0 | overflow-menu.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { ElementRef, EventEmitter, TemplateRef } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
import { OverflowMenuDirective } from "./overflow-menu.directive";
/**
 * The OverFlow menu component encapsulates the OverFlowMenu directive, and the menu iconography into one convienent component
 *
 * [See demo](../../?path=/story/overflow-menu--basic)
 *
 * html:
 * ```
 * <ibm-overflow-menu>
 *	<ibm-overflow-menu-option>Option 1</ibm-overflow-menu-option>
 *	<ibm-overflow-menu-option>Option 2</ibm-overflow-menu-option>
 * </ibm-overflow-menu>
 * ```
 *
 * <example-url>../../iframe.html?id=overflow-menu--basic</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class OverflowMenu {
    protected elementRef: ElementRef;
    protected i18n: I18n;
    buttonLabel: any;
    flip: boolean;
    placement: "bottom" | "top";
    open: boolean;
    openChange: EventEmitter<boolean>;
    /**
     * Sets the custom overflow menu trigger
     */
    customTrigger: TemplateRef<any>;
    /**
     * This specifies any vertical and horizontal offset for the position of the dialog
     */
    offset: {
        x: number;
        y: number;
    };
    wrapperClass: string;
    /**
     * This appends additional classes to the overflow trigger/button.
     */
    triggerClass: string;
    overflowMenuDirective: OverflowMenuDirective;
    constructor(elementRef: ElementRef, i18n: I18n);
    handleOpenChange(event: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OverflowMenu, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OverflowMenu, "ibm-overflow-menu", never, { "buttonLabel": "buttonLabel"; "flip": "flip"; "placement": "placement"; "open": "open"; "wrapperClass": "wrapperClass"; "triggerClass": "triggerClass"; "customTrigger": "customTrigger"; "offset": "offset"; }, { "openChange": "openChange"; }, ["overflowMenuDirective"], ["*"]>;
}

//# sourceMappingURL=overflow-menu.component.d.ts.map