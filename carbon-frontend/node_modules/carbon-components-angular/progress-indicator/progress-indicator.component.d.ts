/**
 *
 * carbon-angular v0.0.0 | progress-indicator.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter, OnChanges, SimpleChanges } from "@angular/core";
import { ExperimentalService } from "carbon-components-angular/experimental";
import { Step } from "./progress-indicator-step.interface";
/**
 * [See demo](../../?path=/story/progress-indicator--basic)
 *
 * <example-url>../../iframe.html?id=progress-indicator--basic</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class ProgressIndicator implements OnChanges {
    protected experimental: ExperimentalService;
    static skeletonSteps(stepCount: number): any[];
    stepSelected: EventEmitter<{
        step: Step;
        index: number;
    }>;
    steps: Array<Step>;
    orientation: "horizontal" | "vertical";
    skeleton: boolean;
    spacing: "default" | "equal";
    current: number;
    private _current;
    constructor(experimental: ExperimentalService);
    ngOnChanges(changes: SimpleChanges): void;
    private setProgressIndicatorStates;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ProgressIndicator, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ProgressIndicator, "ibm-progress-indicator", never, { "orientation": "orientation"; "skeleton": "skeleton"; "spacing": "spacing"; "current": "current"; "steps": "steps"; }, { "stepSelected": "stepSelected"; }, never, never>;
}

//# sourceMappingURL=progress-indicator.component.d.ts.map