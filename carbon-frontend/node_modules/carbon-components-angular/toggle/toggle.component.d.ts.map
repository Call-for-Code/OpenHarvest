{"version":3,"file":"toggle.component.d.ts","sources":["toggle.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n *\n * carbon-angular v0.0.0 | toggle.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Checkbox } from \"carbon-components-angular/checkbox\";\nimport { ChangeDetectorRef, EventEmitter, TemplateRef } from \"@angular/core\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { Observable } from \"rxjs\";\n/**\n * Defines the set of states for a toggle component.\n */\nexport declare enum ToggleState {\n    Init = 0,\n    Indeterminate = 1,\n    Checked = 2,\n    Unchecked = 3\n}\n/**\n * Used to emit changes performed on toggle components.\n *\n * @deprecated since v4\n */\nexport declare class ToggleChange {\n    /**\n     * Contains the `Toggle` that has been changed.\n     */\n    source: Toggle;\n    /**\n     * The state of the `Toggle` encompassed in the `ToggleChange` class.\n     */\n    checked: boolean;\n}\n/**\n * [See demo](../../?path=/story/toggle--basic)\n *\n * ```html\n * <ibm-toggle [(ngModel)]=\"toggleState\">Toggle</ibm-toggle>\n * ```\n *\n * <example-url>../../iframe.html?id=toggle--basic</example-url>\n */\nexport declare class Toggle extends Checkbox {\n    protected changeDetectorRef: ChangeDetectorRef;\n    protected i18n: I18n;\n    /**\n     * Variable used for creating unique ids for toggle components.\n     */\n    static toggleCount: number;\n    /**\n     * Text that is set on the left side of the toggle.\n     */\n    offText: string | Observable<string>;\n    /**\n     * Text that is set on the right side of the toggle.\n     */\n    onText: string | Observable<string>;\n    /**\n     * Text that is set as the label of the toggle.\n     */\n    label: string | TemplateRef<any>;\n    /**\n     * Size of the toggle component.\n     */\n    size: \"sm\" | \"md\";\n    /**\n     * Set to `true` for a loading toggle.\n     */\n    skeleton: boolean;\n    /**\n     * The unique id allocated to the `Toggle`.\n     */\n    id: string;\n    /**\n     * Emits event notifying other classes when a change in state occurs on a toggle after a\n     * click.\n     *\n     * @deprecated since v4\n     */\n    change: EventEmitter<ToggleChange>;\n    protected _offValues: Overridable;\n    protected _onValues: Overridable;\n    /**\n     * Creates an instance of Toggle.\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, i18n: I18n);\n    getOffText(): Observable<string>;\n    getOnText(): Observable<string>;\n    /**\n     * Creates instance of `ToggleChange` used to propagate the change event.\n     */\n    emitChangeEvent(): void;\n    isTemplate(value: any): boolean;\n}\n"]}