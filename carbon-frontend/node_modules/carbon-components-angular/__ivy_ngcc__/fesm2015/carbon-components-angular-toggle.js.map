{"version":3,"file":"carbon-components-angular-toggle.js","sources":["carbon-components-angular/toggle/toggle.component.ts","carbon-components-angular/toggle/toggle.module.ts","carbon-components-angular/toggle/carbon-components-angular-toggle.ts"],"names":[],"mappings":"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","sourcesContent":["import { Checkbox } from \"carbon-components-angular/checkbox\";\nimport {\n\tChangeDetectorRef,\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tTemplateRef\n} from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { Observable } from \"rxjs\";\n\n/**\n * Defines the set of states for a toggle component.\n */\nexport enum ToggleState {\n\tInit,\n\tIndeterminate,\n\tChecked,\n\tUnchecked\n}\n\n/**\n * Used to emit changes performed on toggle components.\n *\n * @deprecated since v4\n */\nexport class ToggleChange {\n\t/**\n\t * Contains the `Toggle` that has been changed.\n\t */\n\tsource: Toggle;\n\t/**\n\t * The state of the `Toggle` encompassed in the `ToggleChange` class.\n\t */\n\tchecked: boolean;\n}\n\n/**\n * [See demo](../../?path=/story/toggle--basic)\n *\n * ```html\n * <ibm-toggle [(ngModel)]=\"toggleState\">Toggle</ibm-toggle>\n * ```\n *\n * <example-url>../../iframe.html?id=toggle--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-toggle\",\n\ttemplate: `\n\t\t<label *ngIf=\"label\" [id]=\"ariaLabelledby\" class=\"bx--label\">\n\t\t\t<ng-container *ngIf=\"!isTemplate(label)\">{{label}}</ng-container>\n\t\t\t<ng-template *ngIf=\"isTemplate(label)\" [ngTemplateOutlet]=\"label\"></ng-template>\n\t\t</label>\n\t\t<input\n\t\t\tclass=\"bx--toggle-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--toggle-input--small': size === 'sm',\n\t\t\t\t'bx--skeleton': skeleton\n\t\t\t}\"\n\t\t\t[id]=\"id\"\n\t\t\t[value]=\"value\"\n\t\t\t[name]=\"name\"\n\t\t\t[required]=\"required\"\n\t\t\t[checked]=\"checked\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[attr.aria-labelledby]=\"ariaLabelledby\"\n\t\t\t[attr.aria-checked]=\"checked\"\n\t\t\t(change)=\"onChange($event)\"\n\t\t\t(click)=\"onClick($event)\">\n\t\t<label\n\t\t\tclass=\"bx--toggle-input__label\"\n\t\t\t[for]=\"id\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--skeleton': skeleton\n\t\t\t}\">\n\t\t\t<span class=\"bx--toggle__switch\">\n\t\t\t\t<span class=\"bx--toggle__text--off\">{{(!skeleton ? getOffText() : null) | async }}</span>\n\t\t\t\t<span class=\"bx--toggle__text--on\">{{(!skeleton ? getOnText() : null) | async}}</span>\n\t\t\t</span>\n\t\t</label>\n\t`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: Toggle,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class Toggle extends Checkbox {\n\t/**\n\t * Variable used for creating unique ids for toggle components.\n\t */\n\tstatic toggleCount = 0;\n\n\t/**\n\t * Text that is set on the left side of the toggle.\n\t */\n\t@Input()\n\tset offText(value: string | Observable<string>) {\n\t\tthis._offValues.override(value);\n\t}\n\n\tget offText() {\n\t\treturn this._offValues.value;\n\t}\n\n\t/**\n\t * Text that is set on the right side of the toggle.\n\t */\n\t@Input()\n\tset onText(value: string | Observable<string>) {\n\t\tthis._onValues.override(value);\n\t}\n\n\tget onText() {\n\t\treturn this._onValues.value;\n\t}\n\t/**\n\t * Text that is set as the label of the toggle.\n\t */\n\t@Input() label: string | TemplateRef<any>;\n\t/**\n\t * Size of the toggle component.\n\t */\n\t@Input() size: \"sm\" | \"md\" = \"md\";\n\t/**\n\t * Set to `true` for a loading toggle.\n\t */\n\t@Input() skeleton = false;\n\n\t/**\n\t * The unique id allocated to the `Toggle`.\n\t */\n\tid = \"toggle-\" + Toggle.toggleCount;\n\n\t/**\n\t * Emits event notifying other classes when a change in state occurs on a toggle after a\n\t * click.\n\t *\n\t * @deprecated since v4\n\t */\n\t@Output() change = new EventEmitter<ToggleChange>();\n\n\tprotected _offValues = this.i18n.getOverridable(\"TOGGLE.OFF\");\n\tprotected _onValues = this.i18n.getOverridable(\"TOGGLE.ON\");\n\t/**\n\t * Creates an instance of Toggle.\n\t */\n\tconstructor(protected changeDetectorRef: ChangeDetectorRef, protected i18n: I18n) {\n\t\tsuper(changeDetectorRef);\n\t\tToggle.toggleCount++;\n\t}\n\n\tgetOffText(): Observable<string> {\n\t\treturn this._offValues.subject;\n\t}\n\n\tgetOnText(): Observable<string> {\n\t\treturn this._onValues.subject;\n\t}\n\n\t/**\n\t * Creates instance of `ToggleChange` used to propagate the change event.\n\t */\n\temitChangeEvent() {\n\t\t/* begin deprecation */\n\t\tlet event = new ToggleChange();\n\t\tevent.source = this;\n\t\tevent.checked = this.checked;\n\t\tthis.change.emit(event);\n\t\t/* end deprecation */\n\n\t\tthis.checkedChange.emit(this.checked);\n\t\tthis.propagateChange(this.checked);\n\t}\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n}\n","// modules\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\n\n// imports\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { Toggle } from \"./toggle.component\";\n\n@NgModule({\n\tdeclarations: [\n\t\tToggle\n\t],\n\texports: [\n\t\tToggle\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tI18nModule\n\t]\n})\nexport class ToggleModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}