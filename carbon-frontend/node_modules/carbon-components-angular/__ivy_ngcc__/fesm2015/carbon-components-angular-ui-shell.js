/**
 *
 * carbon-angular v0.0.0 | carbon-components-angular-ui-shell.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { IconModule } from 'carbon-components-angular/icon';
import { Subscription } from 'rxjs';
import { DomSanitizer } from '@angular/platform-browser';
import { Router, RouterModule } from '@angular/router';
import { Component, Input, Optional, Output, EventEmitter, TemplateRef, HostListener, ElementRef, HostBinding, NgModule, ViewEncapsulation, ContentChildren } from '@angular/core';
import { CommonModule } from '@angular/common';
import { I18n, I18nModule } from 'carbon-components-angular/i18n';

/**
 * A fixed header and navigation.
 * Header may contain a Hamburger menu to toggle the side navigation, navigation actions,
 * and global actions (generally in the form of `Panel`s).
 *
 * [See demo](../../?path=/story/ui-shell--header)
 *
 * <example-url>../../iframe.html?id=ui-shell--header</example-url>
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'carbon-components-angular/i18n';
import * as ɵngcc2 from '@angular/platform-browser';
import * as ɵngcc3 from '@angular/router';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from 'carbon-components-angular/icon';

function Header_a_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("href", ctx_r0.skipTo, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r0.i18n.get("UI_SHELL.SKIP_TO")), " ");
} }
function Header_3_ng_template_0_Template(rf, ctx) { }
function Header_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, Header_3_ng_template_0_Template, 0, 0, "ng-template", 5);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.brand);
} }
function Header_ng_container_4_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 9);
    ɵngcc0.ɵɵlistener("click", function Header_ng_container_4_a_1_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.navigate($event); });
    ɵngcc0.ɵɵelementStart(1, "span", 10);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("href", ctx_r4.href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("", ctx_r4.brand, "\u00A0");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.name, " ");
} }
function Header_ng_container_4_a_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 11);
    ɵngcc0.ɵɵelementStart(1, "span", 10);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("routerLink", ctx_r5.route);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("", ctx_r5.brand, "\u00A0");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.name, " ");
} }
function Header_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 6);
    ɵngcc0.ɵɵtemplate(1, Header_ng_container_4_a_1_Template, 4, 3, "a", 7);
    ɵngcc0.ɵɵtemplate(2, Header_ng_container_4_a_2_Template, 4, 3, "a", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r2.useRouter);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", true);
} }
const _c0 = [[["ibm-hamburger"]], "*"];
const _c1 = ["ibm-hamburger", "*"];
function HeaderItem_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function HeaderItem_a_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c2 = function (a0) { return { "bx--header__menu-item--current": a0 }; };
function HeaderItem_a_4_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 5);
    ɵngcc0.ɵɵlistener("click", function HeaderItem_a_4_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.navigate($event); });
    ɵngcc0.ɵɵtemplate(1, HeaderItem_a_4_ng_container_1_Template, 1, 0, "ng-container", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c2, ctx_r2.isCurrentPage))("href", ctx_r2.href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
function HeaderItem_a_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c3 = function () { return ["bx--header__menu-item--current"]; };
function HeaderItem_a_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 7);
    ɵngcc0.ɵɵtemplate(1, HeaderItem_a_5_ng_container_1_Template, 1, 0, "ng-container", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵproperty("routerLinkActive", ɵngcc0.ɵɵpureFunction0(5, _c3))("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c2, ctx_r3.isCurrentPage))("routerLink", ctx_r3.route)("routerLinkActive", ctx_r3.activeLinkClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
const _c4 = ["*"];
function HeaderMenu_3_ng_template_0_Template(rf, ctx) { }
function HeaderMenu_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, HeaderMenu_3_ng_template_0_Template, 0, 0, "ng-template", 6);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.icon);
} }
function HeaderMenu_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 7);
    ɵngcc0.ɵɵelement(1, "path", 8);
    ɵngcc0.ɵɵelementEnd();
} }
function HeaderMenu_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "ibm-header-item", 9);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const headerItem_r5 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("href", headerItem_r5.href)("route", headerItem_r5.route)("routeExtras", headerItem_r5.routeExtras);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", headerItem_r5.content, " ");
} }
function HeaderNavigation_ng_container_3_ibm_header_item_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ibm-header-item", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const navigationItem_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("href", navigationItem_r1.href)("route", navigationItem_r1.route)("routeExtras", navigationItem_r1.routeExtras);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", navigationItem_r1.content, " ");
} }
function HeaderNavigation_ng_container_3_ibm_header_menu_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "ibm-header-menu", 6);
} if (rf & 2) {
    const navigationItem_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("href", navigationItem_r1.href)("title", navigationItem_r1.title)("trigger", navigationItem_r1.trigger ? navigationItem_r1.trigger : "click")("headerItems", navigationItem_r1.menuItems);
} }
function HeaderNavigation_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, HeaderNavigation_ng_container_3_ibm_header_item_1_Template, 2, 4, "ibm-header-item", 3);
    ɵngcc0.ɵɵtemplate(2, HeaderNavigation_ng_container_3_ibm_header_menu_2_Template, 1, 4, "ibm-header-menu", 4);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const navigationItem_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", navigationItem_r1.type === "item");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", navigationItem_r1.type === "menu");
} }
const _c5 = function (a0) { return { "bx--header__action--active": a0 }; };
function Hamburger__svg_svg_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelement(0, "svg", 3);
} }
function Hamburger__svg_svg_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelement(0, "svg", 4);
} }
function SideNav_ng_container_4_ibm_sidenav_item_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ibm-sidenav-item", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const navigationItem_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("href", navigationItem_r2.href)("route", navigationItem_r2.route)("routeExtras", navigationItem_r2.routeExtras);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", navigationItem_r2.content, " ");
} }
function SideNav_ng_container_4_ibm_sidenav_menu_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "ibm-sidenav-menu", 9);
} if (rf & 2) {
    const navigationItem_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("title", navigationItem_r2.title)("menuItems", navigationItem_r2.menuItems);
} }
function SideNav_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, SideNav_ng_container_4_ibm_sidenav_item_1_Template, 2, 4, "ibm-sidenav-item", 6);
    ɵngcc0.ɵɵtemplate(2, SideNav_ng_container_4_ibm_sidenav_menu_2_Template, 1, 2, "ibm-sidenav-menu", 7);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const navigationItem_r2 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", navigationItem_r2.type === "item");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", navigationItem_r2.type === "menu");
} }
function SideNav_button_7__svg_svg_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 14);
    ɵngcc0.ɵɵelement(1, "path", 15);
    ɵngcc0.ɵɵelementEnd();
} }
function SideNav_button_7__svg_svg_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 14);
    ɵngcc0.ɵɵelement(1, "path", 16);
    ɵngcc0.ɵɵelementEnd();
} }
function SideNav_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function SideNav_button_7_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.toggle(); });
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵelementStart(2, "div", 11);
    ɵngcc0.ɵɵtemplate(3, SideNav_button_7__svg_svg_3_Template, 2, 0, "svg", 12);
    ɵngcc0.ɵɵtemplate(4, SideNav_button_7__svg_svg_4_Template, 2, 0, "svg", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "span", 13);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(1, 4, ctx_r1.expanded ? ctx_r1.i18n.get("UI_SHELL.SIDE_NAV.TOGGLE_CLOSE") : ctx_r1.i18n.get("UI_SHELL.SIDE_NAV.TOGGLE_OPEN")));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.expanded);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.expanded);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(7, 6, ctx_r1.expanded ? ctx_r1.i18n.get("UI_SHELL.SIDE_NAV.TOGGLE_CLOSE") : ctx_r1.i18n.get("UI_SHELL.SIDE_NAV.TOGGLE_OPEN")), " ");
} }
const _c6 = [[["ibm-sidenav-header"]], "*"];
const _c7 = ["ibm-sidenav-header", "*"];
function SideNavItem_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵprojection(1, 1);
    ɵngcc0.ɵɵelementEnd();
} }
const _c8 = ["*", [["svg"], ["", "icon", ""]]];
const _c9 = function (a0, a1) { return { "bx--side-nav__item": a0, "bx--side-nav__menu-item": a1 }; };
const _c10 = ["*", "svg, [icon]"];
function SideNavMenu_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "ibm-sidenav-item", 9);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const menuItem_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("href", menuItem_r1.href)("route", menuItem_r1.route)("routeExtras", menuItem_r1.routeExtras)("isSubMenu", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", menuItem_r1.content, " ");
} }
const _c11 = [[["", "icon", ""]], "*"];
const _c12 = function (a0) { return { "bx--side-nav__item--active": a0 }; };
const _c13 = ["[icon]", "*"];
const _c14 = function (a0) { return { "bx--panel--expanded": a0 }; };
const _c15 = function (a0) { return { "bx--switcher__item-link--selected": a0 }; };
class Header {
    constructor(i18n, domSanitizer, router) {
        this.i18n = i18n;
        this.domSanitizer = domSanitizer;
        this.router = router;
        /**
         * Top level branding. Defaults to "IBM"
         */
        this.brand = "IBM";
        /**
         * Use the routerLink attribute on <a> tag for navigation instead of using event handlers
         */
        this.useRouter = false;
        /**
         * Emits the navigation status promise when the link is activated
         */
        this.navigation = new EventEmitter();
        this._href = "javascript:void(0)";
    }
    /**
     * Optional link for the header
     */
    set href(v) {
        this._href = v;
    }
    get href() {
        return this.domSanitizer.bypassSecurityTrustUrl(this._href);
    }
    isTemplate(value) {
        return value instanceof TemplateRef;
    }
    navigate(event) {
        if (this.router && this.route) {
            event.preventDefault();
            const status = this.router.navigate(this.route, this.routeExtras);
            this.navigation.emit(status);
        }
    }
}
Header.ɵfac = function Header_Factory(t) { return new (t || Header)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.I18n), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Router, 8)); };
Header.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Header, selectors: [["ibm-header"]], inputs: { brand: "brand", useRouter: "useRouter", href: "href", skipTo: "skipTo", name: "name", route: "route", routeExtras: "routeExtras" }, outputs: { navigation: "navigation" }, ngContentSelectors: _c1, decls: 6, vars: 4, consts: [[1, "bx--header"], ["class", "bx--skip-to-content", "tabindex", "0", 3, "href", 4, "ngIf"], [4, "ngIf"], [3, "ngSwitch", 4, "ngIf"], ["tabindex", "0", 1, "bx--skip-to-content", 3, "href"], [3, "ngTemplateOutlet"], [3, "ngSwitch"], ["class", "bx--header__name", 3, "href", "click", 4, "ngSwitchCase"], ["class", "bx--header__name", 3, "routerLink", 4, "ngSwitchCase"], [1, "bx--header__name", 3, "href", "click"], [1, "bx--header__name--prefix"], [1, "bx--header__name", 3, "routerLink"]], template: function Header_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "header", 0);
        ɵngcc0.ɵɵtemplate(1, Header_a_1_Template, 3, 4, "a", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵtemplate(3, Header_3_Template, 1, 1, undefined, 2);
        ɵngcc0.ɵɵtemplate(4, Header_ng_container_4_Template, 3, 3, "ng-container", 3);
        ɵngcc0.ɵɵprojection(5, 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-label", ctx.brand + " " + ctx.name);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.skipTo);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isTemplate(ctx.brand));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isTemplate(ctx.brand));
    } }, directives: [ɵngcc4.NgIf, ɵngcc4.NgTemplateOutlet, ɵngcc4.NgSwitch, ɵngcc4.NgSwitchCase, ɵngcc3.RouterLinkWithHref], pipes: [ɵngcc4.AsyncPipe], encapsulation: 2 });
/** @nocollapse */
Header.ctorParameters = () => [
    { type: I18n },
    { type: DomSanitizer },
    { type: Router, decorators: [{ type: Optional }] }
];
Header.propDecorators = {
    skipTo: [{ type: Input }],
    name: [{ type: Input }],
    brand: [{ type: Input }],
    href: [{ type: Input }],
    route: [{ type: Input }],
    routeExtras: [{ type: Input }],
    useRouter: [{ type: Input }],
    navigation: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Header, [{
        type: Component,
        args: [{
                selector: "ibm-header",
                template: `
		<header
			class="bx--header"
			[attr.aria-label]="brand + ' ' + name">
			<a
				*ngIf="skipTo"
				class="bx--skip-to-content"
				[href]="skipTo"
				tabindex="0">
				{{ i18n.get("UI_SHELL.SKIP_TO") | async }}
			</a>
			<ng-content select="ibm-hamburger"></ng-content>
			<ng-template
				*ngIf="isTemplate(brand)"
				[ngTemplateOutlet]="brand">
			</ng-template>
			<ng-container *ngIf="!isTemplate(brand)" [ngSwitch]="useRouter">
				<a
					*ngSwitchCase="false"
					class="bx--header__name"
					[href]="href"
					(click)="navigate($event)">
					<span class="bx--header__name--prefix">{{brand}}&nbsp;</span>
					{{name}}
				</a>
				<a
					*ngSwitchCase="true"
					class="bx--header__name"
					[routerLink]="route">
					<span class="bx--header__name--prefix">{{brand}}&nbsp;</span>
					{{name}}
				</a>
			</ng-container>
			<ng-content></ng-content>
		</header>
	`
            }]
    }], function () { return [{ type: ɵngcc1.I18n }, { type: ɵngcc2.DomSanitizer }, { type: ɵngcc3.Router, decorators: [{
                type: Optional
            }] }]; }, { brand: [{
            type: Input
        }], useRouter: [{
            type: Input
        }], navigation: [{
            type: Output
        }], href: [{
            type: Input
        }], skipTo: [{
            type: Input
        }], name: [{
            type: Input
        }], route: [{
            type: Input
        }], routeExtras: [{
            type: Input
        }] }); })();

/**
 * Individual item in the header. May be used a direct child of `HeaderNavigation` or `HeaderMenu`
 */
class HeaderItem {
    constructor(domSanitizer, router) {
        this.domSanitizer = domSanitizer;
        this.router = router;
        /**
         * Use the routerLink attribute on <a> tag for navigation instead of using event handlers
         */
        this.useRouter = false;
        /**
         * Emits the navigation status promise when the link is activated
         */
        this.navigation = new EventEmitter();
        this._href = "javascript:void(0)";
    }
    set href(v) {
        // Needed when component is created dynamically with a model.
        if (v === undefined) {
            return;
        }
        this._href = v;
    }
    get href() {
        return this.domSanitizer.bypassSecurityTrustUrl(this._href);
    }
    navigate(event) {
        if (this.router && this.route) {
            event.preventDefault();
            const status = this.router.navigate(this.route, this.routeExtras);
            this.navigation.emit(status);
        }
    }
}
HeaderItem.ɵfac = function HeaderItem_Factory(t) { return new (t || HeaderItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Router, 8)); };
HeaderItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderItem, selectors: [["ibm-header-item"]], inputs: { useRouter: "useRouter", href: "href", activeLinkClass: "activeLinkClass", isCurrentPage: "isCurrentPage", route: "route", routeExtras: "routeExtras" }, outputs: { navigation: "navigation" }, ngContentSelectors: _c4, decls: 6, vars: 3, consts: [[2, "height", "100%"], [3, "ngSwitch"], ["content", ""], ["class", "bx--header__menu-item", "role", "menuitem", "tabindex", "0", 3, "ngClass", "href", "click", 4, "ngSwitchCase"], ["class", "bx--header__menu-item", "role", "menuitem", "tabindex", "0", 3, "routerLinkActive", "ngClass", "routerLink", 4, "ngSwitchCase"], ["role", "menuitem", "tabindex", "0", 1, "bx--header__menu-item", 3, "ngClass", "href", "click"], [4, "ngTemplateOutlet"], ["role", "menuitem", "tabindex", "0", 1, "bx--header__menu-item", 3, "routerLinkActive", "ngClass", "routerLink"]], template: function HeaderItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵelementContainerStart(1, 1);
        ɵngcc0.ɵɵtemplate(2, HeaderItem_ng_template_2_Template, 1, 0, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(4, HeaderItem_a_4_Template, 2, 5, "a", 3);
        ɵngcc0.ɵɵtemplate(5, HeaderItem_a_5_Template, 2, 8, "a", 4);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.useRouter);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngSwitchCase", false);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", true);
    } }, directives: [ɵngcc4.NgSwitch, ɵngcc4.NgSwitchCase, ɵngcc4.NgClass, ɵngcc4.NgTemplateOutlet, ɵngcc3.RouterLinkWithHref, ɵngcc3.RouterLinkActive], encapsulation: 2 });
/** @nocollapse */
HeaderItem.ctorParameters = () => [
    { type: DomSanitizer },
    { type: Router, decorators: [{ type: Optional }] }
];
HeaderItem.propDecorators = {
    href: [{ type: Input }],
    useRouter: [{ type: Input }],
    activeLinkClass: [{ type: Input }],
    isCurrentPage: [{ type: Input }],
    route: [{ type: Input }],
    routeExtras: [{ type: Input }],
    navigation: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderItem, [{
        type: Component,
        args: [{
                selector: "ibm-header-item",
                template: `
		<li style="height: 100%">
			<ng-container [ngSwitch]="useRouter">
				<ng-template #content><ng-content></ng-content></ng-template>
				<a
					*ngSwitchCase="false"
					class="bx--header__menu-item"
					role="menuitem"
					tabindex="0"
					[ngClass]="{'bx--header__menu-item--current' : isCurrentPage}"
					[href]="href"
					(click)="navigate($event)">
					<ng-container *ngTemplateOutlet="content"></ng-container>
				</a>
				<a
					*ngSwitchCase="true"
					class="bx--header__menu-item"
					role="menuitem"
					[routerLinkActive]="['bx--header__menu-item--current']"
					tabindex="0"
					[ngClass]="{'bx--header__menu-item--current' : isCurrentPage}"
					[routerLink]="route"
					[routerLinkActive]="activeLinkClass">
					<ng-container *ngTemplateOutlet="content"></ng-container>
				</a>
			</ng-container>
		</li>
	`
            }]
    }], function () { return [{ type: ɵngcc2.DomSanitizer }, { type: ɵngcc3.Router, decorators: [{
                type: Optional
            }] }]; }, { useRouter: [{
            type: Input
        }], navigation: [{
            type: Output
        }], href: [{
            type: Input
        }], activeLinkClass: [{
            type: Input
        }], isCurrentPage: [{
            type: Input
        }], route: [{
            type: Input
        }], routeExtras: [{
            type: Input
        }] }); })();

/**
 * Dropdown menu container for navigation items.
 */
class HeaderMenu {
    constructor(domSanitizer, elementRef) {
        this.domSanitizer = domSanitizer;
        this.elementRef = elementRef;
        this.trigger = "click";
        this.expanded = false;
        this._href = "javascript:void(0)";
    }
    set href(v) {
        // Needed when component is created dynamically with a model.
        if (v === undefined) {
            return;
        }
        this._href = v;
    }
    get href() {
        return this.domSanitizer.bypassSecurityTrustUrl(this._href);
    }
    onClick() {
        if (this.trigger === "click") {
            this.expanded = !this.expanded;
        }
    }
    onMouseOver() {
        if (this.trigger === "mouseover") {
            this.expanded = true;
        }
    }
    onMouseOut() {
        if (this.trigger === "mouseover") {
            this.expanded = false;
        }
    }
    onFocusOut(event) {
        if (!this.elementRef.nativeElement.contains(event.relatedTarget)) {
            this.expanded = false;
        }
    }
}
HeaderMenu.ɵfac = function HeaderMenu_Factory(t) { return new (t || HeaderMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
HeaderMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderMenu, selectors: [["ibm-header-menu"]], hostBindings: function HeaderMenu_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function HeaderMenu_click_HostBindingHandler() { return ctx.onClick(); })("mouseover", function HeaderMenu_mouseover_HostBindingHandler() { return ctx.onMouseOver(); })("mouseout", function HeaderMenu_mouseout_HostBindingHandler() { return ctx.onMouseOut(); })("focusout", function HeaderMenu_focusout_HostBindingHandler($event) { return ctx.onFocusOut($event); });
    } }, inputs: { trigger: "trigger", href: "href", title: "title", headerItems: "headerItems", icon: "icon" }, ngContentSelectors: _c4, decls: 9, vars: 7, consts: [[1, "bx--header__submenu", 2, "height", "100%"], ["role", "menuitem", "tabindex", "0", "aria-haspopup", "true", 1, "bx--header__menu-item", "bx--header__menu-title", 3, "href"], [4, "ngIf", "ngIfElse"], ["defaultIcon", ""], ["role", "menu", 1, "bx--header__menu"], [4, "ngFor", "ngForOf"], [3, "ngTemplateOutlet"], ["width", "12", "height", "7", "aria-hidden", "true", 1, "bx--header__menu-arrow"], ["d", "M6.002 5.55L11.27 0l.726.685L6.003 7 0 .685.726 0z"], [3, "href", "route", "routeExtras"]], template: function HeaderMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵelementStart(1, "a", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵtemplate(3, HeaderMenu_3_Template, 1, 1, undefined, 2);
        ɵngcc0.ɵɵtemplate(4, HeaderMenu_ng_template_4_Template, 2, 0, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "ul", 4);
        ɵngcc0.ɵɵprojection(7);
        ɵngcc0.ɵɵtemplate(8, HeaderMenu_ng_container_8_Template, 3, 4, "ng-container", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(5);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("href", ctx.href, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵattribute("aria-expanded", ctx.expanded);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.title, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.icon)("ngIfElse", _r1);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵattribute("aria-label", ctx.title);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.headerItems);
    } }, directives: [ɵngcc4.NgIf, ɵngcc4.NgForOf, ɵngcc4.NgTemplateOutlet, HeaderItem], encapsulation: 2 });
/** @nocollapse */
HeaderMenu.ctorParameters = () => [
    { type: DomSanitizer },
    { type: ElementRef }
];
HeaderMenu.propDecorators = {
    title: [{ type: Input }],
    href: [{ type: Input }],
    trigger: [{ type: Input }],
    headerItems: [{ type: Input }],
    icon: [{ type: Input }],
    onClick: [{ type: HostListener, args: ["click",] }],
    onMouseOver: [{ type: HostListener, args: ["mouseover",] }],
    onMouseOut: [{ type: HostListener, args: ["mouseout",] }],
    onFocusOut: [{ type: HostListener, args: ["focusout", ["$event"],] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderMenu, [{
        type: Component,
        args: [{
                selector: "ibm-header-menu",
                template: `
		<li
			class="bx--header__submenu"
			style="height: 100%">
			<a
				class="bx--header__menu-item bx--header__menu-title"
				[href]="href"
				role="menuitem"
				tabindex="0"
				aria-haspopup="true"
				[attr.aria-expanded]="expanded">
				{{title}}
				<ng-template *ngIf="icon; else defaultIcon" [ngTemplateOutlet]="icon"></ng-template>
				<ng-template #defaultIcon>
					<svg class="bx--header__menu-arrow" width="12" height="7" aria-hidden="true">
						<path d="M6.002 5.55L11.27 0l.726.685L6.003 7 0 .685.726 0z" />
					</svg>
				</ng-template>
			</a>
			<ul class="bx--header__menu" role="menu" [attr.aria-label]="title">
				<ng-content></ng-content>
				<ng-container *ngFor="let headerItem of headerItems">
					<ibm-header-item
						[href]="headerItem.href"
						[route]="headerItem.route"
						[routeExtras]="headerItem.routeExtras">
						{{ headerItem.content }}
					</ibm-header-item>
				</ng-container>
			</ul>
		</li>
	`
            }]
    }], function () { return [{ type: ɵngcc2.DomSanitizer }, { type: ɵngcc0.ElementRef }]; }, { trigger: [{
            type: Input
        }], href: [{
            type: Input
        }], onClick: [{
            type: HostListener,
            args: ["click"]
        }], onMouseOver: [{
            type: HostListener,
            args: ["mouseover"]
        }], onMouseOut: [{
            type: HostListener,
            args: ["mouseout"]
        }], onFocusOut: [{
            type: HostListener,
            args: ["focusout", ["$event"]]
        }], title: [{
            type: Input
        }], headerItems: [{
            type: Input
        }], icon: [{
            type: Input
        }] }); })();

/**
 * Container for header navigation items
 */
class HeaderNavigation {
    constructor() {
        this.height = 100;
    }
}
HeaderNavigation.ɵfac = function HeaderNavigation_Factory(t) { return new (t || HeaderNavigation)(); };
HeaderNavigation.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderNavigation, selectors: [["ibm-header-navigation"]], hostVars: 2, hostBindings: function HeaderNavigation_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("height", ctx.height, "%");
    } }, inputs: { ariaLabel: "ariaLabel", navigationItems: "navigationItems" }, ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[1, "bx--header__nav"], ["role", "menubar", 1, "bx--header__menu-bar"], [4, "ngFor", "ngForOf"], [3, "href", "route", "routeExtras", 4, "ngIf"], [3, "href", "title", "trigger", "headerItems", 4, "ngIf"], [3, "href", "route", "routeExtras"], [3, "href", "title", "trigger", "headerItems"]], template: function HeaderNavigation_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "nav", 0);
        ɵngcc0.ɵɵelementStart(1, "ul", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵtemplate(3, HeaderNavigation_ng_container_3_Template, 3, 2, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-label", ctx.ariaLabel);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.navigationItems);
    } }, directives: [ɵngcc4.NgForOf, ɵngcc4.NgIf, HeaderItem, HeaderMenu], encapsulation: 2 });
HeaderNavigation.propDecorators = {
    height: [{ type: HostBinding, args: ["style.height.%",] }],
    ariaLabel: [{ type: Input }],
    navigationItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderNavigation, [{
        type: Component,
        args: [{
                selector: "ibm-header-navigation",
                template: `
		<nav class="bx--header__nav" [attr.aria-label]="ariaLabel">
			<ul class="bx--header__menu-bar" role="menubar">
				<ng-content></ng-content>
				<ng-container *ngFor="let navigationItem of navigationItems">
					<ibm-header-item
						*ngIf="navigationItem.type === 'item'"
						[href]="navigationItem.href"
						[route]="navigationItem.route"
						[routeExtras]="navigationItem.routeExtras">
						{{ navigationItem.content }}
					</ibm-header-item>
					<ibm-header-menu
						*ngIf="navigationItem.type === 'menu'"
						[href]="navigationItem.href"
						[title]="navigationItem.title"
						[trigger]="navigationItem.trigger ? navigationItem.trigger : 'click'"
						[headerItems]="navigationItem.menuItems">
					</ibm-header-menu>
				</ng-container>
			</ul>
		</nav>
	`
            }]
    }], function () { return []; }, { height: [{
            type: HostBinding,
            args: ["style.height.%"]
        }], ariaLabel: [{
            type: Input
        }], navigationItems: [{
            type: Input
        }] }); })();

/**
 * Container for `HeaderAction`s.
 */
class HeaderGlobal {
    constructor() {
        this.hostClass = true;
    }
}
HeaderGlobal.ɵfac = function HeaderGlobal_Factory(t) { return new (t || HeaderGlobal)(); };
HeaderGlobal.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderGlobal, selectors: [["ibm-header-global"]], hostVars: 2, hostBindings: function HeaderGlobal_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("bx--header__global", ctx.hostClass);
    } }, ngContentSelectors: _c4, decls: 1, vars: 0, template: function HeaderGlobal_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
HeaderGlobal.propDecorators = {
    hostClass: [{ type: HostBinding, args: ["class.bx--header__global",] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderGlobal, [{
        type: Component,
        args: [{
                selector: "ibm-header-global",
                template: `
		<ng-content></ng-content>
	`
            }]
    }], function () { return []; }, { hostClass: [{
            type: HostBinding,
            args: ["class.bx--header__global"]
        }] }); })();

/**
 * Contained by `HeaderGlobal`. Generally used to trigger `Panel`s
 */
class HeaderAction {
    constructor() {
        /**
         * Title. Populates the aria-label as well as the browser `title` tooltip
         */
        this.title = "";
        /**
         * Toggles the active state. May be used to toggle a `Panel`s active state.
         */
        this.active = false;
        /**
         * "Change" emitter to allow double binding to the `active` Input.
         */
        this.activeChange = new EventEmitter();
        /**
         * Emits when the action has been clicked.
         */
        this.selected = new EventEmitter();
    }
    onClick() {
        this.active = !this.active;
        this.selected.emit(this.active);
        this.activeChange.emit(this.active);
    }
}
HeaderAction.ɵfac = function HeaderAction_Factory(t) { return new (t || HeaderAction)(); };
HeaderAction.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderAction, selectors: [["ibm-header-action"]], inputs: { title: "title", active: "active", ariaLabel: "ariaLabel" }, outputs: { activeChange: "activeChange", selected: "selected" }, ngContentSelectors: _c4, decls: 2, vars: 5, consts: [[1, "bx--header__action", 3, "ngClass", "title", "click"]], template: function HeaderAction_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "button", 0);
        ɵngcc0.ɵɵlistener("click", function HeaderAction_Template_button_click_0_listener() { return ctx.onClick(); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c5, ctx.active))("title", ctx.title);
        ɵngcc0.ɵɵattribute("aria-label", ctx.ariaLabel);
    } }, directives: [ɵngcc4.NgClass], encapsulation: 2 });
HeaderAction.propDecorators = {
    title: [{ type: Input }],
    ariaLabel: [{ type: Input }],
    active: [{ type: Input }],
    activeChange: [{ type: Output }],
    selected: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderAction, [{
        type: Component,
        args: [{
                selector: "ibm-header-action",
                template: `
		<button
			class="bx--header__action"
			[ngClass]="{
				'bx--header__action--active': active
			}"
			[title]="title"
			[attr.aria-label]="ariaLabel"
			(click)="onClick()">
			<ng-content></ng-content>
		</button>
	`
            }]
    }], function () { return []; }, { title: [{
            type: Input
        }], active: [{
            type: Input
        }], activeChange: [{
            type: Output
        }], selected: [{
            type: Output
        }], ariaLabel: [{
            type: Input
        }] }); })();

/**
 * A toggle for the side navigation
 */
class Hamburger {
    constructor(i18n) {
        this.i18n = i18n;
        /**
         * Controls the active/selected state for the `Hamburger` menu.
         */
        this.active = false;
        /**
         * `EventEmitter` to notify parent components of menu click events.
         */
        this.selected = new EventEmitter();
    }
    /**
     * Emit the Hamburger click event upwards.
     */
    doClick() {
        this.selected.emit(this.active);
    }
}
Hamburger.ɵfac = function Hamburger_Factory(t) { return new (t || Hamburger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.I18n)); };
Hamburger.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Hamburger, selectors: [["ibm-hamburger"]], inputs: { active: "active" }, outputs: { selected: "selected" }, decls: 7, vars: 15, consts: [["type", "button", 1, "bx--header__menu-trigger", "bx--header__action", "bx--header__menu-toggle", 3, "ngClass", "click"], ["ibmIcon", "menu", "size", "20", 4, "ngIf"], ["ibmIcon", "close", "size", "20", 4, "ngIf"], ["ibmIcon", "menu", "size", "20"], ["ibmIcon", "close", "size", "20"]], template: function Hamburger_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "button", 0);
        ɵngcc0.ɵɵlistener("click", function Hamburger_Template_button_click_0_listener() { return ctx.doClick(); });
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵpipe(2, "async");
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵpipe(4, "async");
        ɵngcc0.ɵɵtemplate(5, Hamburger__svg_svg_5_Template, 1, 0, "svg", 1);
        ɵngcc0.ɵɵtemplate(6, Hamburger__svg_svg_6_Template, 1, 0, "svg", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(13, _c5, ctx.active));
        ɵngcc0.ɵɵattribute("aria-label", ctx.active ? ɵngcc0.ɵɵpipeBind1(1, 5, ctx.i18n.get("UI_SHELL.HEADER.CLOSE_MENU")) : ɵngcc0.ɵɵpipeBind1(2, 7, ctx.i18n.get("UI_SHELL.HEADER.OPEN_MENU")))("title", ctx.active ? ɵngcc0.ɵɵpipeBind1(3, 9, ctx.i18n.get("UI_SHELL.HEADER.CLOSE_MENU")) : ɵngcc0.ɵɵpipeBind1(4, 11, ctx.i18n.get("UI_SHELL.HEADER.OPEN_MENU")));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.active);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.active);
    } }, directives: [ɵngcc4.NgClass, ɵngcc4.NgIf, ɵngcc5.IconDirective], pipes: [ɵngcc4.AsyncPipe], encapsulation: 2 });
/** @nocollapse */
Hamburger.ctorParameters = () => [
    { type: I18n }
];
Hamburger.propDecorators = {
    active: [{ type: Input }],
    selected: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Hamburger, [{
        type: Component,
        args: [{
                selector: "ibm-hamburger",
                template: `
		<button
			type="button"
			(click)="doClick()"
			[ngClass]="{'bx--header__action--active': active}"
			class="bx--header__menu-trigger bx--header__action bx--header__menu-toggle"
			[attr.aria-label]="active
				? (i18n.get('UI_SHELL.HEADER.CLOSE_MENU') | async)
				: (i18n.get('UI_SHELL.HEADER.OPEN_MENU') | async)"
			[attr.title]="active
				? (i18n.get('UI_SHELL.HEADER.CLOSE_MENU') | async)
				: (i18n.get('UI_SHELL.HEADER.OPEN_MENU') | async)">
			<svg *ngIf="!active" ibmIcon="menu" size="20"></svg>
			<svg *ngIf="active" ibmIcon="close" size="20"></svg>
		</button>
	`
            }]
    }], function () { return [{ type: ɵngcc1.I18n }]; }, { active: [{
            type: Input
        }], selected: [{
            type: Output
        }] }); })();

class HeaderModule {
}
HeaderModule.ɵfac = function HeaderModule_Factory(t) { return new (t || HeaderModule)(); };
HeaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HeaderModule });
HeaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            I18nModule,
            IconModule,
            RouterModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HeaderModule, { declarations: function () { return [Header, HeaderItem, HeaderMenu, HeaderNavigation, HeaderGlobal, HeaderAction, Hamburger]; }, imports: function () { return [CommonModule,
        I18nModule,
        IconModule,
        RouterModule]; }, exports: function () { return [Header, HeaderItem, HeaderMenu, HeaderNavigation, HeaderGlobal, HeaderAction, Hamburger]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    Header,
                    HeaderItem,
                    HeaderMenu,
                    HeaderNavigation,
                    HeaderGlobal,
                    HeaderAction,
                    Hamburger
                ],
                imports: [
                    CommonModule,
                    I18nModule,
                    IconModule,
                    RouterModule
                ],
                exports: [
                    Header,
                    HeaderItem,
                    HeaderMenu,
                    HeaderNavigation,
                    HeaderGlobal,
                    HeaderAction,
                    Hamburger
                ]
            }]
    }], null, null); })();

/**
 * `Sidenav` is a fixed left navigation that may contain `SideNavItem`s or `SideNavMenu`s
 *
 * [See demo](../../?path=/story/ui-shell--side-navigation)
 *
 * <example-url>../../iframe.html?id=ui-shell--side-navigation</example-url>
 */
class SideNav {
    constructor(i18n) {
        this.i18n = i18n;
        this.role = "complementary";
        this.hostClass = true;
        this.ariaLabel = "Side navigation";
        /**
         * Controls the expanded (`true`) or collapsed (`false`) state when on a small screen.
         */
        this.expanded = true;
        /**
         * Controls the hidden (`true`) or visible (`false`) state
         */
        this.hidden = false;
        this.rail = false;
        this.ux = true;
        this.allowExpansion = false;
    }
    toggle() {
        this.expanded = !this.expanded;
    }
}
SideNav.ɵfac = function SideNav_Factory(t) { return new (t || SideNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.I18n)); };
SideNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SideNav, selectors: [["ibm-sidenav"]], hostVars: 12, hostBindings: function SideNav_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role)("aria-label", ctx.ariaLabel);
        ɵngcc0.ɵɵclassProp("bx--side-nav", ctx.hostClass)("bx--side-nav--expanded", ctx.expanded)("bx--side-nav--hidden", ctx.hidden)("bx--side-nav--rail", ctx.rail)("bx--side-nav--ux", ctx.ux);
    } }, inputs: { ariaLabel: "ariaLabel", expanded: "expanded", hidden: "hidden", rail: "rail", allowExpansion: "allowExpansion", navigationItems: "navigationItems" }, ngContentSelectors: _c7, decls: 8, vars: 3, consts: [["role", "navigation", 1, "bx--side-nav__navigation"], [1, "bx--side-nav__items"], [1, "bx--side-nav__header-navigation", "bx--side-nav__header-divider"], [4, "ngFor", "ngForOf"], [1, "bx--side-nav__footer"], ["class", "bx--side-nav__toggle", "type", "button", 3, "title", "click", 4, "ngIf"], [3, "href", "route", "routeExtras", 4, "ngIf"], [3, "title", "menuItems", 4, "ngIf"], [3, "href", "route", "routeExtras"], [3, "title", "menuItems"], ["type", "button", 1, "bx--side-nav__toggle", 3, "title", "click"], [1, "bx--side-nav__icon"], ["focusable", "false", "preserveAspectRatio", "xMidYMid meet", "style", "will-change: transform;", "xmlns", "http://www.w3.org/2000/svg", "width", "20", "height", "20", "viewBox", "0 0 32 32", "aria-hidden", "true", 4, "ngIf"], [1, "bx--assistive-text"], ["focusable", "false", "preserveAspectRatio", "xMidYMid meet", "xmlns", "http://www.w3.org/2000/svg", "width", "20", "height", "20", "viewBox", "0 0 32 32", "aria-hidden", "true", 2, "will-change", "transform"], ["d", "M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4l6.6 6.6L8 22.6 9.4 24l6.6-6.6 6.6 6.6 1.4-1.4-6.6-6.6L24 9.4z"], ["d", "M22 16L12 26l-1.4-1.4 8.6-8.6-8.6-8.6L12 6z"]], template: function SideNav_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c6);
        ɵngcc0.ɵɵelementStart(0, "nav", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementStart(2, "ul", 1);
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵtemplate(4, SideNav_ng_container_4_Template, 3, 2, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(5, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "footer", 4);
        ɵngcc0.ɵɵtemplate(7, SideNav_button_7_Template, 8, 8, "button", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-label", ctx.ariaLabel);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.navigationItems);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.allowExpansion);
    } }, directives: function () { return [ɵngcc4.NgForOf, ɵngcc4.NgIf, SideNavItem, SideNavMenu]; }, pipes: function () { return [ɵngcc4.AsyncPipe]; }, encapsulation: 2 });
/** @nocollapse */
SideNav.ctorParameters = () => [
    { type: I18n }
];
SideNav.propDecorators = {
    role: [{ type: HostBinding, args: ["attr.role",] }],
    hostClass: [{ type: HostBinding, args: ["class.bx--side-nav",] }],
    ariaLabel: [{ type: HostBinding, args: ["attr.aria-label",] }, { type: Input }],
    expanded: [{ type: HostBinding, args: ["class.bx--side-nav--expanded",] }, { type: Input }],
    hidden: [{ type: HostBinding, args: ["class.bx--side-nav--hidden",] }, { type: Input }],
    rail: [{ type: HostBinding, args: ["class.bx--side-nav--rail",] }, { type: Input }],
    ux: [{ type: HostBinding, args: ["class.bx--side-nav--ux",] }],
    allowExpansion: [{ type: Input }],
    navigationItems: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SideNav, [{
        type: Component,
        args: [{
                selector: "ibm-sidenav",
                template: `
		<nav class="bx--side-nav__navigation" role="navigation" [attr.aria-label]="ariaLabel">
			<ng-content select="ibm-sidenav-header"></ng-content>
			<ul class="bx--side-nav__items">
				<div
					class="bx--side-nav__header-navigation bx--side-nav__header-divider">
					<ng-container *ngFor="let navigationItem of navigationItems">
						<ibm-sidenav-item
							*ngIf="navigationItem.type === 'item'"
							[href]="navigationItem.href"
							[route]="navigationItem.route"
							[routeExtras]="navigationItem.routeExtras">
							{{ navigationItem.content }}
						</ibm-sidenav-item>
						<ibm-sidenav-menu
							*ngIf="navigationItem.type === 'menu'"
							[title]="navigationItem.title"
							[menuItems]="navigationItem.menuItems">
						</ibm-sidenav-menu>
					</ng-container>
				</div>
				<ng-content></ng-content>
			</ul>
			<footer class="bx--side-nav__footer">
				<button
					*ngIf="allowExpansion"
					class="bx--side-nav__toggle"
					type="button"
					[title]="(expanded ? i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_CLOSE') : i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_OPEN')) | async"
					(click)="toggle()">
					<div class="bx--side-nav__icon">
						<svg
							*ngIf="expanded"
							focusable="false"
							preserveAspectRatio="xMidYMid meet"
							style="will-change: transform;"
							xmlns="http://www.w3.org/2000/svg"
							width="20"
							height="20"
							viewBox="0 0 32 32"
							aria-hidden="true">
							<path d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4l6.6 6.6L8 22.6 9.4 24l6.6-6.6 6.6 6.6 1.4-1.4-6.6-6.6L24 9.4z"></path>
						</svg>
						<svg
							*ngIf="!expanded"
							focusable="false"
							preserveAspectRatio="xMidYMid meet"
							style="will-change: transform;"
							xmlns="http://www.w3.org/2000/svg"
							width="20"
							height="20"
							viewBox="0 0 32 32"
							aria-hidden="true">
							<path d="M22 16L12 26l-1.4-1.4 8.6-8.6-8.6-8.6L12 6z"></path>
						</svg>
					</div>
					<span class="bx--assistive-text">
						{{(expanded ? i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_CLOSE') : i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_OPEN')) | async}}
					</span>
				</button>
			</footer>
		</nav>
	`,
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.I18n }]; }, { role: [{
            type: HostBinding,
            args: ["attr.role"]
        }], hostClass: [{
            type: HostBinding,
            args: ["class.bx--side-nav"]
        }], ariaLabel: [{
            type: HostBinding,
            args: ["attr.aria-label"]
        }, {
            type: Input
        }], expanded: [{
            type: HostBinding,
            args: ["class.bx--side-nav--expanded"]
        }, {
            type: Input
        }], hidden: [{
            type: HostBinding,
            args: ["class.bx--side-nav--hidden"]
        }, {
            type: Input
        }], rail: [{
            type: HostBinding,
            args: ["class.bx--side-nav--rail"]
        }, {
            type: Input
        }], ux: [{
            type: HostBinding,
            args: ["class.bx--side-nav--ux"]
        }], allowExpansion: [{
            type: Input
        }], navigationItems: [{
            type: Input
        }] }); })();

/**
 * `SideNavItem` can either be a child of `SideNav` or `SideNavMenu`
 */
class SideNavItem {
    constructor(domSanitizer, router) {
        this.domSanitizer = domSanitizer;
        this.router = router;
        /**
         * Toggles the active (current page) state for the link.
         */
        this.active = false;
        this.isSubMenu = false;
        /**
         * Emits the navigation status promise when the link is activated
         */
        this.navigation = new EventEmitter();
        /**
         * Emits when `active` input is changed. This is mainly used to indicate to any parent menu items that a
         * child sidenav item is active or not active.
         */
        this.selected = new EventEmitter();
        this._href = "javascript:void(0)";
    }
    /**
     * Link for the item. NOTE: *do not* pass unsafe or untrusted values, this has the potential to open you up to XSS attacks
     */
    set href(v) {
        // Needed when component is created dynamically with a model.
        if (v === undefined) {
            return;
        }
        this._href = v;
    }
    get href() {
        return this.domSanitizer.bypassSecurityTrustUrl(this._href);
    }
    ngOnChanges(changes) {
        if (changes.active) {
            this.selected.emit(this.active);
        }
    }
    navigate(event) {
        if (this.router && this.route) {
            event.preventDefault();
            const status = this.router.navigate(this.route, this.routeExtras);
            this.navigation.emit(status);
        }
    }
}
SideNavItem.ɵfac = function SideNavItem_Factory(t) { return new (t || SideNavItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Router, 8)); };
SideNavItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SideNavItem, selectors: [["ibm-sidenav-item"]], inputs: { active: "active", isSubMenu: "isSubMenu", href: "href", route: "route", routeExtras: "routeExtras", title: "title" }, outputs: { navigation: "navigation", selected: "selected" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c10, decls: 5, vars: 10, consts: [[3, "ngClass"], [1, "bx--side-nav__link", 3, "href", "title", "click"], ["class", "bx--side-nav__icon", 4, "ngIf"], [1, "bx--side-nav__link-text"], [1, "bx--side-nav__icon"]], template: function SideNavItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c8);
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵelementStart(1, "a", 1);
        ɵngcc0.ɵɵlistener("click", function SideNavItem_Template_a_click_1_listener($event) { return ctx.navigate($event); });
        ɵngcc0.ɵɵtemplate(2, SideNavItem_div_2_Template, 2, 0, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "span", 3);
        ɵngcc0.ɵɵprojection(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(7, _c9, !ctx.isSubMenu, ctx.isSubMenu));
        ɵngcc0.ɵɵattribute("role", ctx.isSubMenu ? "listitem" : null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("href", ctx.href, ɵngcc0.ɵɵsanitizeUrl)("title", ctx.title);
        ɵngcc0.ɵɵattribute("role", ctx.isSubMenu ? "menuitem" : null)("aria-current", ctx.active ? "page" : null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isSubMenu);
    } }, directives: [ɵngcc4.NgClass, ɵngcc4.NgIf], encapsulation: 2 });
/** @nocollapse */
SideNavItem.ctorParameters = () => [
    { type: DomSanitizer },
    { type: Router, decorators: [{ type: Optional }] }
];
SideNavItem.propDecorators = {
    href: [{ type: Input }],
    active: [{ type: Input }],
    route: [{ type: Input }],
    isSubMenu: [{ type: Input }],
    routeExtras: [{ type: Input }],
    title: [{ type: Input }],
    navigation: [{ type: Output }],
    selected: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SideNavItem, [{
        type: Component,
        args: [{
                selector: "ibm-sidenav-item",
                template: `
		<li [ngClass]="{
			'bx--side-nav__item': !isSubMenu,
			'bx--side-nav__menu-item': isSubMenu
		}"
		[attr.role]="(isSubMenu ? 'listitem' : null)">
			<a
				class="bx--side-nav__link"
				[href]="href"
				[attr.role]="(isSubMenu ? 'menuitem' : null)"
				[attr.aria-current]="(active ? 'page' : null)"
				[title]="title"
				(click)="navigate($event)">
				<div *ngIf="!isSubMenu" class="bx--side-nav__icon">
					<ng-content select="svg, [icon]"></ng-content>
				</div>
				<span class="bx--side-nav__link-text">
					<ng-content></ng-content>
				</span>
			</a>
		</li>
	`
            }]
    }], function () { return [{ type: ɵngcc2.DomSanitizer }, { type: ɵngcc3.Router, decorators: [{
                type: Optional
            }] }]; }, { active: [{
            type: Input
        }], isSubMenu: [{
            type: Input
        }], navigation: [{
            type: Output
        }], selected: [{
            type: Output
        }], href: [{
            type: Input
        }], route: [{
            type: Input
        }], routeExtras: [{
            type: Input
        }], title: [{
            type: Input
        }] }); })();

/**
 * `SideNavMenu` provides a method to group `SideNavItem`s under a common heading.
 */
class SideNavMenu {
    constructor() {
        /**
         * Controls the visibility of the child `SideNavItem`s
         */
        this.expanded = false;
        /**
         * Controls the active status indicator on the menu if there is an active
         * child sidenav item.
         */
        this.hasActiveChild = false;
        this.activeItemsSubscription = new Subscription();
    }
    ngAfterContentInit() {
        setTimeout(() => {
            this.sidenavItems.forEach(item => {
                item.isSubMenu = true;
                this.findActiveChildren();
                const activeItemSubscription = item.selected.subscribe(() => {
                    this.findActiveChildren();
                });
                this.activeItemsSubscription.add(activeItemSubscription);
            });
            this.sidenavItems.changes.subscribe(() => {
                this.sidenavItems.forEach(item => {
                    item.isSubMenu = true;
                    this.findActiveChildren();
                    const activeItemSubscription = item.selected.subscribe(() => {
                        this.findActiveChildren();
                    });
                    this.activeItemsSubscription.add(activeItemSubscription);
                });
            });
        });
    }
    ngOnDestroy() {
        this.activeItemsSubscription.unsubscribe();
    }
    toggle() {
        this.expanded = !this.expanded;
    }
    findActiveChildren() {
        if (this.sidenavItems.some(item => item.active)) {
            this.hasActiveChild = true;
        }
        else {
            this.hasActiveChild = false;
        }
    }
}
SideNavMenu.ɵfac = function SideNavMenu_Factory(t) { return new (t || SideNavMenu)(); };
SideNavMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SideNavMenu, selectors: [["ibm-sidenav-menu"]], contentQueries: function SideNavMenu_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, SideNavItem, 0);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidenavItems = _t);
    } }, inputs: { expanded: "expanded", hasActiveChild: "hasActiveChild", title: "title", menuItems: "menuItems" }, ngContentSelectors: _c13, decls: 12, vars: 6, consts: [[1, "bx--side-nav__item", "bx--side-nav__item--icon", 3, "ngClass"], ["aria-haspopup", "true", "type", "button", 1, "bx--side-nav__submenu", 3, "click"], [1, "bx--side-nav__icon"], [1, "bx--side-nav__submenu-title"], [1, "bx--side-nav__icon", "bx--side-nav__icon--small", "bx--side-nav__submenu-chevron"], ["focusable", "false", "preserveAspectRatio", "xMidYMid meet", "xmlns", "http://www.w3.org/2000/svg", "width", "20", "height", "20", "viewBox", "0 0 32 32", "aria-hidden", "true", 2, "will-change", "transform"], ["d", "M16 22L6 12l1.4-1.4 8.6 8.6 8.6-8.6L26 12z"], ["role", "menu", 1, "bx--side-nav__menu"], [4, "ngFor", "ngForOf"], [3, "href", "route", "routeExtras", "isSubMenu"]], template: function SideNavMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c11);
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵlistener("click", function SideNavMenu_Template_button_click_1_listener() { return ctx.toggle(); });
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "span", 3);
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 4);
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(7, "svg", 5);
        ɵngcc0.ɵɵelement(8, "path", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵnamespaceHTML();
        ɵngcc0.ɵɵelementStart(9, "ul", 7);
        ɵngcc0.ɵɵprojection(10, 1);
        ɵngcc0.ɵɵtemplate(11, SideNavMenu_ng_container_11_Template, 3, 5, "ng-container", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(4, _c12, ctx.hasActiveChild));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("aria-expanded", ctx.expanded);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.menuItems);
    } }, directives: [ɵngcc4.NgClass, ɵngcc4.NgForOf, SideNavItem], encapsulation: 2 });
SideNavMenu.propDecorators = {
    title: [{ type: Input }],
    expanded: [{ type: Input }],
    hasActiveChild: [{ type: Input }],
    menuItems: [{ type: Input }],
    sidenavItems: [{ type: ContentChildren, args: [SideNavItem,] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SideNavMenu, [{
        type: Component,
        args: [{
                selector: "ibm-sidenav-menu",
                template: `
		<li
			class="bx--side-nav__item bx--side-nav__item--icon"
			[ngClass]="{ 'bx--side-nav__item--active': hasActiveChild }">
			<button
				(click)="toggle()"
				class="bx--side-nav__submenu"
				aria-haspopup="true"
				[attr.aria-expanded]="expanded"
				type="button">
				<div class="bx--side-nav__icon">
					<ng-content select="[icon]"></ng-content>
				</div>
				<span class="bx--side-nav__submenu-title">{{title}}</span>
				<div class="bx--side-nav__icon bx--side-nav__icon--small bx--side-nav__submenu-chevron">
					<svg
						focusable="false"
						preserveAspectRatio="xMidYMid meet"
						style="will-change: transform;"
						xmlns="http://www.w3.org/2000/svg"
						width="20"
						height="20"
						viewBox="0 0 32 32"
						aria-hidden="true">
						<path d="M16 22L6 12l1.4-1.4 8.6 8.6 8.6-8.6L26 12z"></path>
					</svg>
				</div>
			</button>
			<ul class="bx--side-nav__menu" role="menu">
				<ng-content></ng-content>
				<ng-container *ngFor="let menuItem of menuItems">
					<ibm-sidenav-item
						[href]="menuItem.href"
						[route]="menuItem.route"
						[routeExtras]="menuItem.routeExtras"
						[isSubMenu]="true">
						{{ menuItem.content }}
					</ibm-sidenav-item>
				</ng-container>
			</ul>
		</li>
	`
            }]
    }], function () { return []; }, { expanded: [{
            type: Input
        }], hasActiveChild: [{
            type: Input
        }], title: [{
            type: Input
        }], menuItems: [{
            type: Input
        }], sidenavItems: [{
            type: ContentChildren,
            args: [SideNavItem]
        }] }); })();

class SideNavModule {
}
SideNavModule.ɵfac = function SideNavModule_Factory(t) { return new (t || SideNavModule)(); };
SideNavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SideNavModule });
SideNavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, I18nModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SideNavModule, { declarations: function () { return [SideNav, SideNavItem, SideNavMenu]; }, imports: function () { return [CommonModule, I18nModule]; }, exports: function () { return [SideNav, SideNavItem, SideNavMenu]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SideNavModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    SideNav,
                    SideNavItem,
                    SideNavMenu
                ],
                imports: [CommonModule, I18nModule],
                exports: [
                    SideNav,
                    SideNavItem,
                    SideNavMenu
                ]
            }]
    }], null, null); })();

/**
 * `Panel` is a component that can be used to display content on the right side of the screen.
 * `Panel`s are generally activated by and linked to a `HeaderAction` component.
 */
class Panel {
    constructor() {
        /**
         * Controls the visibility of the panel
         */
        this.expanded = false;
        this.ariaLabel = "Header panel";
    }
}
Panel.ɵfac = function Panel_Factory(t) { return new (t || Panel)(); };
Panel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Panel, selectors: [["ibm-panel"]], inputs: { expanded: "expanded", ariaLabel: "ariaLabel" }, ngContentSelectors: _c4, decls: 2, vars: 4, consts: [[1, "bx--panel--overlay", 3, "ngClass"]], template: function Panel_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c14, ctx.expanded));
        ɵngcc0.ɵɵattribute("aria-label", ctx.ariaLabel);
    } }, directives: [ɵngcc4.NgClass], encapsulation: 2 });
Panel.propDecorators = {
    expanded: [{ type: Input }],
    ariaLabel: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Panel, [{
        type: Component,
        args: [{
                selector: "ibm-panel",
                template: `
		<div
			class="bx--panel--overlay"
			[attr.aria-label]="ariaLabel"
			[ngClass]="{
				'bx--panel--expanded': expanded
			}">
			<ng-content></ng-content>
		</div>
	`
            }]
    }], function () { return []; }, { expanded: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }] }); })();

/**
 * Container for switcher items.
 *
 * ```html
 * <ibm-switcher-list>
 * 	<ibm-switcher-list-item>one</ibm-switcher-list-item>
 * 	<ibm-switcher-list-item [active]="true">two</ibm-switcher-list-item>
 * 	<ibm-switcher-list-item>three</ibm-switcher-list-item>
 * </ibm-switcher-list>
 * ```
 */
class SwitcherList {
}
SwitcherList.ɵfac = function SwitcherList_Factory(t) { return new (t || SwitcherList)(); };
SwitcherList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SwitcherList, selectors: [["ibm-switcher-list"]], ngContentSelectors: _c4, decls: 2, vars: 0, consts: [[1, "bx--switcher"]], template: function SwitcherList_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SwitcherList, [{
        type: Component,
        args: [{
                selector: "ibm-switcher-list",
                template: `
		<ul class="bx--switcher">
			<ng-content></ng-content>
		</ul>
	`
            }]
    }], null, null); })();

/**
 * Represents an item in a switcher list.
 */
class SwitcherListItem {
    constructor(domSanitizer, router) {
        this.domSanitizer = domSanitizer;
        this.router = router;
        /**
         * Enables the "active" state for an item. Commonly used to indicate the current page or selection.
         */
        this.active = false;
        /**
         * Emits the navigation status promise when the link is activated
         */
        this.navigation = new EventEmitter();
        this.itemClass = true;
        this.itemRole = "listitem";
        this._href = "javascript:void(0)";
        this._target = "";
    }
    /**
     * Optional link for the underlying anchor.
     */
    set href(value) {
        this._href = value;
    }
    get href() {
        return this.domSanitizer.bypassSecurityTrustUrl(this._href);
    }
    /**
     * Optional target for the underlying anchor.
     */
    set target(value) {
        this._target = value;
    }
    get target() {
        return this._target;
    }
    navigate(event) {
        if (this.router && this.route) {
            event.preventDefault();
            const status = this.router.navigate(this.route, this.routeExtras);
            this.navigation.emit(status);
        }
    }
}
SwitcherListItem.ɵfac = function SwitcherListItem_Factory(t) { return new (t || SwitcherListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Router, 8)); };
SwitcherListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SwitcherListItem, selectors: [["ibm-switcher-list-item"]], hostVars: 3, hostBindings: function SwitcherListItem_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.itemRole);
        ɵngcc0.ɵɵclassProp("bx--switcher__item", ctx.itemClass);
    } }, inputs: { active: "active", href: "href", target: "target", route: "route", routeExtras: "routeExtras" }, outputs: { navigation: "navigation" }, ngContentSelectors: _c4, decls: 2, vars: 5, consts: [[1, "bx--switcher__item-link", 3, "ngClass", "href", "target", "click"]], template: function SwitcherListItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵlistener("click", function SwitcherListItem_Template_a_click_0_listener($event) { return ctx.navigate($event); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c15, ctx.active))("href", ctx.href, ɵngcc0.ɵɵsanitizeUrl)("target", ctx.target);
    } }, directives: [ɵngcc4.NgClass], encapsulation: 2 });
/** @nocollapse */
SwitcherListItem.ctorParameters = () => [
    { type: DomSanitizer },
    { type: Router, decorators: [{ type: Optional }] }
];
SwitcherListItem.propDecorators = {
    active: [{ type: Input }],
    route: [{ type: Input }],
    routeExtras: [{ type: Input }],
    href: [{ type: Input }],
    navigation: [{ type: Output }],
    target: [{ type: Input }],
    itemClass: [{ type: HostBinding, args: ["class.bx--switcher__item",] }],
    itemRole: [{ type: HostBinding, args: ["attr.role",] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SwitcherListItem, [{
        type: Component,
        args: [{
                selector: "ibm-switcher-list-item",
                template: `
		<a
			class="bx--switcher__item-link"
			[ngClass]="{
				'bx--switcher__item-link--selected': active
			}"
			[href]="href"
			[target]="target"
			(click)="navigate($event)">
			<ng-content></ng-content>
		</a>
	`
            }]
    }], function () { return [{ type: ɵngcc2.DomSanitizer }, { type: ɵngcc3.Router, decorators: [{
                type: Optional
            }] }]; }, { active: [{
            type: Input
        }], navigation: [{
            type: Output
        }], itemClass: [{
            type: HostBinding,
            args: ["class.bx--switcher__item"]
        }], itemRole: [{
            type: HostBinding,
            args: ["attr.role"]
        }], href: [{
            type: Input
        }], target: [{
            type: Input
        }], route: [{
            type: Input
        }], routeExtras: [{
            type: Input
        }] }); })();

class PanelModule {
}
PanelModule.ɵfac = function PanelModule_Factory(t) { return new (t || PanelModule)(); };
PanelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PanelModule });
PanelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, I18nModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PanelModule, { declarations: function () { return [Panel, SwitcherList, SwitcherListItem]; }, imports: function () { return [CommonModule, I18nModule]; }, exports: function () { return [Panel, SwitcherList, SwitcherListItem]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PanelModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    Panel,
                    SwitcherList,
                    SwitcherListItem
                ],
                imports: [CommonModule, I18nModule],
                exports: [
                    Panel,
                    SwitcherList,
                    SwitcherListItem
                ]
            }]
    }], null, null); })();

class UIShellModule {
}
UIShellModule.ɵfac = function UIShellModule_Factory(t) { return new (t || UIShellModule)(); };
UIShellModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: UIShellModule });
UIShellModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            I18nModule,
            HeaderModule,
            SideNavModule,
            PanelModule
        ], HeaderModule, SideNavModule, PanelModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(UIShellModule, { imports: function () { return [CommonModule,
        I18nModule, HeaderModule, SideNavModule, PanelModule]; }, exports: function () { return [HeaderModule, SideNavModule, PanelModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UIShellModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    I18nModule,
                    HeaderModule,
                    SideNavModule,
                    PanelModule
                ],
                exports: [
                    HeaderModule,
                    SideNavModule,
                    PanelModule
                ]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { Header, HeaderItem, HeaderMenu, HeaderNavigation, HeaderGlobal, HeaderAction, Hamburger, HeaderModule, SideNav, SideNavItem, SideNavMenu, SideNavModule, Panel, SwitcherList, SwitcherListItem, PanelModule, UIShellModule };

//# sourceMappingURL=carbon-components-angular-ui-shell.js.map