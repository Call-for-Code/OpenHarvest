{"version":3,"file":"carbon-components-angular-icon.js","sources":["carbon-components-angular/icon/icon.service.ts","carbon-components-angular/icon/icon.directive.ts","carbon-components-angular/icon/icon.module.ts","carbon-components-angular/icon/carbon-components-angular-icon.ts"],"names":[],"mappings":"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AACA,AAAA,AADA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAhBA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAKA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AApFA,AAAA,AAAA,AAAA,AAAA,AAJA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAjBA,AAAA,AACA,AAAA,AAoBA,AAAA,AAEA,AAAA,AAEA,AAAA,AAEA,AAAA,AAEA,AAAA,AAEA,AAAA,AAEA,AAAA,ACjCA,AACA,AAoCA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAGA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAgBA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AACA,AA7CA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAxDA,AAAA,ACNA,AAEA","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { toString } from \"@carbon/icon-helpers\";\n\n// icon imports\nimport {\n\tAdd16,\n\tCalendar16,\n\tCaretDown16,\n\tCaretLeft16,\n\tCaretRight16,\n\tCaretUp16,\n\tCheckmark16,\n\tCheckmarkFilled16,\n\tCheckmarkOutline16,\n\tChevronDown16,\n\tChevronRight16,\n\tClose16,\n\tCopy16,\n\tDelete16,\n\tDownload16,\n\tErrorFilled16,\n\tInformationFilled16,\n\tMenu16,\n\tOverflowMenuVertical16,\n\tSave16,\n\tSettings16,\n\tWarning16,\n\tWarningFilled16\n} from \"@carbon/icons\";\n\n/**\n * An object that represents a parsed icon\n */\nexport interface IconDescriptor {\n\t/**\n\t * The element to render. For the root this is `svg`\n\t */\n\telem: string;\n\t/**\n\t * An object of attributes to apply to the element.\n\t *\n\t * The type here is non-exhaustive.\n\t */\n\tattrs: {\n\t\txmlns: string,\n\t\t// needed by the icon directive to determine other attributes\n\t\tviewBox: string,\n\t\tfill: string,\n\t\t// needed by the icon directive to determine other attributes\n\t\twidth: string,\n\t\t// needed by the icon directive to determine other attributes\n\t\theight: string,\n\t\t[x: string]: string\n\t};\n\t/**\n\t * The content (children) of the element as an array of `IconDescriptor`s\n\t * (usually without a few fields, namely `name` and `size`)\n\t */\n\tcontent: IconDescriptor[];\n\t/**\n\t * The name of the icon.\n\t *\n\t * Needed by the icon service.\n\t */\n\tname: string;\n\t/**\n\t * The size of the icon in pixels.\n\t *\n\t * Needed by the icon service.\n\t */\n\tsize: number;\n\t/**\n\t * Optional. A string representation of the compiled svg.\n\t * If missing the icon service will add this.\n\t */\n\tsvg?: string;\n}\n\n/**\n * Abstract class that represent a cache of icons.\n *\n * The actual caching mechanism will be implementation specific,\n * but it's likely a good idea to key by the icons name and/or size.\n * Icon name and size will always be strings, and they will be the two consistent\n * identifiers of an icon. For the purposes of storage additonal descriptor properties may\n * be used, but the name and size are the only ones guarenteed to be passed for lookup purposes.\n */\nexport abstract class IconCache {\n\t/**\n\t * Finds and returns an icon based on it's name and size\n\t */\n\tabstract get(name: string, size: string): object;\n\t/**\n\t * stores an icon descriptor to the cache\n\t */\n\tabstract set(name: string, size: string, descriptor: object): void;\n}\n\n/**\n * Custom error for when a name can't be found\n */\nexport class IconNameNotFoundError extends Error {\n\tconstructor(name: string) {\n\t\tsuper(`Icon ${name} not found`);\n\t}\n}\n\n/**\n * Custom error for when a specific size can't be found\n */\nexport class IconSizeNotFoundError extends Error {\n\tconstructor(size: string, name: string) {\n\t\tsuper(\"Size ${size} for ${name} not found\");\n\t}\n}\n\n/**\n * Concrete implementation of `IconCache` as a simple in memory cache\n */\nexport class IconMemoryCache extends IconCache {\n\tprivate iconMap = new Map<string, Map<string, object>>();\n\n\tget(name: string, size: string) {\n\t\tif (!this.iconMap.has(name)) {\n\t\t\tthrow new IconNameNotFoundError(name);\n\t\t}\n\t\tconst sizeMap = this.iconMap.get(name);\n\t\tif (!sizeMap.has(size)) {\n\t\t\tthrow new IconSizeNotFoundError(size, name);\n\t\t}\n\t\treturn sizeMap.get(size);\n\t}\n\n\tset(name: string, size: string, descriptor: object) {\n\t\tif (!this.iconMap.has(name)) {\n\t\t\tthis.iconMap.set(name, new Map());\n\t\t}\n\t\tconst sizeMap = this.iconMap.get(name);\n\t\tsizeMap.set(size, descriptor);\n\t}\n}\n\n/**\n * The icon service is a singleton service responsible for registering and retriving icons from `@carbon/icons`.\n *\n * It's important to register icons before use. It's reccommended to register your icons early, likely in your app.component.\n *\n * To allow for improved tree shaking _do not_ import all the icons from `@carbon/icons` and register them.\n * Instead register only the icons in use by your application. If your application makes use of lazy loaded\n * modules you may also lazy load the icons used in that module by registering them early on in that module.\n *\n * `ngOnInit` should be sufficiantly early to register icons.\n *\n * Example:\n * ```\n * import { Accessibility16 } from \"@carbon/icons\";\n *\n * // ...\n *\n * class MyComponent implements OnInit {\n * \tconstructor(protected iconService: IconService) {}\n *\n * \t// ...\n *\n * \tngOnInit() {\n * \t\tthis.iconService.register(Accessibility16);\n * \t}\n *\n * \t// ...\n * }\n * ```\n *\n * If needed it is possible to register an icon under a different name, via `registerAs`.\n */\n@Injectable()\nexport class IconService {\n\tprivate iconCache: IconCache = new IconMemoryCache();\n\n\t/**\n\t * Registers an array of icons based on the metadata provided by `@carbon/cions`\n\t */\n\tpublic registerAll(descriptors: object[]) {\n\t\tdescriptors.forEach(icon => this.register(icon));\n\t}\n\n\t/**\n\t * Registers an icon based on the metadata provided by `@carbon/icons`\n\t */\n\tpublic register(descriptor: object) {\n\t\tconst { name } = descriptor as IconDescriptor;\n\t\tthis.registerAs(name, descriptor);\n\t}\n\n\t/**\n\t * Registers an icon based on a uniqe name and metadata provided by `@carbon/icons`\n\t */\n\tpublic registerAs(name: string, descriptor: object) {\n\t\tconst { size } = descriptor as IconDescriptor;\n\t\tthis.iconCache.set(name, size.toString(), descriptor);\n\t}\n\n\t/**\n\t * Gets an icon, converts it to a string, and caches the result\n\t */\n\tpublic get(name: string, size: string): IconDescriptor {\n\t\ttry {\n\t\t\tconst icon = this.iconCache.get(name, size.toString()) as IconDescriptor;\n\t\t\tif (!icon.svg) {\n\t\t\t\ticon.svg = toString(icon);\n\t\t\t}\n\t\t\treturn icon;\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Configure various service settings (caching strategy ...)\n\t */\n\tpublic configure(options: { cache: IconCache }) {\n\t\tthis.iconCache = options.cache;\n\t}\n}\n","import { AfterViewInit, Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\nimport { IconService } from \"./icon.service\";\nimport { getAttributes } from \"@carbon/icon-helpers\";\n\n/**\n * A directive for applying styling to an input element.\n *\n * Example:\n *\n * ```html\n * <input ibmText/>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/text-input/code) for more detail.\n */\n@Directive({\n\tselector: \"[ibmIcon]\"\n})\nexport class IconDirective implements AfterViewInit {\n\tstatic titleIdCounter = 0;\n\n\t@Input() ibmIcon = \"\";\n\n\t@Input() size = \"16\";\n\n\t@Input() title = \"\";\n\n\t@Input() ariaLabel = \"\";\n\n\t@Input() ariaLabelledBy = \"\";\n\n\t@Input() ariaHidden = \"\";\n\n\t@Input() isFocusable = false;\n\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected iconService: IconService\n\t) {}\n\n\tngAfterViewInit() {\n\t\tconst root = this.elementRef.nativeElement as HTMLElement;\n\n\t\tlet icon;\n\t\ttry {\n\t\t\ticon = this.iconService.get(this.ibmIcon, this.size.toString());\n\t\t} catch (error) {\n\t\t\tconsole.warn(error);\n\t\t\t// bail out\n\t\t\treturn;\n\t\t}\n\n\t\tconst domParser = new DOMParser();\n\t\tconst rawSVG = icon.svg;\n\t\tconst svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n\n\t\tlet node: ChildNode = root.tagName.toUpperCase() !== \"SVG\" ? svgElement : svgElement.firstChild;\n\t\twhile (node) {\n\t\t\t// importNode makes a clone of the node\n\t\t\t// this ensures we keep looping over the nodes in the parsed document\n\t\t\troot.appendChild(root.ownerDocument.importNode(node, true));\n\t\t\t// type the node because the angular compiler freaks out if it\n\t\t\t// ends up thinking it's a `Node` instead of a `ChildNode`\n\t\t\tnode = node.nextSibling as ChildNode;\n\t\t}\n\n\t\tconst svg = root.tagName.toUpperCase() !== \"SVG\" ? svgElement : root;\n\t\tsvg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n\n\t\tconst attributes = getAttributes({\n\t\t\twidth: icon.attrs.height,\n\t\t\theight: icon.attrs.height,\n\t\t\tviewBox: icon.attrs.viewBox,\n\t\t\ttitle: this.title,\n\t\t\t\"aria-label\": this.ariaLabel,\n\t\t\t\"aria-labelledby\": this.ariaLabelledBy,\n\t\t\t\"aria-hidden\": this.ariaHidden,\n\t\t\tfocusable: this.isFocusable.toString()\n\t\t});\n\n\t\tconst attrKeys = Object.keys(attributes);\n\t\tfor (let i = 0; i < attrKeys.length; i++) {\n\t\t\tconst key = attrKeys[i];\n\t\t\tconst value = attributes[key];\n\n\t\t\tif (key === \"title\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tsvg.setAttribute(key, value);\n\t\t\t}\n\t\t}\n\n\t\tif (attributes[\"title\"]) {\n\t\t\tconst title = document.createElement(\"title\");\n\t\t\ttitle.textContent = attributes.title;\n\t\t\tIconDirective.titleIdCounter++;\n\t\t\ttitle.setAttribute(\"id\", `${icon.name}-title-${IconDirective.titleIdCounter}`);\n\t\t\t// title must be first for screen readers\n\t\t\tsvg.insertBefore(title, svg.firstElementChild);\n\t\t\tsvg.setAttribute(\"aria-labelledby\", `${icon.name}-title-${IconDirective.titleIdCounter}`);\n\t\t}\n\t}\n}\n","// modules\nimport { NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n// imports\nimport { IconDirective } from \"./icon.directive\";\nimport { IconService } from \"./icon.service\";\n\n// icon imports\nimport Add16 from \"@carbon/icons/es/add/16\";\nimport Calendar16 from \"@carbon/icons/es/calendar/16\";\nimport CaretDown16 from \"@carbon/icons/es/caret--down/16\";\nimport CaretLeft16 from \"@carbon/icons/es/caret--left/16\";\nimport CaretRight16 from \"@carbon/icons/es/caret--right/16\";\nimport CaretUp16 from \"@carbon/icons/es/caret--up/16\";\nimport Checkmark16 from \"@carbon/icons/es/checkmark/16\";\nimport CheckmarkFilled16 from \"@carbon/icons/es/checkmark--filled/16\";\nimport CheckmarkOutline16 from \"@carbon/icons/es/checkmark--outline/16\";\nimport ChevronDown16 from \"@carbon/icons/es/chevron--down/16\";\nimport ChevronRight16 from \"@carbon/icons/es/chevron--right/16\";\nimport Close16 from \"@carbon/icons/es/close/16\";\nimport Close20 from \"@carbon/icons/es/close/20\";\nimport Copy16 from \"@carbon/icons/es/copy/16\";\nimport Delete16 from \"@carbon/icons/es/delete/16\";\nimport Download16 from \"@carbon/icons/es/download/16\";\nimport ErrorFilled16 from \"@carbon/icons/es/error--filled/16\";\nimport InformationFilled16 from \"@carbon/icons/es/information--filled/16\";\nimport Menu16 from \"@carbon/icons/es/menu/16\";\nimport Menu20 from \"@carbon/icons/es/menu/20\";\nimport OverflowMenuVertical16 from \"@carbon/icons/es/overflow-menu--vertical/16\";\nimport OverflowMenuHorizontal16 from \"@carbon/icons/es/overflow-menu--horizontal/16\";\nimport Save16 from \"@carbon/icons/es/save/16\";\nimport Search16 from \"@carbon/icons/es/search/16\";\nimport Settings16 from \"@carbon/icons/es/settings/16\";\nimport Warning16 from \"@carbon/icons/es/warning/16\";\nimport WarningFilled16 from \"@carbon/icons/es/warning--filled/16\";\n\n// either provides a new instance of IconService, or returns the parent\nexport function ICON_SERVICE_PROVIDER_FACTORY(parentService: IconService) {\n\treturn parentService || new IconService();\n}\n\n// icon service *must* be a singleton to ensure that icons are accessible globally and not duplicated\nexport const ICON_SERVICE_PROVIDER = {\n\tprovide: IconService,\n\tdeps: [[new Optional(), new SkipSelf(), IconService]],\n\tuseFactory: ICON_SERVICE_PROVIDER_FACTORY\n};\n\n@NgModule({\n\tdeclarations: [\n\t\tIconDirective\n\t],\n\texports: [\n\t\tIconDirective\n\t],\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tICON_SERVICE_PROVIDER\n\t]\n})\nexport class IconModule {\n\tconstructor(protected iconService: IconService) {\n\t\ticonService.registerAll([\n\t\t\tAdd16,\n\t\t\tCalendar16,\n\t\t\tCaretDown16,\n\t\t\tCaretLeft16,\n\t\t\tCaretRight16,\n\t\t\tCaretUp16,\n\t\t\tCheckmark16,\n\t\t\tCheckmarkFilled16,\n\t\t\tCheckmarkOutline16,\n\t\t\tChevronDown16,\n\t\t\tChevronRight16,\n\t\t\tClose16,\n\t\t\tClose20,\n\t\t\tCopy16,\n\t\t\tDelete16,\n\t\t\tDownload16,\n\t\t\tErrorFilled16,\n\t\t\tInformationFilled16,\n\t\t\tMenu16,\n\t\t\tMenu20,\n\t\t\tOverflowMenuVertical16,\n\t\t\tOverflowMenuHorizontal16,\n\t\t\tSave16,\n\t\t\tSearch16,\n\t\t\tSettings16,\n\t\t\tWarning16,\n\t\t\tWarningFilled16\n\t\t]);\n\t}\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}