{"version":3,"file":"carbon-components-angular-code-snippet.js","sources":["carbon-components-angular/code-snippet/code-snippet.component.ts","carbon-components-angular/code-snippet/code-snippet.module.ts","carbon-components-angular/code-snippet/carbon-components-angular-code-snippet.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tHostBinding,\n\tViewChild,\n\tHostListener,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { I18n } from \"carbon-components-angular/i18n\";\n\nexport enum SnippetType {\n\tsingle = \"single\",\n\tmulti = \"multi\",\n\tinline = \"inline\"\n}\n\n/**\n * [See demo](../../?path=/story/code-snippet--basic)\n *\n * ```html\n * <ibm-code-snippet>Code</ibm-code-snippet>\n * ```\n *\n * <example-url>../../iframe.html?id=code-snippet--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-code-snippet\",\n\ttemplate: `\n\t\t<ng-container *ngIf=\"display === 'inline'; else notInline\">\n\t\t\t<ng-container *ngTemplateOutlet=\"codeTemplate\"></ng-container>\n\t\t\t<ng-container *ngTemplateOutlet=\"feedbackTemplate\"></ng-container>\n\t\t</ng-container>\n\n\t\t<ng-template #notInline>\n\t\t\t<div class=\"bx--snippet-container\" [attr.aria-label]=\"translations.CODE_SNIPPET_TEXT\">\n\t\t\t\t<ng-container *ngIf=\"skeleton\">\n\t\t\t\t\t<span *ngIf=\"display === 'single'; else multiSkeleton\"></span>\n\t\t\t\t\t<ng-template #multiSkeleton>\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</ng-container>\n\t\t\t\t<pre *ngIf=\"!skeleton\"><ng-container *ngTemplateOutlet=\"codeTemplate\"></ng-container></pre>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\t*ngIf=\"!skeleton\"\n\t\t\t\tclass=\"bx--snippet-button\"\n\t\t\t\t[attr.aria-label]=\"translations.COPY_CODE\"\n\t\t\t\t(click)=\"onCopyButtonClicked()\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<svg ibmIcon=\"copy\" size=\"16\" class=\"bx--snippet__icon\"></svg>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"feedbackTemplate\"></ng-container>\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\t*ngIf=\"shouldShowExpandButton\"\n\t\t\t\tclass=\"bx--btn bx--btn--ghost bx--btn--sm bx--snippet-btn--expand\"\n\t\t\t\t(click)=\"toggleSnippetExpansion()\"\n\t\t\t\ttype=\"button\">\n\t\t\t\t<span class=\"bx--snippet-btn--text\">{{expanded ? translations.SHOW_LESS : translations.SHOW_MORE}}</span>\n\t\t\t\t<svg ibmIcon=\"chevron--down\" size=\"16\" class=\"bx--icon-chevron--down\" [ariaLabel]=\"translations.SHOW_MORE_ICON\"></svg>\n\t\t\t</button>\n\t\t</ng-template>\n\n\t\t<ng-template #codeTemplate>\n\t\t\t<code #code><ng-content></ng-content></code>\n\t\t</ng-template>\n\n\t\t<ng-template #feedbackTemplate>\n\t\t\t<div\n\t\t\tclass=\"bx--btn--copy__feedback\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--btn--copy__feedback--displayed': showFeedback\n\t\t\t}\"\n\t\t\t[attr.data-feedback]=\"feedbackText\">\n\t\t\t</div>\n\t\t</ng-template>\n\t`\n})\nexport class CodeSnippet implements AfterViewInit {\n\t/**\n\t * Variable used for creating unique ids for code-snippet components.\n\t */\n\tstatic codeSnippetCount = 0;\n\n\t/**\n\t * It can be `\"single\"`, `\"multi\"` or `\"inline\"`\n\t *\n\t */\n\t@Input() display: SnippetType = SnippetType.single;\n\t@Input() translations = this.i18n.get().CODE_SNIPPET;\n\n\t/**\n\t * Set to `\"light\"` to apply the light style on the code snippet.\n\t */\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n\n\t/**\n\t * Text displayed in the tooltip when user clicks button to copy code.\n\t *\n\t */\n\t@Input() feedbackText = this.translations.COPIED;\n\n\t/**\n\t * Time in miliseconds to keep the feedback tooltip displayed.\n\t *\n\t */\n\t@Input() feedbackTimeout = 2000;\n\n\t@HostBinding(\"class.bx--snippet--expand\") @Input() expanded = false;\n\t@HostBinding(\"class.bx--skeleton\") @Input() skeleton = false;\n\n\t@HostBinding(\"class.bx--snippet\") snippetClass = true;\n\t@HostBinding(\"class.bx--snippet--single\") get snippetSingleClass() {\n\t\treturn this.display === SnippetType.single;\n\t}\n\t@HostBinding(\"class.bx--snippet--multi\") get snippetMultiClass() {\n\t\treturn this.display === SnippetType.multi;\n\t}\n\t@HostBinding(\"class.bx--snippet--inline\") get snippetInlineClass() {\n\t\treturn this.display === SnippetType.inline;\n\t}\n\t@HostBinding(\"class.bx--snippet--light\") get snippetInlineLightClass() {\n\t\treturn this.display === SnippetType.inline && this.theme === \"light\";\n\t}\n\t@HostBinding(\"class.bx--btn--copy\") get btnCopyClass() {\n\t\treturn this.display === SnippetType.inline;\n\t}\n\n\t@HostBinding(\"style.display\") get displayStyle() {\n\t\treturn this.display !== SnippetType.inline ? \"block\" : null;\n\t}\n\t@HostBinding(\"attr.type\") get attrType() {\n\t\treturn this.display === SnippetType.inline ? \"button\" : null;\n\t}\n\n\t// @ts-ignore\n\t@ViewChild(\"code\", { static: false }) code;\n\n\tget shouldShowExpandButton() {\n\t\t// Checks if `hasExpand` button has been initialized in `AfterViewInit` before detecting whether or not to\n\t\t// show the expand button when the code displayed in the component changes during the life of the component.\n\t\t// This is to avoid the `ExpressionChangedAfterItHasBeenCheckedError`.\n\t\tif (this.hasExpandButton === null) {\n\t\t\treturn this.hasExpandButton;\n\t\t}\n\t\treturn this.canExpand();\n\t}\n\n\tshowFeedback = false;\n\n\thasExpandButton = null;\n\n\t/**\n\t * Creates an instance of CodeSnippet.\n\t */\n\tconstructor(protected i18n: I18n) {\n\t\tCodeSnippet.codeSnippetCount++;\n\t}\n\n\ttoggleSnippetExpansion() {\n\t\tthis.expanded = !this.expanded;\n\t}\n\n\t/**\n\t * Copies the code from the `<code>` block to clipboard.\n\t *\n\t */\n\tcopyCode() {\n\t\t// create invisible, uneditable textarea with our code in it\n\t\tconst textarea = document.createElement(\"textarea\");\n\t\ttextarea.value = this.code.nativeElement.innerText || this.code.nativeElement.textContent;\n\t\ttextarea.setAttribute(\"readonly\", \"\");\n\t\ttextarea.style.position = \"absolute\";\n\t\ttextarea.style.right = \"-99999px\";\n\t\tdocument.body.appendChild(textarea);\n\n\t\t// save user selection\n\t\tconst selected = document.getSelection().rangeCount ? document.getSelection().getRangeAt(0) : null;\n\n\t\t// copy to clipboard\n\t\ttextarea.select();\n\t\tdocument.execCommand(\"copy\");\n\n\t\t// remove textarea\n\t\tdocument.body.removeChild(textarea);\n\n\t\t// restore user selection\n\t\tif (selected) {\n\t\t\tdocument.getSelection().removeAllRanges();\n\t\t\tdocument.getSelection().addRange(selected);\n\t\t}\n\t}\n\n\tonCopyButtonClicked() {\n\t\tthis.copyCode();\n\n\t\tthis.showFeedback = true;\n\n\t\tsetTimeout(() => {\n\t\t\tthis.showFeedback = false;\n\t\t}, this.feedbackTimeout);\n\t}\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\t\t\tif (this.canExpand()) {\n\t\t\t\tthis.hasExpandButton = true;\n\t\t\t} else {\n\t\t\t\tthis.hasExpandButton = false;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Inline code snippet acts as button and makes the whole component clickable.\n\t *\n\t * This handles clicks in that case.\n\t */\n\t@HostListener(\"click\")\n\thostClick() {\n\t\tif (this.display !== SnippetType.inline) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onCopyButtonClicked();\n\t}\n\n\tprotected canExpand() {\n\t\treturn (this.code && this.code.nativeElement.getBoundingClientRect().height > 255) && this.display === \"multi\";\n\t}\n}\n","// modules\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\nimport { I18nModule } from \"carbon-components-angular/i18n\";\n\n// imports\nimport { CodeSnippet } from \"./code-snippet.component\";\n\n@NgModule({\n\tdeclarations: [\n\t\tCodeSnippet\n\t],\n\texports: [\n\t\tCodeSnippet\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tI18nModule,\n\t\tIconModule\n\t]\n})\nexport class CodeSnippetModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}