{"version":3,"file":"carbon-components-angular-slider.js","sources":["carbon-components-angular/slider/slider.component.ts","carbon-components-angular/slider/slider.module.ts","carbon-components-angular/slider/carbon-components-angular-slider.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tComponent,\n\tHostBinding,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tAfterViewInit,\n\tViewChild,\n\tElementRef,\n\tTemplateRef,\n\tViewChildren,\n\tQueryList\n} from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { EventService } from \"carbon-components-angular/utils\";\n\n/**\n * Used to select from ranges of values. [See here](https://www.carbondesignsystem.com/components/slider/usage) for usage information.\n *\n * [See demo](../../?path=/story/slider--advanced)\n *\n * The simplest possible slider usage looks something like:\n * ```html\n * <ibm-slider></ibm-slider>\n * ```\n *\n * That will render a slider without labels or alternative value input. Labels can be provided by\n * elements with `[minLabel]` and `[maxLabel]` attributes, and an `input` (may use the `ibmInput` directive) can be supplied\n * for use as an alternative value field.\n *\n * ex:\n * ```html\n * <!-- full example -->\n * <ibm-slider>\n *\t\t<span minLabel>0GB</span>\n *\t\t<span maxLabel>100GB</span>\n *\t\t<input/>\n *\t</ibm-slider>\n * <!-- with just an input -->\n * <ibm-slider>\n *\t\t<input/>\n *\t</ibm-slider>\n * <!-- with just one label -->\n * <ibm-slider>\n *\t\t<span maxLabel>Maximum</span>\n *\t</ibm-slider>\n * ```\n *\n * Slider supports `NgModel` by default, as well as two way binding to the `value` input.\n *\n * <example-url>../../iframe.html?id=slider--advanced</example-url>\n */\n@Component({\n\tselector: \"ibm-slider\",\n\ttemplate: `\n\t\t<ng-container *ngIf=\"!skeleton; else skeletonTemplate\">\n\t\t\t<label *ngIf=\"label\" [for]=\"id\" class=\"bx--label\">\n\t\t\t\t<ng-container *ngIf=\"!isTemplate(label)\">{{label}}</ng-container>\n\t\t\t\t<ng-template *ngIf=\"isTemplate(label)\" [ngTemplateOutlet]=\"label\"></ng-template>\n\t\t\t</label>\n\t\t\t<div class=\"bx--slider-container\">\n\t\t\t\t<label [id]=\"bottomRangeId\" class=\"bx--slider__range-label\">\n\t\t\t\t\t<ng-content select=\"[minLabel]\"></ng-content>\n\t\t\t\t</label>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bx--slider\"\n\t\t\t\t\t[ngClass]=\"{'bx--slider--disabled': disabled}\">\n\t\t\t\t\t<ng-container *ngIf=\"!isRange()\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t#thumbs\n\t\t\t\t\t\t\trole=\"slider\"\n\t\t\t\t\t\t\t[id]=\"id\"\n\t\t\t\t\t\t\tclass=\"bx--slider__thumb\"\n\t\t\t\t\t\t\t[ngStyle]=\"{left: getFractionComplete(value) * 100 + '%'}\"\n\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\t(mousedown)=\"onMouseDown($event)\"\n\t\t\t\t\t\t\t(keydown)=\"onKeyDown($event)\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<ng-container *ngIf=\"isRange()\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t#thumbs\n\t\t\t\t\t\t\t*ngFor=\"let thumb of value; let i = index; trackBy: trackThumbsBy\"\n\t\t\t\t\t\t\trole=\"slider\"\n\t\t\t\t\t\t\t[id]=\"id + (i > 0 ? '-' + i : '')\"\n\t\t\t\t\t\t\tclass=\"bx--slider__thumb\"\n\t\t\t\t\t\t\t[ngStyle]=\"{left: getFractionComplete(thumb) * 100 + '%'}\"\n\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\t(mousedown)=\"onMouseDown($event, i)\"\n\t\t\t\t\t\t\t(keydown)=\"onKeyDown($event, i)\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<div\n\t\t\t\t\t\t#track\n\t\t\t\t\t\tclass=\"bx--slider__track\"\n\t\t\t\t\t\t(click)=\"onClick($event)\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\t#filledTrack\n\t\t\t\t\t\tclass=\"bx--slider__filled-track\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\t#range\n\t\t\t\t\t\taria-label=\"slider\"\n\t\t\t\t\t\tclass=\"bx--slider__input\"\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t[step]=\"step\"\n\t\t\t\t\t\t[min]=\"min\"\n\t\t\t\t\t\t[max]=\"max\"\n\t\t\t\t\t\t[value]=\"value.toString()\">\n\t\t\t\t</div>\n\t\t\t\t<label [id]=\"topRangeId\" class=\"bx--slider__range-label\">\n\t\t\t\t\t<ng-content select=\"[maxLabel]\"></ng-content>\n\t\t\t\t</label>\n\t\t\t\t<ng-content select=\"input\"></ng-content>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #skeletonTemplate>\n\t\t\t<label *ngIf=\"label\" class=\"bx--label bx--skeleton\"></label>\n\t\t\t<div class=\"bx--slider-container bx--skeleton\">\n\t\t\t\t<span class=\"bx--slider__range-label\"></span>\n\t\t\t\t<div class=\"bx--slider\">\n\t\t\t\t\t<div class=\"bx--slider__thumb\"></div>\n\t\t\t\t\t<div class=\"bx--slider__track\"></div>\n\t\t\t\t\t<div class=\"bx--slider__filled-track\"></div>\n\t\t\t\t</div>\n\t\t\t\t<span class=\"bx--slider__range-label\"></span>\n\t\t\t</div>\n\t\t</ng-template>\n\t`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: Slider,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class Slider implements AfterViewInit, ControlValueAccessor {\n\t/** Used to generate unique IDs */\n\tprivate static count = 0;\n\n\t/** The lower bound of our range */\n\t@Input() set min(v) {\n\t\tif (!v) { return; }\n\t\tthis._min = v;\n\t\t// force the component to update\n\t\tthis.value = this.value;\n\t}\n\tget min() {\n\t\treturn this._min;\n\t}\n\t/** The upper bound of our range */\n\t@Input() set max(v) {\n\t\tif (!v) { return; }\n\t\tthis._max = v;\n\t\t// force the component to update\n\t\tthis.value = this.value;\n\t}\n\n\tget max() {\n\t\treturn this._max;\n\t}\n\t/** The interval for our range */\n\t@Input() step = 1;\n\t/** Set the initial value. Available for two way binding */\n\t@Input() set value(v) {\n\t\tif (!v) {\n\t\t\tv = [this.min];\n\t\t}\n\n\t\tif (typeof v === \"number\" || typeof v === \"string\") {\n\t\t\tv = [Number(v)];\n\t\t}\n\n\t\tif (v[0] < this.min) {\n\t\t\tv[0] = this.min;\n\t\t}\n\n\t\tif (v[0] > this.max) {\n\t\t\tv[0] = this.max;\n\t\t}\n\n\t\tif (this.isRange()) {\n\t\t\tif (this._previousValue[0] !== v[0]) { // left moved\n\t\t\t\tif (v[0] > v[1] - this.step) {\n\t\t\t\t\t// stop the left handle if surpassing the right one\n\t\t\t\t\tv[0] = v[1] - this.step;\n\t\t\t\t} else if (v[0] > this.max) {\n\t\t\t\t\tv[0] = this.max;\n\t\t\t\t} else if (v[0] < this.min) {\n\t\t\t\t\tv[0] = this.min;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._previousValue[1] !== v[1]) { // right moved\n\t\t\t\tif (v[1] > this.max) {\n\t\t\t\t\tv[1] = this.max;\n\t\t\t\t} else if (v[1] < this._value[0] + this.step) {\n\t\t\t\t\t// stop the right handle if surpassing the left one\n\t\t\t\t\tv[1] = this._value[0] + this.step;\n\t\t\t\t} else if (v[1] < this.min) {\n\t\t\t\t\tv[1] = this.min;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._previousValue = [...this._value]; // store a copy, enable detection which handle moved\n\t\tthis._value = [...v]; // triggers change detection when ngModel value is an array (for range)\n\n\t\tif (this.isRange() && this.filledTrack) {\n\t\t\tthis.updateTrackRangeWidth();\n\t\t} else if (this.filledTrack) {\n\t\t\tthis.filledTrack.nativeElement.style.transform = `translate(0%, -50%) ${this.scaleX(this.getFractionComplete(v[0]))}`;\n\t\t}\n\n\t\tif (this.inputs && this.inputs.length) {\n\t\t\tthis.inputs.forEach((input, index) => {\n\t\t\t\tinput.value = this._value[index].toString();\n\t\t\t});\n\t\t}\n\n\t\tconst valueToEmit = this.isRange() ? v : v[0];\n\t\tthis.propagateChange(valueToEmit);\n\t\tthis.valueChange.emit(valueToEmit);\n\t}\n\n\tget value() {\n\t\tif (this.isRange()) {\n\t\t\treturn this._value;\n\t\t}\n\t\treturn this._value[0];\n\t}\n\n\t/** Base ID for the slider. The min and max labels get IDs `${this.id}-bottom-range` and `${this.id}-top-range` respectively */\n\t@Input() id = `slider-${Slider.count++}`;\n\t/** Value used to \"multiply\" the `step` when using arrow keys to select values */\n\t@Input() shiftMultiplier = 4;\n\t/** Set to `true` for a loading slider */\n\t@Input() skeleton = false;\n\t/** Sets the text inside the `label` tag */\n\t@Input() label: string | TemplateRef<any>;\n\t/** Set to `true` for a slider without arrow key interactions. */\n\t@Input() disableArrowKeys = false;\n\t/** Disables the range visually and functionally */\n\t@Input() set disabled(v) {\n\t\tthis._disabled = v;\n\t\t// for some reason `this.input` never exists here, so we have to query for it here too\n\t\tconst inputs = this.getInputs();\n\t\tif (inputs && inputs.length > 0) {\n\t\t\tinputs.forEach(input => input.disabled = v);\n\t\t}\n\t}\n\n\tget disabled() {\n\t\treturn this._disabled;\n\t}\n\t/** Emits every time a new value is selected */\n\t@Output() valueChange: EventEmitter<number | number[]> = new EventEmitter();\n\t@HostBinding(\"class.bx--form-item\") hostClass = true;\n\t@ViewChildren(\"thumbs\") thumbs: QueryList<ElementRef>;\n\t// @ts-ignore\n\t@ViewChild(\"track\", { static: false }) track: ElementRef;\n\t// @ts-ignore\n\t@ViewChild(\"filledTrack\", { static: false }) filledTrack: ElementRef;\n\t// @ts-ignore\n\t@ViewChild(\"range\", { static: false }) range: ElementRef;\n\n\tpublic bottomRangeId = `${this.id}-bottom-range`;\n\tpublic topRangeId = `${this.id}-top-range`;\n\tpublic fractionComplete = 0;\n\n\tprotected isMouseDown = false;\n\tprotected inputs: HTMLInputElement[];\n\tprotected _min = 0;\n\tprotected _max = 100;\n\tprotected _value = [this.min];\n\tprotected _previousValue = [this.min];\n\tprotected _disabled = false;\n\tprotected _focusedThumbIndex = 0;\n\n\tconstructor(protected elementRef: ElementRef, protected eventService: EventService) {}\n\n\tngAfterViewInit() {\n\t\t// bind mousemove and mouseup to the document so we don't have issues tracking the mouse\n\t\tthis.eventService.onDocument(\"mousemove\", this.onMouseMove.bind(this));\n\t\tthis.eventService.onDocument(\"mouseup\", this.onMouseUp.bind(this));\n\n\t\t// apply any values we got from before the view initialized\n\t\tthis.value = this.value;\n\n\t\t// TODO: ontouchstart/ontouchmove/ontouchend\n\n\t\t// set up the optional input\n\t\tthis.inputs = this.getInputs();\n\t\tif (this.inputs && this.inputs.length > 0) {\n\t\t\tthis.inputs.forEach((input, index) => {\n\t\t\t\tinput.type = \"number\";\n\t\t\t\tinput.classList.add(\"bx--slider-text-input\");\n\t\t\t\tinput.classList.add(\"bx--text-input\");\n\t\t\t\tinput.setAttribute(\"aria-labelledby\", `${this.bottomRangeId} ${this.topRangeId}`);\n\n\t\t\t\tinput.value = index < this._value.length ? this._value[index].toString() : this.max.toString();\n\t\t\t\t// bind events on our optional input\n\t\t\t\tthis.eventService.on(input, \"change\", event => this.onChange(event, index));\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tthis.eventService.on(input, \"focus\", this.onFocus.bind(this));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\ttrackThumbsBy(index: number, item: any) {\n\t\treturn index;\n\t}\n\n\t/** Send changes back to the model */\n\tpropagateChange = (_: any) => { };\n\n\t/** Register a change propagation function for `ControlValueAccessor` */\n\tregisterOnChange(fn: any) {\n\t\tthis.propagateChange = fn;\n\t}\n\n\t/** Callback to notify the model when our input has been touched */\n\tonTouched: () => any = () => { };\n\n\t/** Register a callback to notify when our input has been touched */\n\tregisterOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\t/** Receives a value from the model */\n\twriteValue(v: any) {\n\t\tthis.value = v;\n\t}\n\n\t/**\n\t * Returns the amount of \"completeness\" of a value as a fraction of the total track width\n\t */\n\tgetFractionComplete(value: number) {\n\t\tif (!this.track) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst trackWidth = this.track.nativeElement.getBoundingClientRect().width;\n\t\treturn this.convertToPx(value) / trackWidth;\n\t}\n\n\t/** Helper function to return the CSS transform `scaleX` function */\n\tscaleX(complete) {\n\t\treturn `scaleX(${complete})`;\n\t}\n\n\t/** Converts a given px value to a \"real\" value in our range */\n\tconvertToValue(pxAmount) {\n\t\t// basic concept borrowed from carbon-components\n\t\t// ref: https://github.com/IBM/carbon-components/blob/43bf3abdc2f8bdaa38aa84e0f733adde1e1e8894/src/components/slider/slider.js#L147-L151\n\t\tconst range = this.max - this.min;\n\t\tconst trackWidth = this.track.nativeElement.getBoundingClientRect().width;\n\t\tconst unrounded = pxAmount / trackWidth;\n\t\tconst rounded = Math.round((range * unrounded) / this.step) * this.step;\n\t\treturn rounded + this.min;\n\t}\n\n\t/** Converts a given \"real\" value to a px value we can update the view with */\n\tconvertToPx(value) {\n\t\tif (!this.track) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst trackWidth = this.track.nativeElement.getBoundingClientRect().width;\n\t\tif (value >= this.max) {\n\t\t\treturn trackWidth;\n\t\t}\n\n\t\tif (value <= this.min) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// account for value shifting by subtracting min from value and max\n\t\treturn Math.round(trackWidth * ((value - this.min) / (this.max - this.min)));\n\t}\n\n\t/**\n\t * Increments the value by the step value, or the step value multiplied by the `multiplier` argument.\n\t *\n\t * @argument multiplier Defaults to `1`, multiplied with the step value.\n\t */\n\tincrementValue(multiplier = 1, index = 0) {\n\t\tthis._value[index] = this._value[index] + (this.step * multiplier);\n\t\tthis.value = this.value; // run the setter\n\t}\n\n\t/**\n\t * Decrements the value by the step value, or the step value multiplied by the `multiplier` argument.\n\t *\n\t * @argument multiplier Defaults to `1`, multiplied with the step value.\n\t */\n\tdecrementValue(multiplier = 1, index = 0) {\n\t\tthis._value[index] = this._value[index] - (this.step * multiplier);\n\t\tthis.value = this.value; // run the setter\n\t}\n\n\t/**\n\t * Determines if the slider is in range mode.\n\t */\n\tisRange(): boolean {\n\t\treturn this._value.length > 1;\n\t}\n\n\t/**\n\t * Range mode only.\n\t * Updates the track width to span from the low thumb to the high thumb\n\t */\n\tupdateTrackRangeWidth() {\n\t\tconst fraction = this.getFractionComplete(this._value[0]);\n\t\tconst fraction2 = this.getFractionComplete(this._value[1]);\n\t\tthis.filledTrack.nativeElement.style.transform = `translate(${fraction * 100}%, -50%) ${this.scaleX(fraction2 - fraction)}`;\n\t}\n\n\t/** Change handler for the optional input */\n\tonChange(event, index) {\n\t\tthis._value[index] = Number(event.target.value);\n\t\tthis.value = this.value;\n\t}\n\n\t/** Handles clicks on the range track, and setting the value to it's \"real\" equivalent */\n\tonClick(event) {\n\t\tif (this.disabled) { return; }\n\t\tconst trackLeft = this.track.nativeElement.getBoundingClientRect().left;\n\t\tthis._value[0] = this.convertToValue(event.clientX - trackLeft);\n\t\tthis.value = this.value;\n\t}\n\n\t/** Focus handler for the optional input */\n\tonFocus({target}) {\n\t\ttarget.select();\n\t}\n\n\t/** Mouse move handler. Responsible for updating the value and visual selection based on mouse movement */\n\tonMouseMove(event) {\n\t\tif (this.disabled || !this.isMouseDown) { return; }\n\t\tconst track = this.track.nativeElement.getBoundingClientRect();\n\n\t\tlet value;\n\n\t\tif (\n\t\t\tevent.clientX - track.left <= track.width\n\t\t\t&& event.clientX - track.left >= 0\n\t\t) {\n\t\t\tvalue = this.convertToValue(event.clientX - track.left);\n\t\t}\n\n\t\t// if the mouse is beyond the max, set the value to `max`\n\t\tif (event.clientX - track.left > track.width) {\n\t\t\tvalue = this.max;\n\t\t}\n\n\t\t// if the mouse is below the min, set the value to `min`\n\t\tif (event.clientX - track.left < 0) {\n\t\t\tvalue = this.min;\n\t\t}\n\n\t\tif (value !== undefined) {\n\t\t\tthis._value[this._focusedThumbIndex] = value;\n\t\t\tthis.value = this.value;\n\t\t}\n\t}\n\n\t/**\n\t * Enables the `onMouseMove` handler\n\t *\n\t * @param {boolean} thumb If true then `thumb` is clicked down, otherwise `thumb2` is clicked down.\n\t */\n\tonMouseDown(event, index = 0) {\n\t\tevent.preventDefault();\n\t\tif (this.disabled) { return; }\n\t\tthis._focusedThumbIndex = index;\n\t\tthis.thumbs.toArray()[index].nativeElement.focus();\n\t\tthis.isMouseDown = true;\n\t}\n\n\t/** Disables the `onMouseMove` handler */\n\tonMouseUp() {\n\t\tthis.isMouseDown = false;\n\t}\n\n\t/**\n\t * Calls `incrementValue` for ArrowRight and ArrowUp, `decrementValue` for ArrowLeft and ArrowDown.\n\t *\n\t * @param {boolean} thumb If true then `thumb` is pressed down, otherwise `thumb2` is pressed down.\n\t */\n\tonKeyDown(event: KeyboardEvent, index = 0) {\n\t\tif (this.disableArrowKeys) {\n\t\t\treturn;\n\t\t}\n\t\tconst multiplier = event.shiftKey ? this.shiftMultiplier : 1;\n\t\tif (event.key === \"ArrowLeft\" || event.key === \"ArrowDown\") {\n\t\t\tthis.decrementValue(multiplier, index);\n\t\t\tthis.thumbs.toArray()[index].nativeElement.focus();\n\t\t\tevent.preventDefault();\n\t\t} else if (event.key === \"ArrowRight\" || event.key === \"ArrowUp\") {\n\t\t\tthis.incrementValue(multiplier, index);\n\t\t\tthis.thumbs.toArray()[index].nativeElement.focus();\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n\n\t/** Get optional input fields */\n\tprotected getInputs(): HTMLInputElement[] {\n\t\treturn this.elementRef.nativeElement.querySelectorAll(\"input:not([type=range])\");\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Slider } from \"./slider.component\";\nimport { UtilsModule } from \"carbon-components-angular/utils\";\n\n@NgModule({\n\tdeclarations: [Slider],\n\texports: [Slider],\n\timports: [\n\t\tCommonModule,\n\t\tUtilsModule\n\t]\n})\nexport class SliderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}