/**
 *
 * carbon-angular v0.0.0 | carbon-components-angular-link.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Directive, HostBinding, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * A convenience directive for applying styling to a link.
 *
 * [See demo](../../?path=/story/link--basic)
 *
 * Example:
 *
 * ```html
 * <a href="#" ibmLink>A link</a>
 * ```
 *
 * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/link/code) for more detail.
 *
 * <example-url>../../iframe.html?id=link--basic</example-url>
 */
import * as ɵngcc0 from '@angular/core';
class Link {
    constructor() {
        this.baseClass = true;
        /**
         * Set to true to show links inline in a sentence or paragraph.
         */
        this.inline = false;
    }
    /**
     * Set to true to disable link.
     */
    set disabled(disabled) {
        this._disabled = disabled;
        this.tabindex = this.disabled ? -1 : null;
    }
    get disabled() {
        return this._disabled;
    }
}
Link.ɵfac = function Link_Factory(t) { return new (t || Link)(); };
Link.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Link, selectors: [["", "ibmLink", ""]], hostVars: 8, hostBindings: function Link_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-disabled", ctx.disabled)("tabindex", ctx.tabindex);
        ɵngcc0.ɵɵclassProp("bx--link", ctx.baseClass)("bx--link--inline", ctx.inline)("bx--link--disabled", ctx.disabled);
    } }, inputs: { inline: "inline", disabled: "disabled" } });
Link.propDecorators = {
    baseClass: [{ type: HostBinding, args: ["class.bx--link",] }],
    tabindex: [{ type: HostBinding, args: ["attr.tabindex",] }],
    inline: [{ type: Input }, { type: HostBinding, args: ["class.bx--link--inline",] }],
    disabled: [{ type: Input }, { type: HostBinding, args: ["attr.aria-disabled",] }, { type: HostBinding, args: ["class.bx--link--disabled",] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Link, [{
        type: Directive,
        args: [{
                selector: "[ibmLink]"
            }]
    }], function () { return []; }, { baseClass: [{
            type: HostBinding,
            args: ["class.bx--link"]
        }], inline: [{
            type: Input
        }, {
            type: HostBinding,
            args: ["class.bx--link--inline"]
        }], disabled: [{
            type: Input
        }, {
            type: HostBinding,
            args: ["attr.aria-disabled"]
        }, {
            type: HostBinding,
            args: ["class.bx--link--disabled"]
        }], tabindex: [{
            type: HostBinding,
            args: ["attr.tabindex"]
        }] }); })();

class LinkModule {
}
LinkModule.ɵfac = function LinkModule_Factory(t) { return new (t || LinkModule)(); };
LinkModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LinkModule });
LinkModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LinkModule, { declarations: function () { return [Link]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Link]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinkModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    Link
                ],
                exports: [
                    Link
                ],
                imports: [
                    CommonModule
                ]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { Link, LinkModule };

//# sourceMappingURL=carbon-components-angular-link.js.map