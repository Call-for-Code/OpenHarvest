{"version":3,"file":"carbon-components-angular-loading.js","sources":["carbon-components-angular/loading/loading.component.ts","carbon-components-angular/loading/loading.module.ts","carbon-components-angular/loading/carbon-components-angular-loading.ts"],"names":[],"mappings":";;;;AAGA;AACwB;AAAG;AAEe;AAIzC;AAeD;AAAG,GAAU,OAAO,NAsBnB,YAAsB,IAAU;AAEZ;AAAC,OAFC,SAAI,GAAJ,IAAI,CAAM;AAEO;AAAqE;AAA4E;AAAuE,QAnBtP,UAAK,GAAG,IAAI,CAAC,IAAI,CAAC;AAAG,EAAE,CAAC;AAAC;AAAC;AAAC,IAAI,CAAC,KAAK,CAAC,HAKtC,aAAQ,GAAG,IAAI,CAAC;AAIxB;AAGF;AAGO;AAAC;AAAI,IALF,SAAI,GAAoB,QAAQ,CAAC;AAG1B;AAAG;AAEW;;;;;;AAAI,IAAiB,CAEf;AAFsB,GAAG,KAAK,CAAC,TAI5D;AAAwB;AAA0B;AAzCzD,SAAS,SAAC,FACV,QAAQ,EAAE,aAAa;AACb,gBAAV,QAAQ,EAAE;AAGU;AAAY;AACW;AACpC;AAEJ;AAAY;AACM;AAAY;AAClB;AAAY;AACC;AAAY;AAKlC,EAFL;AAEI,aADL;AACc;AAAM;mCAxBZ,IAAI;8BA6BX,KAAK,KAKL,KAAK,OAKL,KAAK,uCAKL,KAAK,YAAI,WAAW,SAAC,2BAA2B;mBClCrC,aAAa;0EALzB,QAAQ,SAAC,qDACT,YAAY,EAAE,CAAC,OAAO,CAAC,bACvB,OAAO,EAAE,CAAC,OAAO,CAAC,TAClB;;;;;;;;;;;;;;2DADe;AAAC,CAAC,CAAC,FACX,AAAA,EAAE,CAAC,YAAY,EAAE;AAAE,QAAQ,CAAC,TAEZ,ACXxB;AAC6B;AAG1B;AAFA;AAGH;AAA8B;AAAiC;AAA6B;AAA4F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC;AAAsB;;;;;;;;;;;;0BAAmN;AAAC;AAAC;AAAI;AAAwC;AAAI;AAAC;;AFFA,AAsBA,AAAA,AAAA,AAsBA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAjBA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKA,AAAA,AAAA,AAAA,AAAA,AAKA,AAAA,AAAA,AAAA,AAAA,AAKA,AAAA,AAAA,AAAA,AAAA,AAEA,AAvCA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAaA,AACA,AAvBA,AAAA,AA6BA,AAAA,AAKA,AAAA,AAKA,AAAA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AClCA,AAAA,AALA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,ACVA,AAEA","sourcesContent":["import { Component, Input, HostBinding } from \"@angular/core\";\nimport { I18n } from \"carbon-components-angular/i18n\";\n\n/**\n * [See demo](../../?path=/story/loading--basic)\n *\n * <example-url>../../iframe.html?id=loading--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-loading\",\n\ttemplate: `\n\t\t<div\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--loading--small': size === 'sm',\n\t\t\t\t'bx--loading--stop': !isActive && !overlay,\n\t\t\t\t'bx--loading-overlay--stop': !isActive && overlay\n\t\t\t}\"\n\t\t\tclass=\"bx--loading\">\n\t\t\t<svg class=\"bx--loading__svg\" viewBox=\"-75 -75 150 150\">\n\t\t\t\t<title>{{title}}</title>\n\t\t\t\t<circle class=\"bx--loading__stroke\" cx=\"0\" cy=\"0\" r=\"37.5\" />\n\t\t\t</svg>\n\t\t</div>\n\t`\n})\nexport class Loading {\n\t/**\n\t * Accessible title for the loading circle.\n\t * Defaults to the `LOADING.TITLE` value from the i18n service.\n\t */\n\t@Input() title = this.i18n.get().LOADING.TITLE;\n\n\t/**\n\t * set to `false` to stop the loading animation\n\t */\n\t@Input() isActive = true;\n\n\t/**\n\t * Specify the size of the button\n\t */\n\t@Input() size: \"normal\" | \"sm\" = \"normal\";\n\n\t/**\n\t * Set to `true` to make loader with an overlay.\n\t */\n\t@Input() @HostBinding(\"class.bx--loading-overlay\") overlay = false;\n\n\tconstructor(protected i18n: I18n) {}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Loading } from \"./loading.component\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\n\n@NgModule({\n\tdeclarations: [Loading],\n\texports: [Loading],\n\timports: [CommonModule, I18nModule]\n})\nexport class LoadingModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}