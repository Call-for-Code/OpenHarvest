{"version":3,"file":"carbon-components-angular-pagination.js","sources":["carbon-components-angular/pagination/pagination-model.class.ts","carbon-components-angular/pagination/pagination.component.ts","carbon-components-angular/pagination/pagination-nav/pagination-nav.component.ts","carbon-components-angular/pagination/pagination-nav/pagination-item.component.ts","carbon-components-angular/pagination/pagination-nav/pagination-overflow.component.ts","carbon-components-angular/pagination/pagination.module.ts","carbon-components-angular/pagination/carbon-components-angular-pagination.ts"],"names":[],"mappings":"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","sourcesContent":["export class PaginationModel {\n\t/**\n\t * Tracks the current page.\n\t */\n\tcurrentPage = 1;\n\n\t/**\n\t * Length of page.\n\t */\n\t/* tslint:disable-next-line*/\n\tpageLength? = 10;\n\n\t/**\n\t * Absolute total number of items needed to paginate.\n\t */\n\ttotalDataLength = 0;\n}\n","import { PaginationModel } from \"./pagination-model.class\";\nimport {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\n\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { ExperimentalService } from \"carbon-components-angular/experimental\";\nimport { merge } from \"carbon-components-angular/utils\";\n\nexport interface PaginationTranslations {\n\tITEMS_PER_PAGE: string;\n\tOPEN_LIST_OF_OPTIONS: string;\n\tBACKWARD: string;\n\tFORWARD: string;\n\tTOTAL_ITEMS_UNKNOWN: string;\n\tTOTAL_ITEMS: string;\n\tTOTAL_ITEM: string;\n\tOF_LAST_PAGES: string;\n\tOF_LAST_PAGE: string;\n}\n\n/**\n * Use pagination when you have multiple pages of data to handle.\n *\n * [See demo](../../?path=/story/pagination--basic)\n *\n * ```html\n * <ibm-pagination [model]=\"model\" (selectPage)=\"selectPage($event)\"></ibm-pagination>\n * ```\n *\n * In your `selectPage()` method set the `model.currentPage` to selected page, _after_\n * you load the page.\n *\n * ```typescript\n * selectPage(page) {\n * \t// ... your code to load the page goes here\n *\n * \tthis.model.currentPage = page;\n *\n * \t// ... anything you want to do after page selection changes goes here\n * }\n * ```\n *\n * <example-url>../../iframe.html?id=pagination--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-pagination\",\n\ttemplate: `\n\t<div\n\t\tclass=\"bx--pagination\"\n\t\t[ngClass]=\"{\n\t\t\t'bx--skeleton': skeleton\n\t\t}\">\n\t\t<!-- left skeleton div -->\n\t\t<div *ngIf=\"skeleton\" class=\"bx--pagination__left\">\n\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 70px\"></p>\n\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 35px\"></p>\n\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 105px\"></p>\n\t\t</div>\n\n\t\t<div *ngIf=\"!skeleton\" class=\"bx--pagination__left\">\n\t\t\t<ng-container *ngIf=\"showPageInput\">\n\t\t\t\t<label class=\"bx--pagination__text\" [for]=\"itemsPerPageSelectId\">\n\t\t\t\t\t{{itemsPerPageText.subject | async}}\n\t\t\t\t</label>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bx--select bx--select--inline bx--select__item-count\"\n\t\t\t\t\t[class.bx--select--disabled]=\"pageInputDisabled\">\n\t\t\t\t\t<select\n\t\t\t\t\t\t[id]=\"itemsPerPageSelectId\"\n\t\t\t\t\t\t[(ngModel)]=\"itemsPerPage\"\n\t\t\t\t\t\t[disabled]=\"pageInputDisabled\"\n\t\t\t\t\t\tclass=\"bx--select-input\">\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tclass=\"bx--select-option\"\n\t\t\t\t\t\t\t*ngFor=\"let option of itemsPerPageOptions\"\n\t\t\t\t\t\t\t[value]=\"option\">\n\t\t\t\t\t\t\t\t{{ option }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<svg\n\t\t\t\t\t\tibmIcon=\"chevron--down\"\n\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\tstyle=\"display: inherit\"\n\t\t\t\t\t\tclass=\"bx--select__arrow\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t[attr.ariaLabel]=\"optionsListText.subject | async\">\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</ng-container>\n\t\t\t<span *ngIf=\"!pagesUnknown && totalDataLength <= 1\" class=\"bx--pagination__text\" [ngStyle]=\"{'margin-left': showPageInput ? null : 0}\">\n\t\t\t\t{{totalItemText.subject | i18nReplace:{start: startItemIndex, end: endItemIndex, total: totalDataLength } | async}}\n\t\t\t</span>\n\t\t\t<span *ngIf=\"!pagesUnknown && totalDataLength > 1\" class=\"bx--pagination__text\" [ngStyle]=\"{'margin-left': showPageInput ? null : 0}\">\n\t\t\t\t{{totalItemsText.subject | i18nReplace:{start: startItemIndex, end: endItemIndex, total: totalDataLength } | async}}\n\t\t\t</span>\n\t\t\t<span *ngIf=\"pagesUnknown\" class=\"bx--pagination__text\" [ngStyle]=\"{'margin-left': showPageInput ? null : 0}\">\n\t\t\t\t{{totalItemsUnknownText.subject | i18nReplace:{start: startItemIndex, end: endItemIndex } | async}}\n\t\t\t</span>\n\t\t</div>\n\n\t\t<!-- right skeleton div -->\n\t\t<div *ngIf=\"skeleton\" class=\"bx--pagination__right\">\n\t\t\t<p class=\"bx--skeleton__text\" style=\"width: 70px\"></p>\n\t\t</div>\n\n\t\t<div *ngIf=\"!skeleton\" class=\"bx--pagination__right\">\n\t\t\t<ng-container *ngIf=\"showPageInput\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bx--select bx--select--inline bx--select__page-number\"\n\t\t\t\t\t[class.bx--select--disabled]=\"pageInputDisabled\">\n\t\t\t\t\t<label [for]=\"currentPageSelectId\" class=\"bx--label bx--visually-hidden\">{{itemsPerPageText.subject | async}}</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\t*ngIf=\"pageOptions.length > pageSelectThreshold\"\n\t\t\t\t\t\tstyle=\"padding-right: 1rem; margin-right: 1rem;\"\n\t\t\t\t\t\t[id]=\"currentPageSelectId\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t[max]=\"pageOptions.length\"\n\t\t\t\t\t\tclass=\"bx--select-input\"\n\t\t\t\t\t\t[(ngModel)]=\"currentPage\">\n\t\t\t\t\t<select\n\t\t\t\t\t\t*ngIf=\"pageOptions.length <= pageSelectThreshold\"\n\t\t\t\t\t\t[id]=\"currentPageSelectId\"\n\t\t\t\t\t\tclass=\"bx--select-input\"\n\t\t\t\t\t\t[disabled]=\"pageInputDisabled\"\n\t\t\t\t\t\t[(ngModel)]=\"currentPage\">\n\t\t\t\t\t\t<option *ngFor=\"let page of pageOptions; let i = index;\" class=\"bx--select-option\" [value]=\"i + 1\">{{i + 1}}</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<svg\n\t\t\t\t\t\t*ngIf=\"pageOptions.length <= 1000\"\n\t\t\t\t\t\tibmIcon=\"chevron--down\"\n\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\tstyle=\"display: inherit;\"\n\t\t\t\t\t\tclass=\"bx--select__arrow\"\n\t\t\t\t\t\t[attr.ariaLabel]=\"optionsListText.subject | async\">\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</ng-container>\n\n\t\t\t<span *ngIf=\"!pagesUnknown && lastPage <= 1\" class=\"bx--pagination__text\">\n\t\t\t\t<ng-container *ngIf=\"!showPageInput\">{{currentPage}}</ng-container>\n\t\t\t\t{{ofLastPageText.subject | i18nReplace: {last: lastPage} | async}}\n\t\t\t</span>\n\t\t\t<span *ngIf=\"!pagesUnknown && lastPage > 1\" class=\"bx--pagination__text\">\n\t\t\t\t<ng-container *ngIf=\"!showPageInput\">{{currentPage}}</ng-container>\n\t\t\t\t{{ofLastPagesText.subject | i18nReplace: {last: lastPage} | async}}\n\t\t\t</span>\n\t\t\t<span *ngIf=\"pagesUnknown\" class=\"bx--pagination__text\">\n\t\t\t\t<ng-container *ngIf=\"!showPageInput\">{{currentPage}}</ng-container>\n\t\t\t\t{{pageText.subject | async}} {{currentPage}}\n\t\t\t</span>\n\t\t\t<div class=\"bx--pagination__control-buttons\">\n\t\t\t\t<button\n\t\t\t\t\tibmButton=\"ghost\"\n\t\t\t\t\ticonOnly=\"true\"\n\t\t\t\t\tclass=\"bx--pagination__button bx--pagination__button--backward\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'bx--pagination__button--no-index': currentPage <= 1 || disabled\n\t\t\t\t\t}\"\n\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t[attr.aria-label]=\"backwardText.subject | async\"\n\t\t\t\t\t(click)=\"selectPage.emit(previousPage)\"\n\t\t\t\t\t[disabled]=\"(currentPage <= 1 || disabled ? true : null)\">\n\t\t\t\t\t<svg ibmIcon=\"caret--left\" size=\"16\"></svg>\n\t\t\t\t</button>\n\n\t\t\t\t<button\n\t\t\t\t\tibmButton=\"ghost\"\n\t\t\t\t\ticonOnly=\"true\"\n\t\t\t\t\tclass=\"\n\t\t\t\t\t\tbx--pagination__button\n\t\t\t\t\t\tbx--pagination__button--forward\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'bx--pagination__button--no-index': currentPage >= lastPage || disabled\n\t\t\t\t\t}\"\n\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t[attr.aria-label]=\"forwardText.subject | async\"\n\t\t\t\t\t(click)=\"selectPage.emit(nextPage)\"\n\t\t\t\t\t[disabled]=\"(currentPage >= lastPage || disabled ? true : null)\">\n\t\t\t\t\t<svg ibmIcon=\"caret--right\" size=\"16\"></svg>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t`\n})\nexport class Pagination {\n\tstatic paginationCounter = 0;\n\n\t/**\n\t * Set to `true` for a loading pagination component.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * `PaginationModel` with the information about pages you're controlling.\n\t */\n\t@Input() model: PaginationModel;\n\t/**\n \t * Set to `true` to disable the backward/forward buttons.\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * Set to `true` to disable the select box that changes the page.\n\t */\n\t@Input() pageInputDisabled = false;\n\t/**\n\t * Controls wether or not to show the page selects\n\t */\n\t@Input() showPageInput = true;\n\t/**\n\t * Set to `true` if the total number of items is unknown.\n\t */\n\t@Input() pagesUnknown = false;\n\t@Input() pageSelectThreshold = 1000;\n\n\t/**\n\t * Expects an object that contains some or all of:\n\t * ```\n\t * {\n\t *\t\t\"ITEMS_PER_PAGE\": \"Items per page:\",\n\t *\t\t\"OPEN_LIST_OF_OPTIONS\": \"Open list of options\",\n\t *\t\t\"BACKWARD\": \"Backward\",\n\t *\t\t\"FORWARD\": \"Forward\",\n\t *\t\t\"TOTAL_ITEMS_UNKNOWN\": \"{{start}}-{{end}} items\",\n\t *\t\t\"TOTAL_ITEMS\": \"{{start}}-{{end}} of {{total}} items\",\n\t *\t\t\"TOTAL_ITEM\": \"{{start}}-{{end}} of {{total}} item\",\n\t *\t\t\"OF_LAST_PAGES\": \"of {{last}} pages\",\n\t *\t\t\"OF_LAST_PAGE\": \"of {{last}} page\"\n\t * }\n\t * ```\n\t */\n\t@Input()\n\tset translations (value: PaginationTranslations) {\n\t\tconst valueWithDefaults = merge(this.i18n.getMultiple(\"PAGINATION\"), value);\n\t\tthis.itemsPerPageText.override(valueWithDefaults.ITEMS_PER_PAGE);\n\t\tthis.optionsListText.override(valueWithDefaults.OPEN_LIST_OF_OPTIONS);\n\t\tthis.backwardText.override(valueWithDefaults.BACKWARD);\n\t\tthis.forwardText.override(valueWithDefaults.FORWARD);\n\t\tthis.totalItemsText.override(valueWithDefaults.TOTAL_ITEMS);\n\t\tthis.totalItemText.override(valueWithDefaults.TOTAL_ITEM);\n\t\tthis.totalItemsUnknownText.override(valueWithDefaults.TOTAL_ITEMS_UNKNOWN);\n\t\tthis.pageText.override(valueWithDefaults.PAGE);\n\t\tthis.ofLastPagesText.override(valueWithDefaults.OF_LAST_PAGES);\n\t\tthis.ofLastPageText.override(valueWithDefaults.OF_LAST_PAGE);\n\t}\n\n\t/**\n\t * Options for items per page select\n\t *\n\t * A default array of options will be defined: [10, 20, 30, 40, 50]\n\t */\n\t@Input() itemsPerPageOptions: number[] = [10, 20, 30, 40, 50];\n\n\t/**\n\t * Emits the new page number.\n\t *\n\t * You should tie into this and update `model.currentPage` once the fresh\n\t * data is finally loaded.\n\t */\n\t@Output() selectPage = new EventEmitter<number>();\n\n\tget itemsPerPage() {\n\t\treturn this.model.pageLength;\n\t}\n\tset itemsPerPage(value) {\n\t\tthis.model.pageLength = Number(value);\n\t\tthis.currentPage = 1; // reset page\n\t}\n\n\tget currentPage() {\n\t\treturn this.model.currentPage;\n\t}\n\tset currentPage(value) {\n\t\tvalue = Number(value);\n\t\t// emits the value to allow the user to update current page\n\t\t// in the model once the page is loaded\n\t\tthis.selectPage.emit(value);\n\t}\n\n\tget totalDataLength() {\n\t\treturn this.model.totalDataLength;\n\t}\n\t/**\n\t * The last page number to display in the pagination view.\n\t */\n\tget lastPage(): number {\n\t\tconst last = Math.ceil(this.totalDataLength / this.itemsPerPage);\n\t\treturn last > 0 ? last : 1;\n\t}\n\n\tget startItemIndex() {\n\t\treturn this.endItemIndex > 0 ? (this.currentPage - 1) * this.itemsPerPage + 1 : 0;\n\t}\n\n\tget endItemIndex() {\n\t\tconst projectedEndItemIndex = this.currentPage * this.itemsPerPage;\n\n\t\treturn projectedEndItemIndex < this.totalDataLength ? projectedEndItemIndex : this.totalDataLength;\n\t}\n\n\t/**\n\t * The previous page number to navigate to, from the current page.\n\t */\n\tget previousPage(): number {\n\t\treturn this.currentPage <= 1 ? 1 : this.currentPage - 1;\n\t}\n\n\t/**\n\t * The next page number to navigate to, from the current page.\n\t */\n\tget nextPage(): number {\n\t\tconst lastPage = this.lastPage;\n\t\treturn this.currentPage >= lastPage ? lastPage : this.currentPage + 1;\n\t}\n\n\tget pageOptions() {\n\t\tif (this.totalDataLength && this._pageOptions.length !== this.totalDataLength) {\n\t\t\tthis._pageOptions = Array(Math.ceil(this.totalDataLength / this.itemsPerPage));\n\t\t}\n\t\treturn this._pageOptions;\n\t}\n\n\titemsPerPageSelectId = `pagination-select-items-per-page-${Pagination.paginationCounter}`;\n\tcurrentPageSelectId = `pagination-select-current-page-${Pagination.paginationCounter}`;\n\n\titemsPerPageText = this.i18n.getOverridable(\"PAGINATION.ITEMS_PER_PAGE\");\n\toptionsListText = this.i18n.getOverridable(\"PAGINATION.OPEN_LIST_OF_OPTIONS\");\n\tbackwardText = this.i18n.getOverridable(\"PAGINATION.BACKWARD\");\n\tforwardText = this.i18n.getOverridable(\"PAGINATION.FORWARD\");\n\ttotalItemsText = this.i18n.getOverridable(\"PAGINATION.TOTAL_ITEMS\");\n\ttotalItemText = this.i18n.getOverridable(\"PAGINATION.TOTAL_ITEM\");\n\ttotalItemsUnknownText = this.i18n.getOverridable(\"PAGINATION.TOTAL_ITEMS_UNKNOWN\");\n\tpageText = this.i18n.getOverridable(\"PAGINATION.PAGE\");\n\tofLastPagesText = this.i18n.getOverridable(\"PAGINATION.OF_LAST_PAGES\");\n\tofLastPageText = this.i18n.getOverridable(\"PAGINATION.OF_LAST_PAGE\");\n\n\tprotected _pageOptions = [];\n\n\tconstructor(protected i18n: I18n, protected experimental: ExperimentalService) {\n\t\tPagination.paginationCounter++;\n\t}\n}\n","import { PaginationModel } from \"../pagination-model.class\";\nimport {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\n\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { ExperimentalService } from \"carbon-components-angular/experimental\";\nimport { merge } from \"carbon-components-angular/utils\";\nimport { range } from \"carbon-components-angular/common\";\n\nexport interface PaginationNavTranslations {\n\tNEXT: string;\n\tPREVIOUS: string;\n}\n\n/**\n * Use pagination when you have multiple pages of data to handle.\n *\n * [See demo](../../?path=/story/pagination-nav--basic)\n *\n * ```html\n * <ibm-pagination-nav [model]=\"model\" (selectPage)=\"selectPage($event)\"></ibm-pagination-nav>\n * ```\n *\n * In your `selectPage()` method set the `model.currentPage` to selected page, _after_\n * you load the page.\n *\n * ```typescript\n * selectPage(page) {\n * \t// ... your code to load the page goes here\n *\n * \tthis.model.currentPage = page;\n *\n * \t// ... anything you want to do after page selection changes goes here\n * }\n * ```\n *\n * <example-url>../../iframe.html?id=pagination-nav--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-pagination-nav\",\n\ttemplate: `\n\t<div>\n\t\t<div class=\"bx--pagination-nav\">\n\t\t\t<ul class=\"bx--pagination-nav__list\">\n\t\t\t\t<li class=\"bx--pagination-nav__list-item\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"bx--btn bx--btn--ghost bx--pagination-nav-previous\n\t\t\t\t\t\tbx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center\"\n\t\t\t\t\t\t[disabled]=\"leftArrowDisabled\"\n\t\t\t\t\t\t(click)=\"jumpToPrevious()\">\n\t\t\t\t\t\t<span class=\"bx--assistive-text\">{{previousItemText.subject | async}}</span>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tibmIcon=\"caret--left\"\n\t\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\t\tstyle=\"display: inherit\"\n\t\t\t\t\t\t\tclass=\"bx--btn__icon\">\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t\t<ibm-pagination-nav-item\n\t\t\t\t\t*ngIf=\"this.numOfItemsToShow >= 5 || (this.numOfItemsToShow <= 4 && currentPage <= 1)\"\n\t\t\t\t\tpage=\"1\"\n\t\t\t\t\t(click)=\"currentPage = 1\"\n\t\t\t\t\t[isActive]=\"currentPage == 1\">\n\t\t\t\t</ibm-pagination-nav-item>\n\t\t\t\t<ibm-pagination-overflow\n\t\t\t\t\t*ngIf=\"frontCuts\"\n\t\t\t\t\t[count]=\"frontCuts\"\n\t\t\t\t\t[fromIndex]=\"startOffset\"\n\t\t\t\t\t(change)=\"handleOverflowSelection($event)\">\n\t\t\t\t</ibm-pagination-overflow>\n\t\t\t\t<ibm-pagination-nav-item\n\t\t\t\t\t*ngFor=\"let page of getPages();\"\n\t\t\t\t\t[page]=\"page\"\n\t\t\t\t\t(click)=\"currentPage = page\"\n\t\t\t\t\t[isActive]=\"currentPage == page\">\n\t\t\t\t</ibm-pagination-nav-item>\n\t\t\t\t<ibm-pagination-overflow\n\t\t\t\t\t*ngIf=\"backCuts\"\n\t\t\t\t\t[count]=\"backCuts\"\n\t\t\t\t\t[fromIndex]=\"totalNumbersArray.length - backCuts - 1\"\n\t\t\t\t\t(change)=\"handleOverflowSelection($event)\">\n\t\t\t\t</ibm-pagination-overflow>\n\t\t\t\t<ibm-pagination-nav-item\n\t\t\t\t\t*ngIf=\"totalDataLength > 1\"\n\t\t\t\t\t[page]=\"totalNumbersArray.length\"\n\t\t\t\t\t(click)=\"currentPage = totalNumbersArray.length\"\n\t\t\t\t\t[isActive]=\"currentPage == totalNumbersArray.length\">\n\t\t\t\t</ibm-pagination-nav-item>\n\t\t\t\t<li class=\"bx--pagination-nav__list-item\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"bx--btn bx--btn--ghost bx--pagination-nav-next\n\t\t\t\t\t\tbx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center\"\n\t\t\t\t\t\t[disabled]=\"rightArrowDisabled\"\n\t\t\t\t\t\t(click)=\"jumpToNext()\">\n\t\t\t\t\t\t<span class=\"bx--assistive-text\">{{nextItemText.subject | async}}</span>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tibmIcon=\"caret--right\"\n\t\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\t\tstyle=\"display: inherit\"\n\t\t\t\t\t\t\tclass=\"bx--btn__icon\">\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t`\n})\nexport class PaginationNav {\n\tstatic paginationCounter = 0;\n\t/**\n\t * `PaginationNavModel` with the information about pages you're controlling.\n\t */\n\t@Input() model: PaginationModel;\n\t/**\n \t * Set to `true` to disable the backward/forward buttons.\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * Number of items to show in pagination. Minimum is 4.\n\t */\n\t@Input() numOfItemsToShow = 4;\n\n\t/**\n\t * Expects an object that contains some or all of:\n\t * ```\n\t * {\n\t *\t\t\"NEXT\": \"Next\",\n\t *\t\t\"PREVIOUS\": \"Previous\",\n\t * }\n\t * ```\n\t */\n\t@Input()\n\tset translations (value: PaginationNavTranslations) {\n\t\tconst valueWithDefaults = merge(this.i18n.getMultiple(\"PAGINATION\"), value);\n\t\tthis.nextItemText.override(valueWithDefaults.NEXT);\n\t\tthis.previousItemText.override(valueWithDefaults.PREVIOUS);\n\t}\n\n\t/**\n\t * Emits the new page number.\n\t *\n\t * You should tie into this and update `model.currentPage` once the fresh\n\t * data is finally loaded.\n\t */\n\t@Output() selectPage = new EventEmitter<number>();\n\n\tget totalNumbersArray() {\n\t\treturn range(this.totalDataLength + 1, 1);\n\t}\n\n\tget currentPage() {\n\t\treturn this.model.currentPage;\n\t}\n\n\tset currentPage(value) {\n\t\tvalue = Number(value);\n\t\t// emits the value to allow the user to update current page\n\t\t// in the model once the page is loaded\n\t\tthis.selectPage.emit(value);\n\t}\n\n\tget totalDataLength() {\n\t\treturn this.model.totalDataLength;\n\t}\n\n\tget startOffset() {\n\t\treturn this.numOfItemsToShow <= 4 && this.currentPage > 1 ? 0 : 1;\n\t}\n\n\tget frontCuts() {\n\t\tconst cuts = this.getCuts();\n\t\treturn cuts.front;\n\t}\n\n\tget backCuts() {\n\t\tconst cuts = this.getCuts();\n\t\treturn cuts.back;\n\t}\n\n\tget leftArrowDisabled() {\n\t\treturn this.disabled || this.currentPage === 1;\n\t}\n\n\tget rightArrowDisabled() {\n\t\treturn this.disabled || this.currentPage === this.totalDataLength;\n\t}\n\n\tnextItemText = this.i18n.getOverridable(\"PAGINATION.NEXT\");\n\tpreviousItemText = this.i18n.getOverridable(\"PAGINATION.PREVIOUS\");\n\n\tconstructor(protected i18n: I18n, protected experimental: ExperimentalService) {\n\t\tPaginationNav.paginationCounter++;\n\t}\n\n\thandleOverflowSelection(page) {\n\t\tif (typeof page === \"number\") {\n\t\t\tthis.currentPage = page;\n\t\t}\n\t}\n\n\tpublic jumpToNext() {\n\t\tthis.currentPage = this.currentPage < this.totalDataLength ? this.currentPage + 1 : this.totalDataLength;\n\t}\n\n\tpublic jumpToPrevious() {\n\t\tthis.currentPage = this.currentPage > 1 ? this.currentPage - 1 : 1;\n\t}\n\n\tpublic getPages() {\n\t\tif (this.totalDataLength <= 1) {\n\t\t\treturn null;\n\t\t}\n\t\tconst cuts = this.getCuts();\n\t\treturn this.totalNumbersArray.slice(this.startOffset + cuts.front, (1 + cuts.back) * -1);\n\t}\n\n\tprivate getCuts(splitPoint = null) {\n\t\tconst page = this.currentPage - 1;\n\t\tconst totalItems = this.totalDataLength;\n\t\tconst itemsThatFit = this.numOfItemsToShow;\n\n\t\tif (itemsThatFit >= totalItems) {\n\t\t\treturn {\n\t\t\t\tfront: 0,\n\t\t\t\tback: 0\n\t\t\t};\n\t\t}\n\t\tconst split = splitPoint || Math.ceil(itemsThatFit / 2) - 1;\n\t\tlet frontHidden = page + 1 - split;\n\t\tlet backHidden = totalItems - page - (itemsThatFit - split) + 1;\n\n\t\tif (frontHidden <= 1) {\n\t\t\tbackHidden -= frontHidden <= 0 ? Math.abs(frontHidden) + 1 : 0;\n\t\t\tfrontHidden = 0;\n\t\t}\n\t\tif (backHidden <= 1) {\n\t\t\tfrontHidden -= backHidden <= 0 ? Math.abs(backHidden) + 1 : 0;\n\t\t\tbackHidden = 0;\n\t\t}\n\t\treturn {\n\t\t\tfront: frontHidden,\n\t\t\tback: backHidden\n\t\t};\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\n\n/**\n * Used to present a single navigation item in a pagination list\n *\n *  * ```html\n * <ibm-pagination-nav-item [page]=\"5\" [isActive]=\"false\" (click)=\"handleClick(value)\"></ibm-pagination-nav-item>\n * ```\n */\n@Component({\n\tselector: \"ibm-pagination-nav-item\",\n\ttemplate: `\n\t\t<li class=\"bx--pagination-nav__list-item\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"bx--pagination-nav__page\"\n\t\t\t\t[ngClass]=\"{ 'bx--pagination-nav__page--active': isActive }\"\n\t\t\t\t(click)=\"click.emit(page)\">\n\t\t\t\t<span class=\"bx--pagination-nav__accessibility-label\">\n\t\t\t\t\t{{page}}\n\t\t\t\t</span>\n\t\t\t\t{{page}}\n\t\t\t</button>\n\t\t</li>\n\t`\n})\nexport class PaginationNavItem {\n\t/**\n\t * The page for this component to dipslay\n\t */\n\t@Input() page = 0;\n\n\t/**\n\t * The state for this component to dipslay\n\t */\n\t@Input() isActive = false;\n\n\t/**\n\t * Emits click event\n\t */\n\t@Output() click = new EventEmitter<number>();\n\n\tconstructor() {}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\n/**\n * Used to present a selection of pages when there is an overflow\n * in the pagination list\n *\n * * ```html\n * <ibm-pagination-overflow [fromIndex]=\"5\" [count]=\"30\" (change)=\"handleChange(value)\"></ibm-pagination-overflow>\n * ```\n */\n@Component({\n\tselector: \"ibm-pagination-overflow\",\n\ttemplate: `\n\t\t<li class=\"bx--pagination-nav__list-item\" *ngIf=\"count > 1\">\n\t\t\t<div class=\"bx--pagination-nav__select\">\n\t\t\t<select\n\t\t\t\tclass=\"bx--pagination-nav__page bx--pagination-nav__page--select\" (change)=\"handleChange($event)\">\n\t\t\t\t<option value=\"\" hidden></option>\n\t\t\t\t<option\n\t\t\t\t(click)=\"change.emit(fromIndex + i + 1)\"\n\t\t\t\t*ngFor=\"let item of countAsArray; let i = index\">\n\t\t\t\t\t{{fromIndex + i + 1}}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t\t<div class=\"bx--pagination-nav__select-icon-wrapper\">\n\t\t\t\t<svg\n\t\t\t\t\tibmIcon=\"overflow-menu--horizontal\"\n\t\t\t\t\tsize=\"16\"\n\t\t\t\t\tstyle=\"display: inherit\"\n\t\t\t\t\tclass=\"bx--pagination-nav__select-icon\">\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</li>\n\t\t<ibm-pagination-nav-item *ngIf=\"count === 1\" [page]=\"fromIndex + 1\"></ibm-pagination-nav-item>\n\t`\n})\nexport class PaginationOverflow {\n\t/**\n\t * The page for this component to dipslay\n\t */\n\t@Input() fromIndex: number;\n\n\t@Input() count: number;\n\n\t/**\n\t * Emits click event\n\t */\n\t@Output() change = new EventEmitter<number>();\n\n\tget countAsArray() {\n\t\treturn [...Array(this.count)];\n\t}\n\n\tconstructor() {}\n\n\thandleChange(event) {\n\t\tevent.target.value = \"\";\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { Pagination } from \"./pagination.component\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { ExperimentalModule } from \"carbon-components-angular/experimental\";\nimport { PaginationNav } from \"./pagination-nav/pagination-nav.component\";\nimport { PaginationNavItem } from \"./pagination-nav/pagination-item.component\";\nimport { PaginationOverflow } from \"./pagination-nav/pagination-overflow.component\";\nimport { IconModule } from \"carbon-components-angular/icon\";\nimport { ButtonModule } from \"carbon-components-angular/forms\";\n\n@NgModule({\n\tdeclarations: [\n\t\tPagination,\n\t\tPaginationNav,\n\t\tPaginationNavItem,\n\t\tPaginationOverflow\n\t],\n\texports: [\n\t\tPagination,\n\t\tPaginationNav,\n\t\tPaginationNavItem,\n\t\tPaginationOverflow\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tI18nModule,\n\t\tExperimentalModule,\n\t\tIconModule,\n\t\tButtonModule\n\t]\n})\nexport class PaginationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}