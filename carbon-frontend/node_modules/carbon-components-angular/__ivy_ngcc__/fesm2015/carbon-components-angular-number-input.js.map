{"version":3,"file":"carbon-components-angular-number-input.js","sources":["carbon-components-angular/number-input/number.component.ts","carbon-components-angular/number-input/number.module.ts","carbon-components-angular/number-input/carbon-components-angular-number-input.ts"],"names":["Number"],"mappings":"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","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tHostBinding,\n\tEventEmitter,\n\tOutput,\n\tTemplateRef,\n\tHostListener\n} from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\n\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { Observable } from \"rxjs\";\n\n/**\n * Used to emit changes performed on number input components.\n */\nexport class NumberChange {\n\t/**\n\t * Contains the `Number` that has been changed.\n\t */\n\tsource: NumberComponent;\n\t/**\n\t * The value of the `Number` field encompassed in the `NumberChange` class.\n\t */\n\tvalue: number;\n}\n\n/**\n * [See demo](../../?path=/story/number--basic)\n *\n * <example-url>../../iframe.html?id=number--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-number\",\n\ttemplate: `\n\t\t<label *ngIf=\"skeleton && label\" class=\"bx--label bx--skeleton\"></label>\n\t\t<label *ngIf=\"!skeleton && label\" [for]=\"id\" class=\"bx--label\">\n\t\t\t<ng-container *ngIf=\"!isTemplate(label)\">{{label}}</ng-container>\n\t\t\t<ng-template *ngIf=\"isTemplate(label)\" [ngTemplateOutlet]=\"label\"></ng-template>\n\t\t</label>\n\t\t<div\n\t\t\tdata-numberinput\n\t\t\t[attr.data-invalid]=\"(invalid ? true : null)\"\n\t\t\tclass=\"bx--number\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--number--light': theme === 'light',\n\t\t\t\t'bx--number--nolabel': !label,\n\t\t\t\t'bx--number--helpertext': helperText,\n\t\t\t\t'bx--skeleton' : skeleton,\n\t\t\t\t'bx--number--sm': size === 'sm',\n\t\t\t\t'bx--number--xl': size === 'xl'\n\t\t\t}\">\n\t\t\t<div class=\"bx--number__input-wrapper\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t[id]=\"id\"\n\t\t\t\t\t[value]=\"value\"\n\t\t\t\t\t[attr.min]=\"min\"\n\t\t\t\t\t[attr.max]=\"max\"\n\t\t\t\t\t[attr.step]=\"step\"\n\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t[required]=\"required\"\n\t\t\t\t\t(input)=\"onNumberInputChange($event)\"/>\n\t\t\t\t<svg\n\t\t\t\t\t*ngIf=\"!skeleton && invalid\"\n\t\t\t\t\tibmIcon=\"warning--filled\"\n\t\t\t\t\tsize=\"16\"\n\t\t\t\t\tclass=\"bx--number__invalid\">\n\t\t\t\t</svg>\n\t\t\t\t<div *ngIf=\"!skeleton\" class=\"bx--number__controls\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"bx--number__control-btn up-icon\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\taria-live=\"polite\"\n\t\t\t\t\t\taria-atomic=\"true\"\n\t\t\t\t\t\t[attr.aria-label]=\"getIncrementLabel() | async\"\n\t\t\t\t\t\t(click)=\"onIncrement()\">\n\t\t\t\t\t\t<svg ibmIcon=\"caret--up\" size=\"16\"></svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"bx--number__control-btn down-icon\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\taria-live=\"polite\"\n\t\t\t\t\t\taria-atomic=\"true\"\n\t\t\t\t\t\t[attr.aria-label]=\"getDecrementLabel() | async\"\n\t\t\t\t\t\t(click)=\"onDecrement()\">\n\t\t\t\t\t\t<svg ibmIcon=\"caret--down\" size=\"16\"></svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"helperText && !invalid\" class=\"bx--form__helper-text\">\n\t\t\t\t<ng-container *ngIf=\"!isTemplate(helperText)\">{{helperText}}</ng-container>\n\t\t\t\t<ng-template *ngIf=\"isTemplate(helperText)\" [ngTemplateOutlet]=\"helperText\"></ng-template>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"invalid\" class=\"bx--form-requirement\">\n\t\t\t\t<ng-container *ngIf=\"!isTemplate(invalidText)\">{{invalidText}}</ng-container>\n\t\t\t\t<ng-template *ngIf=\"isTemplate(invalidText)\" [ngTemplateOutlet]=\"invalidText\"></ng-template>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: NumberComponent,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class NumberComponent implements ControlValueAccessor {\n\t/**\n\t * Variable used for creating unique ids for number input components.\n\t */\n\tstatic numberCount = 0;\n\n\t@HostBinding(\"class.bx--form-item\") containerClass = true;\n\n\t/**\n\t * `light` or `dark` number input theme.\n\t */\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n\t/**\n\t * Set to `true` for a disabled number input.\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * Set to `true` for a loading number component.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Set to `true` for an invalid number component.\n\t */\n\t@Input() invalid = false;\n\t/**\n\t * The unique id for the number component.\n\t */\n\t@Input() id = `number-${NumberComponent.numberCount}`;\n\t/**\n\t * Number input field render size\n\t */\n\t@Input() size: \"sm\" | \"md\" | \"xl\" = \"md\";\n\t/**\n\t * Reflects the required attribute of the `input` element.\n\t */\n\t@Input() required: boolean;\n\t/**\n\t * Sets the value attribute on the `input` element.\n\t */\n\t@Input() set value(v: any) {\n\t\tif (v === \"\" || v === null) {\n\t\t\tthis._value = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._value = Number(v);\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\t/**\n\t * Sets the min attribute on the `input` element.\n\t */\n\t@Input() min = null;\n\t/**\n\t * Sets the max attribute on the `input` element.\n\t */\n\t@Input() max = null;\n\t/**\n\t * Sets the text inside the `label` tag.\n\t */\n\t@Input() label: string | TemplateRef<any>;\n\t/**\n\t * Sets the optional helper text.\n\t */\n\t@Input() helperText: string | TemplateRef<any>;\n\t/**\n\t * Sets the invalid text.\n\t */\n\t@Input() invalidText: string | TemplateRef<any>;\n\t/**\n\t * Sets the amount the number controls increment and decrement by.\n\t */\n\t@Input() step = 1;\n\t/**\n\t * If `step` is a decimal, we may want precision to be set to go around floating point precision.\n\t */\n\t@Input() precision: number;\n\t/**\n\t * Emits event notifying other classes when a change in state occurs in the input.\n\t */\n\t@Output() change = new EventEmitter<NumberChange>();\n\n\t@Input()\n\tset decrementLabel(value: string | Observable<string>) {\n\t\tthis._decrementLabel.override(value);\n\t}\n\n\tget decrementLabel() {\n\t\treturn this._decrementLabel.value;\n\t}\n\n\t@Input()\n\tset incrementLabel(value: string | Observable<string>) {\n\t\tthis._incrementLabel.override(value);\n\t}\n\n\tget incrementLabel() {\n\t\treturn this._incrementLabel.value;\n\t}\n\n\tprotected _value = 0;\n\n\tprotected _decrementLabel: Overridable = this.i18n.getOverridable(\"NUMBER.DECREMENT\");\n\tprotected _incrementLabel: Overridable = this.i18n.getOverridable(\"NUMBER.INCREMENT\");\n\n\t/**\n\t * Creates an instance of `Number`.\n\t */\n\tconstructor(protected i18n: I18n) {\n\t\tNumberComponent.numberCount++;\n\t}\n\n\t/**\n\t * This is the initial value set to the component\n\t * @param value The input value.\n\t */\n\tpublic writeValue(value: any) {\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Sets a method in order to propagate changes back to the form.\n\t */\n\tpublic registerOnChange(fn: any) {\n\t\tthis.propagateChange = fn;\n\t}\n\n\t/**\n\t * Registers a callback to be triggered when the control has been touched.\n\t * @param fn Callback to be triggered when the number input is touched.\n\t */\n\tpublic registerOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\t@HostListener(\"focusout\")\n\tfocusOut() {\n\t\tthis.onTouched();\n\t}\n\n\t/**\n\t * Sets the disabled state through the model\n\t */\n\tsetDisabledState(isDisabled: boolean) {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\t/**\n\t * Called when number input is blurred. Needed to properly implement `ControlValueAccessor`.\n\t */\n\tonTouched: () => any = () => { };\n\n\t/**\n\t * Method set in `registerOnChange` to propagate changes back to the form.\n\t */\n\tpropagateChange = (_: any) => { };\n\n\t/**\n\t * Adds `step` to the current `value`.\n\t */\n\tonIncrement(): void {\n\t\tif (this.max === null || this.value + this.step <= this.max) {\n\t\t\tthis.value += this.step;\n\t\t\tthis.value = parseFloat(this.value.toPrecision(this.precision));\n\t\t\tthis.emitChangeEvent();\n\t\t}\n\t}\n\n\t/**\n\t * Subtracts `step` to the current `value`.\n\t */\n\tonDecrement(): void {\n\t\tif (this.min === null || this.value - this.step >= this.min) {\n\t\t\tthis.value -= this.step;\n\t\t\tthis.value = parseFloat(this.value.toPrecision(this.precision));\n\t\t\tthis.emitChangeEvent();\n\t\t}\n\t}\n\n\tgetDecrementLabel(): Observable<string> {\n\t\treturn this._decrementLabel.subject;\n\t}\n\n\tgetIncrementLabel(): Observable<string> {\n\t\treturn this._incrementLabel.subject;\n\t}\n\n\t/**\n\t * Creates a class of `NumberChange` to emit the change in the `Number`.\n\t */\n\temitChangeEvent(): void {\n\t\tlet event = new NumberChange();\n\t\tevent.source = this;\n\t\tevent.value = this.value;\n\t\tthis.change.emit(event);\n\t\tthis.propagateChange(this.value);\n\t}\n\n\tonNumberInputChange(event) {\n\t\tthis.value = event.target.value;\n\t\tthis.emitChangeEvent();\n\t}\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n}\nexport { NumberComponent as Number };\n","// modules\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\n\n// imports\nimport { Number } from \"./number.component\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tNumber\n\t],\n\texports: [\n\t\tNumber\n\t],\n\timports: [\n\t\tFormsModule,\n\t\tCommonModule,\n\t\tI18nModule,\n\t\tIconModule\n\t]\n})\nexport class NumberModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}