{"version":3,"file":"carbon-components-angular-modal.js","sources":["carbon-components-angular/modal/base-modal.class.ts","carbon-components-angular/modal/alert-modal.component.ts","carbon-components-angular/modal/alert-modal.interface.ts","carbon-components-angular/modal/modal-footer.component.ts","carbon-components-angular/modal/modal-header.component.ts","carbon-components-angular/modal/modal.service.ts","carbon-components-angular/modal/modal.component.ts","carbon-components-angular/modal/overlay.component.ts","carbon-components-angular/modal/modal-content.directive.ts","carbon-components-angular/modal/modal-content-text.directive.ts","carbon-components-angular/modal/modal-header-heading.directive.ts","carbon-components-angular/modal/modal-header-label.directive.ts","carbon-components-angular/modal/modal.module.ts","carbon-components-angular/modal/carbon-components-angular-modal.ts"],"names":[],"mappings":"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AAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,ACDA,AAAA,AAHA,AAIA,AAAA,AAAA,AAAA,AAAA,AACA,AALA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,ACDA,AAAA,AAHA,AAIA,AAAA,AAAA,AAAA,AAAA,AACA,AALA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,ACNA,AACA,AA6DA,AAAA,AAxCA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AC7DA,AAEA","sourcesContent":["import {\n\tOutput,\n\tEventEmitter,\n\tInput,\n\tDirective\n} from \"@angular/core\";\n\n/**\n * Extend `BaseModal` in your custom modal implementations to ensure consistent close behavior.\n *\n * `ModalService` depends on the `close` event to correctly clean up the component.\n */\n@Directive({ selector: \"[ibmBaseModal]\" })\nexport class BaseModal {\n\t/**\n\t * Base event emitter to propagate close events\n\t */\n\t@Output() close = new EventEmitter();\n\n\t/**\n\t * Controls the open state of the modal\n\t */\n\t@Input() open = false;\n\n\t/**\n\t * Default method to handle closing the modal\n\t */\n\tcloseModal(): void {\n\t\tthis.close.emit();\n\t}\n}\n","import {\n\tComponent,\n\tInject,\n\tViewChild,\n\tAfterViewInit,\n\tOptional\n} from \"@angular/core\";\nimport { BaseModal } from \"./base-modal.class\";\n\n/**\n * Component to create standard modals for presenting content or asking for user's input.\n * It can show as a passive modal showing only text or show as a transactional modal with\n * multiple buttons for different actions for the user to choose from.\n *\n * Using a modal in your application requires `ibm-placeholder` which would generally be\n * placed near the end of your app component template (app.component.ts or app.component.html) as:\n *\n * ```html\n * <ibm-placeholder></ibm-placeholder>\n * ```\n *\n * Example of opening the modal:\n *\n * ```typescript\n * \\@Component({\n *  selector: \"app-modal-demo\",\n *  template: `\n *   <button class=\"btn--primary\" (click)=\"openModal()\">Open modal</button>\n *   <ibm-placeholder></ibm-placeholder>`\n * })\n * export class ModalDemo {\n * \topenModal() {\n * \t\tthis.modalService.show({\n *\t\t\tmodalType: \"default\",\n *\t\t\tlabel: \"optional header text\",\n *\t\t\ttitle: \"Modal title\",\n *\t\t\ttext: \"Modal text\",\n *\t\t\tbuttons: [{\n *\t\t\t\ttext: \"Button text\",\n *\t\t\t\ttype: \"primary\",\n *\t\t\t\tclick: clickFunction\n *\t\t\t}]\n *\t\t});\n * \t}\n * }\n * ```\n */\n@Component({\n\tselector: \"ibm-alert-modal\",\n\ttemplate: `\n\t\t<ibm-modal\n\t\t\t[size]=\"size\"\n\t\t\t[theme]=\"type\"\n\t\t\t[ariaLabel]=\"title\"\n\t\t\t[hasScrollingContent]=\"hasScrollingContent\"\n\t\t\t[open]=\"open\"\n\t\t\t(overlaySelected)=\"dismissModal('overlay')\">\n\t\t\t<ibm-modal-header (closeSelect)=\"dismissModal('close')\">\n\t\t\t\t<p ibmModalHeaderLabel class=\"bx--type-delta\">{{label}}</p>\n\t\t\t\t<p ibmModalHeaderHeading class=\"bx--type-beta\">{{title}}</p>\n\t\t\t</ibm-modal-header>\n\t\t\t<div ibmModalContent #modalContent>\n\t\t\t\t<p [innerHTML]=\"content\"></p>\n\t\t\t</div>\n\t\t\t<ibm-modal-footer *ngIf=\"buttons.length > 0\">\n\t\t\t\t<ng-container *ngFor=\"let button of buttons; let i = index\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t[ibmButton]=\"button.type\"\n\t\t\t\t\t\t(click)=\"buttonClicked(i)\"\n\t\t\t\t\t\t[id]=\"button.id\"\n\t\t\t\t\t\t[attr.modal-primary-focus]=\"(button.type.indexOf('primary') !== -1 ? '' : null)\">\n\t\t\t\t\t\t{{button.text}}\n\t\t\t\t\t</button>\n\t\t\t\t</ng-container>\n\t\t\t</ibm-modal-footer>\n\t\t</ibm-modal>\n\t`\n})\nexport class AlertModal extends BaseModal implements AfterViewInit {\n\t// @ts-ignore\n\t@ViewChild(\"modalContent\", { static: true }) modalContent;\n\t/**\n\t * Creates an instance of `AlertModal`.\n\t */\n\tconstructor(\n\t\t@Optional() @Inject(\"type\") public type = \"default\",\n\t\t@Optional() @Inject(\"label\") public label: string,\n\t\t@Optional() @Inject(\"title\") public title: string,\n\t\t@Optional() @Inject(\"content\") public content: string,\n\t\t@Optional() @Inject(\"size\") public size: string,\n\t\t@Optional() @Inject(\"hasScrollingContent\") public hasScrollingContent: boolean = null,\n\t\t@Optional() @Inject(\"buttons\") public buttons = [],\n\t\t@Optional() @Inject(\"close\") public onClose: Function\n\t) {\n\t\tsuper();\n\t\tfor (let i = 0; i < this.buttons.length; i++) {\n\t\t\tconst button = this.buttons[i];\n\t\t\tif (!button.id) {\n\t\t\t\tbutton.id = `alert-modal-button-${i}`;\n\t\t\t}\n\t\t\tif (!button.type) {\n\t\t\t\tbutton.type = \"secondary\";\n\t\t\t}\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tif (!this.modalContent) { return false; }\n\t\tconst element = this.modalContent.nativeElement;\n\t\tif (element.scrollHeight > element.clientHeight) {\n\t\t\telement.tabIndex = 0;\n\t\t} else {\n\t\t\telement.tabIndex = -1;\n\t\t}\n\t}\n\n\tbuttonClicked(buttonIndex) {\n\t\tconst button = this.buttons[buttonIndex];\n\t\tif (button.click) {\n\t\t\tbutton.click();\n\t\t}\n\n\t\tthis.closeModal();\n\t}\n\n\tdismissModal(trigger) {\n\t\tif (this.onClose && this.onClose(trigger) === false) {\n\t\t\treturn;\n\t\t}\n\t\tthis.closeModal();\n\t}\n}\n","export enum AlertModalType {\n\tdefault = \"default\",\n\tdanger = \"danger\"\n}\n\nexport interface AlertModalData {\n\t/**\n\t * type of the modal\n\t */\n\ttype?: AlertModalType;\n\t/**\n\t * Additional label shown over the modal\n\t */\n\tlabel?: string;\n\t/**\n\t * Primary title for the modal\n\t */\n\ttitle?: string;\n\t/**\n\t * Content for the modal body, could include HTML tags\n\t */\n\tcontent?: string;\n\t/**\n\t * Size of the modal to display.\n\t */\n\tsize?: \"xs\" | \"sm\" | \"lg\";\n\t/**\n\t * Array of `ModalButton`s\n\t */\n\tbuttons?: Array<ModalButton>;\n\t/**\n\t * Specify whether the modal contains scrolling content. This property overrides the automatic detection\n\t * of the existence of scrolling content. Set this property to `true` to force overflow indicator to\n\t * show up or to `false` to force overflow indicator to disappear.\n\t * It is set to `null` by default which indicates not to override automatic detection.\n\t */\n\thasScrollingContent?: boolean;\n\t/**\n\t * Callback for non-specific close events. `return false;` to prevent the modal from closing\n\t * Property trigger has a value of `overlay` or `close`\n\t */\n\tclose?: (trigger?: \"overlay\" | \"close\") => boolean;\n}\n\nexport enum ModalButtonType {\n\tprimary = \"primary\",\n\tsecondary = \"secondary\",\n\ttertiary = \"tertiary\",\n\tghost = \"ghost\",\n\tdanger = \"danger\",\n\tdanger_primary = \"danger--primary\"\n}\n\nexport interface ModalButton {\n\t/**\n\t * Display value of the button\n\t */\n\ttext: string;\n\t/**\n\t * Optional unique ID for the button\n\t */\n\tid?: string;\n\t/**\n\t * Button type\n\t */\n\ttype?: ModalButtonType;\n\t/**\n\t * Callback for the button `click` event\n\t */\n\tclick?: Function;\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-modal-footer\",\n\ttemplate: `\n\t\t<footer class=\"bx--modal-footer\">\n\t\t\t<ng-content></ng-content>\n\t\t</footer>\n\t`\n})\nexport class ModalFooter {}\n","import {\n\tComponent,\n\tOutput,\n\tEventEmitter,\n\tInput\n} from \"@angular/core\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { ExperimentalService } from \"carbon-components-angular/experimental\";\n\n/**\n * ***Inputs***\n * ```html\n * <ibm-modal-header>Header text</ibm-modal-header>\n * ```\n *\n * ***Outputs***\n * ```html\n * <ibm-modal-header (closeSelect)=\"closeModal()\">Header text</ibm-modal-header>\n * ```\n */\n@Component({\n\tselector: \"ibm-modal-header\",\n\ttemplate: `\n\t\t<header class=\"{{theme}} bx--modal-header\">\n\t\t\t<ng-content></ng-content>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"bx--modal-close\"\n\t\t\t\t(click)=\"onClose()\">\n\t\t\t\t<span class=\"bx--assistive-text\">{{ closeLabel }}</span>\n\t\t\t\t<svg ibmIcon=\"close\" size=\"20\" class=\"bx--modal-close__icon\"></svg>\n\t\t\t</button>\n\t\t</header>\n\n\t`\n})\nexport class ModalHeader {\n\t/**\n\t * Sets the style on the modal heading based on its category.\n\t */\n\t@Input() theme = \"default\";\n\t/**\n\t * Accessible label for the header close button.\n\t * Defaults to the `MODAL.CLOSE` value from the i18n service.\n\t */\n\t@Input() closeLabel = this.i18n.get().MODAL.CLOSE;\n\n\t/**\n\t * To emit the event of clicking on the close icon within the modal.\n\t */\n\t@Output() closeSelect = new EventEmitter();\n\n\tconstructor(protected i18n: I18n, protected experimental: ExperimentalService) {}\n\n\t/**\n\t * Handles click for the close icon button within the `Modal`.\n\t */\n\tpublic onClose() {\n\t\tthis.closeSelect.emit();\n\t}\n}\n","import {\n\tComponentFactoryResolver,\n\tComponentRef,\n\tInjector\n} from \"@angular/core\";\nimport { Modal } from \"./modal.component\";\nimport { ReplaySubject } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { AlertModal } from \"./alert-modal.component\";\nimport { AlertModalData } from \"./alert-modal.interface\";\nimport { PlaceholderService } from \"carbon-components-angular/placeholder\";\nimport { tap, delay } from \"rxjs/operators\";\n\n\n/**\n * Modal service handles instantiating and destroying modal instances.\n * Uses PlaceholderService to track open instances, and for it's placeholder view reference.\n */\n@Injectable()\nexport class ModalService {\n\t// track all our open modals\n\tprotected static modalList: Array<ComponentRef<any>> = [];\n\n\t/**\n\t * Creates an instance of `ModalService`.\n\t */\n\tconstructor(public resolver: ComponentFactoryResolver, public placeholderService: PlaceholderService) {}\n\n\t/**\n\t * Creates and renders the modal component that is passed in.\n\t * `inputs` is an optional parameter of `data` that can be passed to the `Modal` component.\n\t */\n\tcreate<T>(data: {component: any, inputs?: any}): ComponentRef<any> {\n\t\tlet defaults = {inputs: {}};\n\t\tdata = Object.assign({}, defaults, data);\n\n\t\tconst inputProviders = Object.keys(data.inputs).map(inputName => ({\n\t\t\tprovide: inputName,\n\t\t\tuseValue: data.inputs[inputName]\n\t\t}));\n\t\tconst injector = Injector.create(inputProviders);\n\t\tconst factory = this.resolver.resolveComponentFactory(data.component);\n\t\tlet focusedElement = document.activeElement as HTMLElement;\n\n\t\tlet component = this.placeholderService.createComponent(factory, injector);\n\n\t\tsetTimeout(() => {\n\t\t\tcomponent.instance.open = true;\n\t\t});\n\n\t\tcomponent[\"previouslyFocusedElement\"] = focusedElement;  // used to return focus to previously focused element\n\n\t\tcomponent.instance.close.pipe(\n\t\t\t// trigger the close animation\n\t\t\ttap(() => {\n\t\t\t\tcomponent.instance.open = false;\n\t\t\t}),\n\t\t\t// delay closing by an arbitrary amount to allow the animation to finish\n\t\t\tdelay(150)\n\t\t).subscribe(() => {\n\t\t\tthis.placeholderService.destroyComponent(component);\n\t\t\t// filter out our component\n\t\t\tModalService.modalList = ModalService.modalList.filter(c => c !== component);\n\t\t});\n\n\t\tcomponent.onDestroy(() => {\n\t\t\tfocusedElement.focus();\n\t\t});\n\n\t\tModalService.modalList.push(component);\n\n\t\treturn component;\n\t}\n\n\t/**\n\t * Creates and renders a new alert modal component.\n\t * @param data You can pass in:\n\t * `type` - \"default\" | \"danger\" = \"default\",\n\t * `label` - a label shown over the title,\n\t * `title` - modal's title,\n\t * `content` - modal's content, could include HTML tags.\n\t * `buttons` is an array of objects\n\t * `close` custom close function\n\t * ```\n\t * {\n\t * \t\ttext: \"Button text\",\n\t * \t\ttype: \"primary\" | \"secondary\" | \"tertiary\" | \"ghost\" | \"danger\" | \"danger--primary\" = \"primary\",\n\t * \t\tclick: clickFunction,\n\t * }\n\t * ```\n\t */\n\tshow(data: AlertModalData) {\n\t\treturn this.create({\n\t\t\tcomponent: AlertModal,\n\t\t\tinputs: {\n\t\t\t\ttype: data.type,\n\t\t\t\tlabel: data.label,\n\t\t\t\ttitle: data.title,\n\t\t\t\tcontent: data.content,\n\t\t\t\thasScrollingContent: data.hasScrollingContent || null,\n\t\t\t\tsize: data.size,\n\t\t\t\tbuttons: data.buttons || [],\n\t\t\t\tclose: data.close || (() => {})\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Destroys the modal on the supplied index.\n\t * When called without parameters it destroys the most recently created/top most modal.\n\t */\n\tdestroy(index = -1) {\n\t\t// return if nothing to destroy because it's already destroyed\n\t\tif (index >= ModalService.modalList.length || ModalService.modalList.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\t// on negative index destroy the last on the list (top modal)\n\t\tif (index < 0) {\n\t\t\tindex = ModalService.modalList.length - 1;\n\t\t}\n\n\t\tthis.placeholderService.destroyComponent(ModalService.modalList[index]);\n\t\tModalService.modalList.splice(index, 1);\n\t}\n}\n","import { ModalService } from \"./modal.service\";\nimport {\n\tAfterViewInit,\n\tComponent,\n\tEventEmitter,\n\tHostListener,\n\tInput,\n\tOutput,\n\tElementRef,\n\tViewChild,\n\tSimpleChanges,\n\tOnChanges\n} from \"@angular/core\";\nimport { cycleTabs, getFocusElementList } from \"carbon-components-angular/common\";\n\n/**\n * Component to create modals for presenting content.\n *\n * [See demo](../../?path=/story/modal--basic)\n *\n * Using a modal in your application requires `ibm-placeholder` which would generally be\n * placed near the end of your app component template (app.component.ts or app.component.html) as:\n *\n```html\n<ibm-placeholder></ibm-placeholder>\n```\n *\n * A more complete example for `Modal` is given as follows:\n *\n * Example modal definition:\n *\n```typescript\n@Component({\n\tselector: \"app-sample-modal\",\n\ttemplate: `\n\t\t\t\t<ibm-modal size=\"xl\" (overlaySelected)=\"closeModal()\">\n\t\t\t\t\t<ibm-modal-header (closeSelect)=\"closeModal()\">Header text</ibm-modal-header>\n\t\t\t\t\t\t<section class=\"modal-body\">\n\t\t\t\t\t\t\t<h1>Sample modal works.</h1>\n\t\t\t\t\t\t\t<button class=\"btn--icon-link\" nPopover=\"Hello there\" title=\"Popover title\" placement=\"right\" appendInline=\"true\">\n\t\t\t\t\t\t\t\t<svg ibmIcon=\"info\" size=\"sm\"></ibm-icon>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{{modalText}}\n\t\t\t\t\t\t</section>\n\t\t\t\t\t<ibm-modal-footer><button ibmButton=\"primary\" (click)=\"closeModal()\">Close</button></ibm-modal-footer>\n\t\t\t\t</ibm-modal>`,\n\tstyleUrls: [\"./sample-modal.component.scss\"]\n})\nexport class SampleModal extends BaseModal {\n\tmodalText: string;\n\tconstructor(protected injector: Injector) {\n\t\tsuper();\n\t\tthis.modalText = this.injector.get(\"modalText\");\n\t}\n}\n```\n *\n * Example of opening the modal:\n *\n```typescript\n@Component({\n\tselector: \"app-modal-demo\",\n\ttemplate: `\n\t\t\t\t<button ibmButton=\"primary\" (click)=\"openModal('drill')\">Drill-down modal</button>\n\t\t\t\t<ibm-placeholder></ibm-placeholder>`\n})\nexport class ModalDemo {\n\topenModal() {\n\t\tthis.modalService.create({component: SampleModal, inputs: {modalText: \"Hello universe.\"}});\n\t}\n}\n```\n *\n * <example-url>../../iframe.html?id=modal--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-modal\",\n\ttemplate: `\n\t\t<ibm-overlay\n\t\t\t[theme]=\"theme\"\n\t\t\t[open]=\"open\"\n\t\t\t(overlaySelect)=\"overlaySelected.emit()\">\n\t\t\t<div\n\t\t\t\tclass=\"bx--modal-container\"\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t'bx--modal-container--xs': size === 'xs',\n\t\t\t\t\t'bx--modal-container--sm': size === 'sm',\n\t\t\t\t\t'bx--modal-container--lg': size === 'lg'\n\t\t\t\t}\"\n\t\t\t\trole=\"dialog\"\n\t\t\t\taria-modal=\"true\"\n\t\t\t\tstyle=\"z-index:1;\"\n\t\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t\t#modal>\n\t\t\t\t<ng-content></ng-content>\n\t\t\t\t<div\n\t\t\t\t\t*ngIf=\"hasScrollingContent !== null ? hasScrollingContent : shouldShowScrollbar\"\n\t\t\t\t\tclass=\"bx--modal-content--overflow-indicator\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ibm-overlay>\n\t`\n})\nexport class Modal implements AfterViewInit, OnChanges {\n\t/**\n\t * Size of the modal to display.\n\t */\n\t@Input() size: \"xs\" | \"sm\" | \"lg\";\n\t/**\n\t * Classification of the modal.\n\t */\n\t@Input() theme: \"default\" | \"danger\" = \"default\";\n\n\t/**\n\t * Label for the modal.\n\t *\n\t * @deprecated since v4\n\t */\n\t@Input() set modalLabel(value: string) {\n\t\tthis.ariaLabel = value;\n\t}\n\n\tget modalLabel() {\n\t\treturn this.ariaLabel;\n\t}\n\n\t@Input() ariaLabel = \"default\";\n\n\t/**\n\t * Controls the visibility of the modal when used directly in a template\n\t */\n\t@Input() open = false;\n\n\t/**\n\t * The element that triggers the modal, which should receive focus when the modal closes\n\t */\n\t@Input() trigger: HTMLElement;\n\n\t/**\n\t * Specify whether the modal contains scrolling content. This property overrides the automatic\n\t * detection of the existence of scrolling content. Set this property to `true` to force\n\t * overflow indicator to show up or to `false` to force overflow indicator to disappear.\n\t * It is set to `null` by default which indicates not to override automatic detection.\n\t */\n\t@Input() hasScrollingContent: boolean = null;\n\n\t/**\n\t * Emits event when click occurs within `n-overlay` element. This is to track click events occurring outside bounds of the `Modal` object.\n\t */\n\t@Output() overlaySelected = new EventEmitter();\n\t/**\n\t * To emit the closing event of the modal window.\n\t */\n\t@Output() close = new EventEmitter();\n\t/**\n\t * Maintains a reference to the view DOM element of the `Modal`.\n\t */\n\t// @ts-ignore\n\t@ViewChild(\"modal\", { static: true }) modal: ElementRef;\n\n\t/**\n\t * An element should have 'modal-primary-focus' as an attribute to receive initial focus within the `Modal` component.\n\t */\n\tselectorPrimaryFocus = \"[modal-primary-focus]\";\n\n\t/**\n\t * Creates an instance of `Modal`.\n\t */\n\tconstructor(public modalService: ModalService) {}\n\n\tngOnChanges({ open }: SimpleChanges) {\n\t\tif (open) {\n\t\t\tif (open.currentValue) {\n\t\t\t\t// `100` is just enough time to allow the modal\n\t\t\t\t// to become visible, so that we can set focus\n\t\t\t\tsetTimeout(() => this.focusInitialElement(), 100);\n\t\t\t} else if (this.trigger) {\n\t\t\t\tthis.trigger.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set document focus to be on the modal component after it is initialized.\n\t */\n\tngAfterViewInit() {\n\t\tthis.focusInitialElement();\n\t}\n\n\t/**\n\t * Handle keyboard events to close modal and tab through the content within the modal.\n\t */\n\t@HostListener(\"keydown\", [\"$event\"])\n\thandleKeyboardEvent(event: KeyboardEvent) {\n\t\tswitch (event.key) {\n\t\t\tcase \"Escape\": {\n\t\t\t\tevent.stopImmediatePropagation();  // prevents events being fired for multiple modals if more than 2 open\n\t\t\t\tthis.modalService.destroy();  // destroy top (latest) modal\n\t\t\t\tthis.close.emit();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase \"Tab\": {\n\t\t\t\tcycleTabs(event, this.modal.nativeElement);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * This detects whether or not the modal contains scrolling content.\n\t *\n\t * To force trigger a detection (ie. on window resize), change or reset the value of the modal content.\n\t *\n\t * Use the `hasScrollingContent` input to manually override the overflow indicator.\n\t */\n\tget shouldShowScrollbar() {\n\t\tconst modalContent = this.modal ? this.modal.nativeElement.querySelector(\".bx--modal-content\") : null;\n\t\tif (modalContent) {\n\t\t\tconst modalContentHeight = modalContent.getBoundingClientRect().height;\n\t\t\tconst modalContentScrollHeight = modalContent.scrollHeight;\n\t\t\treturn modalContentScrollHeight > modalContentHeight;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprotected focusInitialElement() {\n\t\tconst primaryFocusElement = this.modal.nativeElement.querySelector(this.selectorPrimaryFocus);\n\t\tif (primaryFocusElement && primaryFocusElement.focus) {\n\t\t\tsetTimeout(() => primaryFocusElement.focus());\n\t\t} else if (getFocusElementList(this.modal.nativeElement).length > 0) {\n\t\t\tsetTimeout(() => getFocusElementList(this.modal.nativeElement)[0].focus());\n\t\t} else {\n\t\t\tsetTimeout(() => this.modal.nativeElement.focus());\n\t\t}\n\t}\n}\n","import {\n\tComponent,\n\tOutput,\n\tEventEmitter,\n\tViewChild,\n\tElementRef,\n\tInput\n} from \"@angular/core\";\n\n\n/**\n * Component for the overlay object that acts as a backdrop to the `Modal` component.\n *\n * The main purpose for this component is to be able to handle click events that fall outside\n * the bounds of the `Modal` component.\n */\n@Component({\n\tselector: \"ibm-overlay\",\n\ttemplate: `\n\t\t<section\n\t\t\tclass=\"bx--modal bx--modal-tall\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--modal--danger': theme === 'danger',\n\t\t\t\t'is-visible': open\n\t\t\t}\"\n\t\t\t(click)=\"overlayClick($event)\"\n\t\t\t#overlay>\n\t\t\t<ng-content></ng-content>\n\t\t</section>\n\t`\n})\nexport class Overlay {\n\t/**\n\t * Classification of the modal.\n\t */\n\t@Input() theme: \"default\" | \"danger\" = \"default\";\n\t@Input() open = false;\n\t/**\n\t * To emit the event where the user selects the overlay behind the `Modal`.\n\t */\n\t@Output() overlaySelect = new EventEmitter();\n\t/**\n\t * Maintains a reference to the view DOM element of the `Overlay`.\n\t */\n\t// @ts-ignore\n\t@ViewChild(\"overlay\", { static: true }) overlay: ElementRef;\n\n\t/**\n\t * Handles the user clicking on the `Overlay` which resides outside the `Modal` object.\n\t */\n\toverlayClick(event) {\n\t\tif (event.target !== this.overlay.nativeElement) { return; }\n\t\tevent.stopPropagation();\n\t\tthis.overlaySelect.emit(event);\n\t}\n\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmModalContent]\"\n})\nexport class ModalContent {\n\t@HostBinding(\"class.bx--modal-content\") modalContentClass = true;\n\t/**\n\t * Provide whether the modal content has a form element.\n\t * If `true` is used here, non-form child content should have `bx--modal-content__regular-content` class.\n\t */\n\t@HostBinding(\"class.bx--modal-content--with-form\") @Input() hasForm = false;\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmModalContentText]\"\n})\nexport class ModalContentText {\n\t@HostBinding(\"class.bx--modal-content__text\") modalContentTextClass = true;\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmModalHeaderHeading]\"\n})\nexport class ModalHeaderHeading {\n\t@HostBinding(\"class.bx--modal-header__heading\") modalHeaderHeadingClass = true;\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmModalHeaderLabel]\"\n})\nexport class ModalHeaderLabel {\n\t@HostBinding(\"class.bx--modal-header__label\") modalHeaderLabelClass = true;\n}\n","// modules\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n// imports\nimport { ModalService } from \"./modal.service\";\nimport { Modal } from \"./modal.component\";\nimport { ModalFooter } from \"./modal-footer.component\";\nimport { Overlay } from \"./overlay.component\";\nimport { ModalHeader } from \"./modal-header.component\";\nimport { AlertModal } from \"./alert-modal.component\";\nimport { ButtonModule } from \"carbon-components-angular/forms\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { PlaceholderModule } from \"carbon-components-angular/placeholder\";\nimport { ExperimentalModule } from \"carbon-components-angular/experimental\";\nimport { ModalContent } from \"./modal-content.directive\";\nimport { ModalContentText } from \"./modal-content-text.directive\";\nimport { ModalHeaderHeading } from \"./modal-header-heading.directive\";\nimport { ModalHeaderLabel } from \"./modal-header-label.directive\";\nimport { BaseModal } from \"./base-modal.class\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tAlertModal,\n\t\tModal,\n\t\tModalHeader,\n\t\tModalFooter,\n\t\tOverlay,\n\t\tModalContent,\n\t\tModalContentText,\n\t\tModalHeaderHeading,\n\t\tModalHeaderLabel,\n\t\tBaseModal\n\t],\n\texports: [\n\t\tAlertModal,\n\t\tModal,\n\t\tModalHeader,\n\t\tModalFooter,\n\t\tModalContent,\n\t\tModalContentText,\n\t\tModalHeaderHeading,\n\t\tModalHeaderLabel,\n\t\tBaseModal\n\t],\n\tentryComponents: [\n\t\tAlertModal,\n\t\tModal,\n\t\tModalFooter,\n\t\tModalHeader\n\t],\n\tproviders: [ ModalService ],\n\timports: [\n\t\tCommonModule,\n\t\tButtonModule,\n\t\tI18nModule,\n\t\tPlaceholderModule,\n\t\tExperimentalModule,\n\t\tIconModule\n\t]\n})\nexport class ModalModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}