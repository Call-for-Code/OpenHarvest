{"version":3,"file":"carbon-components-angular-structured-list.js","sources":["carbon-components-angular/structured-list/list-column.component.ts","carbon-components-angular/structured-list/list-header.component.ts","carbon-components-angular/structured-list/list-row.component.ts","carbon-components-angular/structured-list/structured-list.component.ts","carbon-components-angular/structured-list/structured-list.module.ts","carbon-components-angular/structured-list/carbon-components-angular-structured-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, HostBinding, Input } from \"@angular/core\";\n\n/**\n * `ListColumn` represents a single column in a `StructuredList`.\n *\n * `ListColumn`s can be used in a `ListHeader` to specify the column headers, or in `ListRow`s to specify the column data.\n *\n * Example:\n * ```html\n * <ibm-list-column nowrap=\"true\">Column 1</ibm-list-column>\n * ```\n */\n@Component({\n\tselector: \"ibm-list-column\",\n\ttemplate: `\n\t\t<span *ngIf=\"skeleton\"></span>\n\t\t<ng-content></ng-content>\n\t`\n})\nexport class ListColumn {\n\t@Input() skeleton = false;\n\n\t@HostBinding(\"class.bx--structured-list-th\") isHeaderColumn = true;\n\t@HostBinding(\"class.bx--structured-list-td\") isBodyColumn = true;\n\t/**\n\t * Applies `white-space: nowrap` to the content of this `ListColumn`\n\t */\n\t@HostBinding(\"class.bx--structured-list-content--nowrap\") @Input() nowrap = false;\n}\n","import {\n\tComponent,\n\tHostBinding,\n\tContentChildren,\n\tQueryList,\n\tAfterContentInit,\n\tInput\n} from \"@angular/core\";\nimport { ListColumn } from \"./list-column.component\";\n\n/**\n * `ListHeader` provides a container for the `ListColumn`s that make up the header of a structured list.\n *\n * Example:\n * ```html\n * \t<ibm-list-header>\n *\t\t<ibm-list-column nowrap=\"true\">Column 1</ibm-list-column>\n *\t\t<ibm-list-column nowrap=\"true\">Column 2</ibm-list-column>\n *\t\t<ibm-list-column>Column 3</ibm-list-column>\n *\t</ibm-list-header>\n * ```\n */\n@Component({\n\tselector: \"ibm-list-header\",\n\ttemplate: `\n\t\t<div class=\"bx--structured-list-row bx--structured-list-row--header-row\">\n\t\t\t<ng-content></ng-content>\n\t\t\t<div *ngIf=\"selection\" class=\"bx--structured-list-th\"></div>\n\t\t</div>\n\t`\n})\nexport class ListHeader implements AfterContentInit {\n\t@HostBinding(\"class.bx--structured-list-thead\") wrapper = true;\n\n\t@Input()\n\tset skeleton(value: any) {\n\t\tthis._skeleton = value;\n\t\tthis.updateChildren();\n\t}\n\n\tget skeleton(): any {\n\t\treturn this._skeleton;\n\t}\n\n\t@ContentChildren(ListColumn) columns: QueryList<ListColumn>;\n\n\t/**\n\t * Set by the containing `StructuredList`. Adds a dummy header for the selection column when set to true.\n\t */\n\tselection = false;\n\n\tprotected _skeleton = false;\n\n\tngAfterContentInit() {\n\t\tthis.columns.forEach(column => {\n\t\t\tcolumn.isBodyColumn = false;\n\t\t\tcolumn.isHeaderColumn = true;\n\t\t});\n\t\tthis.updateChildren();\n\t}\n\n\tprotected updateChildren() {\n\t\tif (this.columns) {\n\t\t\tthis.columns.toArray().forEach(child => child.skeleton = this.skeleton);\n\t\t}\n\t}\n}\n","import {\n\tComponent,\n\tHostBinding,\n\tContentChildren,\n\tQueryList,\n\tAfterContentInit,\n\tInput,\n\tHostListener,\n\tViewChild,\n\tElementRef,\n\tEventEmitter,\n\tOutput\n} from \"@angular/core\";\nimport { ListColumn } from \"./list-column.component\";\n\n/**\n * `ListRow` provides a container for the `ListColumn`s that make up the body of a structured list.\n *\n * Example:\n * ```html\n * \t<ibm-list-row>\n *\t\t<ibm-list-column>Row 1</ibm-list-column>\n *\t\t<ibm-list-column nowrap=\"true\">Row One</ibm-list-column>\n *\t\t<ibm-list-column>\n *\t\t\tLorem ipsum dolor sit amet,\n *\t\t\tconsectetur adipiscing elit. Nunc dui magna,\n *\t\t\tfinibus id tortor sed, aliquet bibendum augue.\n *\t\t\tAenean posuere sem vel euismod dignissim. Nulla ut cursus dolor.\n *\t\t\tPellentesque vulputate nisl a porttitor interdum.\n *\t\t</ibm-list-column>\n *\t</ibm-list-row>\n * ```\n */\n@Component({\n\tselector: \"ibm-list-row\",\n\ttemplate: `\n\t\t<ng-content></ng-content>\n\t\t<ng-container *ngIf=\"selection\">\n\t\t\t<input\n\t\t\t\t#input\n\t\t\t\ttabindex=\"-1\"\n\t\t\t\tclass=\"bx--structured-list-input\"\n\t\t\t\ttype=\"radio\"\n\t\t\t\t[value]=\"value\"\n\t\t\t\t[name]=\"name\"\n\t\t\t\t[title]=\"label\"\n\t\t\t\t(change)=\"onChange($event)\"\n\t\t\t\t[checked]=\"selected\"/>\n\t\t\t<div class=\"bx--structured-list-td\">\n\t\t\t\t<svg ibmIcon=\"checkmark--filled\" size=\"16\" class=\"bx--structured-list-svg\"></svg>\n\t\t\t</div>\n\t\t</ng-container>\n\t`\n})\nexport class ListRow implements AfterContentInit {\n\t@Input() @HostBinding(\"class.bx--structured-list-row--selected\") selected = false;\n\t/**\n\t * Applies an accessible label to the row. Defaults to no label.\n\t */\n\t@Input() @HostBinding(\"attr.aria-label\") label;\n\t/**\n\t * The value for the row. Returned via `ngModel` or `selected` event on the containing `StructuredList`.\n\t */\n\t@Input() value;\n\t/**\n\t * Internal event used to notify the containing `StructuredList` of changes.\n\t */\n\t@Output() change: EventEmitter<Event> = new EventEmitter();\n\n\t/**\n\t * Set by the containing `StructuredList`. Enables or disables row level selection features.\n\t */\n\tselection = false;\n\t/**\n\t * Set by the containing `StructuredList`. When `selection = true`, used for the `name` property on the radio input.\n\t */\n\tname = \"list\";\n\n\t@HostBinding(\"class.bx--structured-list-row\") wrapper = true;\n\t@HostBinding(\"attr.tabindex\") tabindex = this.selection ? \"0\" : null;\n\n\t@ContentChildren(ListColumn) columns: QueryList<ListColumn>;\n\n\t// @ts-ignore\n\t@ViewChild(\"input\", { static: false }) input: ElementRef;\n\n\tngAfterContentInit() {\n\t\tthis.columns.forEach(column => {\n\t\t\tcolumn.isBodyColumn = true;\n\t\t\tcolumn.isHeaderColumn = false;\n\t\t});\n\t}\n\n\t@HostListener(\"click\")\n\tonclick() {\n\t\tif (this.selection) {\n\t\t\tthis.input.nativeElement.click();\n\t\t}\n\t}\n\n\tonChange(event) {\n\t\tthis.change.emit(event);\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tContentChildren,\n\tQueryList,\n\tAfterContentInit,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\nimport { ListRow } from \"./list-row.component\";\nimport { ListHeader } from \"./list-header.component\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\n\n/**\n * Structured Lists represent related tabular data. For larger datasets consider a full `Table`.\n *\n * [See demo](../../?path=/story/structured-list--basic)\n *\n * See [structured-list/usage](https://www.carbondesignsystem.com/components/structured-list/usage) for usage guidance.\n *\n * A basic structued list looks something like:\n * ```html\n *\t<ibm-structured-list>\n *\t\t<ibm-list-header>\n *\t\t\t<ibm-list-column nowrap=\"true\">Column 1</ibm-list-column>\n *\t\t\t<ibm-list-column nowrap=\"true\">Column 2</ibm-list-column>\n *\t\t\t<ibm-list-column>Column 3</ibm-list-column>\n *\t\t</ibm-list-header>\n *\t\t<ibm-list-row>\n *\t\t\t<ibm-list-column>Row 1</ibm-list-column>\n *\t\t\t<ibm-list-column nowrap=\"true\">Row One</ibm-list-column>\n *\t\t\t<ibm-list-column>\n *\t\t\t\tLorem ipsum dolor sit amet,\n *\t\t\t\tconsectetur adipiscing elit. Nunc dui magna,\n *\t\t\t\tfinibus id tortor sed, aliquet bibendum augue.\n *\t\t\t\tAenean posuere sem vel euismod dignissim. Nulla ut cursus dolor.\n *\t\t\t\tPellentesque vulputate nisl a porttitor interdum.\n *\t\t\t</ibm-list-column>\n *\t\t</ibm-list-row>\n *\t\t<ibm-list-row>\n *\t\t\t<ibm-list-column>Row 2</ibm-list-column>\n *\t\t\t<ibm-list-column nowrap=\"true\">Row Two</ibm-list-column>\n *\t\t\t<ibm-list-column>\n *\t\t\t\tLorem ipsum dolor sit amet,\n *\t\t\t\tconsectetur adipiscing elit. Nunc dui magna,\n *\t\t\t\tfinibus id tortor sed, aliquet bibendum augue.\n *\t\t\t\tAenean posuere sem vel euismod dignissim. Nulla ut cursus dolor.\n *\t\t\t\tPellentesque vulputate nisl a porttitor interdum.\n *\t\t\t</ibm-list-column>\n *\t\t</ibm-list-row>\n *\t</ibm-structured-list>\n * ```\n *\n * <example-url>../../iframe.html?id=structured-list--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-structured-list\",\n\ttemplate: `\n\t\t<section\n\t\t\tclass=\"bx--structured-list\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--structured-list--border': border,\n\t\t\t\t'bx--structured-list--selection': selection,\n\t\t\t\t'bx--structured-list--condensed': condensed,\n\t\t\t\t'bx--structured-list-content--nowrap': nowrap,\n\t\t\t\t'bx--skeleton': skeleton\n\t\t\t}\">\n\t\t\t<ng-content select=\"ibm-list-header\"></ng-content>\n\t\t\t<div class=\"bx--structured-list-tbody\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</div>\n\t\t</section>\n\t`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: StructuredList,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class StructuredList implements AfterContentInit, ControlValueAccessor {\n\t/**\n\t * A counter to provide unique default values.\n\t */\n\tstatic listCount = 0;\n\t/**\n\t * Set to `true` to enable radio like selection of the rows.\n\t */\n\t@Input() selection = false;\n\t/**\n\t * Set to `true` to apply a border and white background.\n\t */\n\t@Input() border = false;\n\t/**\n\t * Set to `true` to apply a condensed style to the headers and rows.\n\t */\n\t@Input() condensed = false;\n\t/**\n\t * Set to `true` to apply `white-space: nowrap` on _all_ conent.\n\t */\n\t@Input() nowrap = false;\n\t/**\n\t * Used when `selection = true` as the row radio group `name`\n\t */\n\t@Input() name = `structured-list-${StructuredList.listCount++}`;\n\n\t/**\n\t * Sets the skeleton value for all `ListHeader` to the skeleton value of `StructuredList`.\n\t */\n\t@Input()\n\tset skeleton(value: any) {\n\t\tthis._skeleton = value;\n\t\tthis.updateChildren();\n\t}\n\n\t/**\n\t * Returns the skeleton value in the `StructuredList` if there is one.\n\t */\n\tget skeleton(): any {\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Emits an event when the row selection changes.\n\t *\n\t * Emits an object that looks like:\n\t * ```javascript\n\t * {\n\t * \tvalue: \"something\",\n\t * \tselected: true,\n\t * \tname: \"structured-list-1\"\n\t * }\n\t * ```\n\t */\n\t@Output() selected: EventEmitter<{value: string, selected: boolean, name: string}> = new EventEmitter();\n\n\t@ContentChildren(ListRow) rows: QueryList<ListRow>;\n\t@ContentChildren(ListHeader) headers: QueryList<ListHeader>;\n\n\tprotected _skeleton = false;\n\n\tonChange = (_: any) => { };\n\n\tonTouched = () => { };\n\n\tngAfterContentInit() {\n\t\tconst setSelection = (rowOrHeader: ListRow | ListHeader) => {\n\t\t\trowOrHeader.selection = this.selection;\n\t\t};\n\n\t\tthis.headers.forEach(setSelection);\n\t\tthis.rows.forEach(row => {\n\t\t\tsetSelection(row);\n\t\t\trow.name = this.name;\n\t\t\trow.tabindex = this.selection ? \"0\" : \"null\";\n\t\t\trow.change.subscribe(() => {\n\t\t\t\tthis.selected.emit({\n\t\t\t\t\tvalue: row.value,\n\t\t\t\t\tselected: row.selected,\n\t\t\t\t\tname: this.name\n\t\t\t\t});\n\t\t\t\tthis.onChange(row.value);\n\t\t\t});\n\t\t});\n\t\tthis.updateChildren();\n\t}\n\n\twriteValue(value: any) {\n\t\tif (!this.rows) { return; }\n\t\tthis.rows.forEach(row => {\n\t\t\tif (row.value === value) {\n\t\t\t\trow.selected = true;\n\t\t\t} else {\n\t\t\t\trow.selected = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterOnChange(fn: any) {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\tprotected updateChildren() {\n\t\tif (this.headers) {\n\t\t\tthis.headers.toArray().forEach(child => child.skeleton = this.skeleton);\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { StructuredList } from \"./structured-list.component\";\nimport { ListRow } from \"./list-row.component\";\nimport { ListHeader } from \"./list-header.component\";\nimport { ListColumn } from \"./list-column.component\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tStructuredList,\n\t\tListRow,\n\t\tListHeader,\n\t\tListColumn\n\t],\n\texports: [\n\t\tStructuredList,\n\t\tListRow,\n\t\tListHeader,\n\t\tListColumn\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tIconModule\n\t]\n})\nexport class StructuredListModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}