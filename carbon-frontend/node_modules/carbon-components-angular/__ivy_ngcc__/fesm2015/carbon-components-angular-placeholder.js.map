{"version":3,"file":"carbon-components-angular-placeholder.js","sources":["carbon-components-angular/placeholder/placeholder.service.ts","carbon-components-angular/placeholder/placeholder.component.ts","carbon-components-angular/placeholder/placeholder.module.ts","carbon-components-angular/placeholder/carbon-components-angular-placeholder.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tComponentRef,\n\tViewContainerRef,\n\tComponentFactory,\n\tInjector\n} from \"@angular/core\";\nimport { Injectable } from \"@angular/core\";\n\n/**\n * Singleton service used to register the container for out-of-flow components to insert into.\n * Also used to insert/remove components from that view.\n */\n@Injectable()\nexport class PlaceholderService {\n\t/**\n\t * Main `ViewContainerRef` to insert components into\n\t */\n\tprotected viewContainerRef: ViewContainerRef = null;\n\t/**\n\t * Map of id's to secondary `ViewContainerRef`s\n\t */\n\tprotected viewContainerMap: Map<any, ViewContainerRef> = new Map();\n\t/**\n\t * Used by `Placeholder` to register view-container reference.\n\t */\n\tregisterViewContainerRef(vcRef: ViewContainerRef, id?: any): void {\n\t\tif (id) {\n\t\t\tthis.viewContainerMap.set(id, vcRef);\n\t\t} else {\n\t\t\tthis.viewContainerRef = vcRef;\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns component in the view.\n\t */\n\tcreateComponent(componentFactory: ComponentFactory<any>, injector: Injector, id?: any): ComponentRef<any> {\n\t\tif (id) {\n\t\t\tif (!this.viewContainerMap.has(id)) {\n\t\t\t\tconsole.error(`No view container with id ${id} found`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn this.viewContainerMap.get(id).createComponent(componentFactory, null, injector);\n\t\t}\n\t\tif (!this.viewContainerRef) {\n\t\t\tconsole.error(\"No view container defined! Likely due to a missing `ibm-placeholder`\");\n\t\t\treturn;\n\t\t}\n\t\treturn this.viewContainerRef.createComponent(componentFactory, null, injector);\n\t}\n\n\tdestroyComponent(component: ComponentRef<any>) {\n\t\tcomponent.destroy();\n\t}\n\n\thasComponentRef(component: ComponentRef<any>, id?: any) {\n\t\tif (id) {\n\t\t\treturn !(this.viewContainerMap.get(id).indexOf(component.hostView) < 0);\n\t\t}\n\n\t\treturn !(this.viewContainerRef.indexOf(component.hostView) < 0);\n\t}\n\n\thasPlaceholderRef(id?: any) {\n\t\tif (id) {\n\t\t\treturn this.viewContainerMap.has(id);\n\t\t}\n\t\treturn !!this.viewContainerRef;\n\t}\n\n\tappendElement(element: HTMLElement, id?: any): HTMLElement {\n\t\tif (id) {\n\t\t\treturn this.viewContainerMap.get(id).element.nativeElement.appendChild(element);\n\t\t}\n\t\treturn this.viewContainerRef.element.nativeElement.appendChild(element);\n\t}\n\n\tremoveElement(element: HTMLElement, id?: any): HTMLElement {\n\t\tif (id) {\n\t\t\treturn this.viewContainerMap.get(id).element.nativeElement.removeChild(element);\n\t\t}\n\t\treturn this.viewContainerRef.element.nativeElement.removeChild(element);\n\t}\n\n\thasElement(element: HTMLElement, id?: any): boolean {\n\t\tif (id) {\n\t\t\treturn this.viewContainerMap.get(id).element.nativeElement.contains(element);\n\t\t}\n\t\treturn this.viewContainerRef.element.nativeElement.contains(element);\n\t}\n}\n","import {\n\tComponent,\n\tOnInit,\n\tViewContainerRef,\n\tViewChild,\n\tInput\n} from \"@angular/core\";\nimport { PlaceholderService } from \"./placeholder.service\";\n\n/**\n * Using a modal, dialog (Tooltip, OverflowMenu), or any other component that draws out of the normal page flow\n * in your application *requires* this component (`ibm-placeholder`).\n * It would generally be placed near the end of your root app component template\n * (app.component.ts or app.component.html) as:\n *\n * ```\n * <ibm-placeholder></ibm-placeholder>\n * ```\n */\n@Component({\n\tselector: \"ibm-placeholder\",\n\ttemplate: `<div #placeholder></div>`\n})\nexport class Placeholder implements OnInit {\n\t@Input() id: any;\n\t/**\n\t * Maintains a reference to the view DOM element of the `Placeholder`.\n\t */\n\t// @ts-ignore\n\t@ViewChild(\"placeholder\", { read: ViewContainerRef, static: true }) viewContainerRef: ViewContainerRef;\n\n\t/**\n\t * Creates an instance of `Placeholder`.\n\t */\n\tconstructor(public placeholderService: PlaceholderService) { }\n\n\t/**\n\t * Registers the components view with `PlaceholderService`\n\t */\n\tngOnInit() {\n\t\t// TODO use `id` to register with the placeholderService\n\t\tthis.placeholderService.registerViewContainerRef(this.viewContainerRef);\n\t}\n}\n","// modules\nimport { NgModule, SkipSelf, Optional } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n// imports\nimport { Placeholder } from \"./placeholder.component\";\nimport { PlaceholderService } from \"./placeholder.service\";\n\n// either provides a new instance of PlaceholderService, or returns the parent\nexport function PLACEHOLDER_SERVICE_PROVIDER_FACTORY(parentService: PlaceholderService) {\n\treturn parentService || new PlaceholderService();\n}\n\n// placeholder service *must* be a singleton to ensure the placeholder viewRef is accessible globally\nexport const PLACEHOLDER_SERVICE_PROVIDER = {\n\tprovide: PlaceholderService,\n\tdeps: [[new Optional(), new SkipSelf(), PlaceholderService]],\n\tuseFactory: PLACEHOLDER_SERVICE_PROVIDER_FACTORY\n};\n\n@NgModule({\n\tdeclarations: [ Placeholder ],\n\texports: [ Placeholder ],\n\tproviders: [ PLACEHOLDER_SERVICE_PROVIDER ],\n\timports: [ CommonModule ]\n})\nexport class PlaceholderModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}