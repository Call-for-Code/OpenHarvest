{"version":3,"file":"carbon-components-angular-i18n.js","sources":["carbon-components-angular/i18n/en.ts","carbon-components-angular/i18n/i18n.service.ts","carbon-components-angular/i18n/replace.pipe.ts","carbon-components-angular/i18n/i18n.module.ts","carbon-components-angular/i18n/carbon-components-angular-i18n.ts"],"names":[],"mappings":"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C;AAAG;AAAmB;;;;;;;;;;;;;;;;;;0BAAuR;AAAC;AAAC;AAAI;AAAwC;AAAI;AAAC;;AJLA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,ACtKA,AAiBA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAYA,AAAA,AAAA,AAiDA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAXA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AASA,AAAA,AAAA,AAAA,AAAA,AAOA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAnDA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAOA,AAAA,AAAA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAqCA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAiBA,AAAA,AAAA,AADA,AAEA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AA+IA,AApmpxBA,AAEA","sourcesContent":["export default {\n\t\"BANNER\": {\n\t\t\"CLOSE_BUTTON\": \"Close alert banner\"\n\t},\n\t\"CALENDAR\": {\n\t\t\"MONTHS\": {\n\t\t\t\"JANUARY\": \"January\",\n\t\t\t\"FEBRUARY\": \"February\",\n\t\t\t\"MARCH\": \"March\",\n\t\t\t\"APRIL\": \"April\",\n\t\t\t\"MAY\": \"May\",\n\t\t\t\"JUNE\": \"June\",\n\t\t\t\"JULY\": \"July\",\n\t\t\t\"AUGUST\": \"August\",\n\t\t\t\"SEPTEMBER\": \"September\",\n\t\t\t\"OCTOBER\": \"October\",\n\t\t\t\"NOVEMBER\": \"November\",\n\t\t\t\"DECEMBER\": \"December\"\n\t\t},\n\t\t\"SHORTWEEKDAYS\": {\n\t\t\t\"SUNDAY\": \"Sun\",\n\t\t\t\"MONDAY\": \"Mon\",\n\t\t\t\"TUESDAY\": \"Tue\",\n\t\t\t\"WEDNESDAY\": \"Wed\",\n\t\t\t\"THURSDAY\": \"Thu\",\n\t\t\t\"FRIDAY\": \"Fri\",\n\t\t\t\"SATURDAY\": \"Sat\"\n\t\t},\n\t\t\"QUARTERS\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"name\": \"Q1\",\n\t\t\t\t\"months\": \"January-March\"\n\t\t\t}\n\t\t\t,\n\t\t\t{\n\t\t\t\t\"name\": \"Q2\",\n\t\t\t\t\"months\": \"April-June\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"Q3\",\n\t\t\t\t\"months\": \"July-September\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"Q4\",\n\t\t\t\t\"months\": \"October-December\"\n\t\t\t}\n\t\t]\n\t},\n\t\"CODE_SNIPPET\": {\n\t\t\"CODE_SNIPPET_TEXT\": \"Code Snippet Text\",\n\t\t\"SHOW_MORE\": \"Show more\",\n\t\t\"SHOW_LESS\": \"Show less\",\n\t\t\"SHOW_MORE_ICON\": \"Show more icon\",\n\t\t\"COPY_CODE\": \"Copy code\",\n\t\t\"COPIED\": \"Copied!\"\n\t},\n\t\"COMBOBOX\": {\n\t\t\"PLACEHOLDER\": \"Filter...\",\n\t\t\"CLEAR_SELECTIONS\": \"Clear all selected items\",\n\t\t\"CLEAR_SELECTED\": \"Clear selected item\",\n\t\t\"A11Y\": {\n\t\t\t\"OPEN_MENU\": \"open menu\",\n\t\t\t\"CLOSE_MENU\": \"close menu\",\n\t\t\t\"CLEAR_SELECTIONS\": \"Clear all selected items\",\n\t\t\t\"CLEAR_SELECTED\": \"Clear Selection\"\n\t\t}\n\t},\n\t\"DIALOG\": {\n\t\t\"POPOVER\" : {\n\t\t\t\"CLOSE\": \"Close popover\"\n\t\t}\n\t},\n\t\"DROPDOWN\": {\n\t\t\"OPEN\": \"Open menu\",\n\t\t\"SELECTED\": \"selected\",\n\t\t\"CLEAR\": \"Clear all selected items\",\n\t\t\"FILTER\": {\n\t\t\t\"SELECTED_ONLY\": \"Show selected only\",\n\t\t\t\"SEARCH\": \"Search\",\n\t\t\t\"NO_RESULTS\": \"No search results\",\n\t\t\t\"RESET_SEARCH\": \"Reset search\"\n\t\t}\n\t},\n\t\"DROPDOWN_LIST\": {\n\t\t\"LABEL\": \"Listbox\"\n\t},\n\t\"FILE_UPLOADER\": {\n\t\t\"CHECKMARK\": \"Checkmark\",\n\t\t\"CHECKMARK_TITLE\": \"File uploaded!\",\n\t\t\"OPEN\": \"Add file\",\n\t\t\"REMOVE_BUTTON\": \"Close button\",\n\t\t\"REMOVE_TITLE\": \"Delete File\"\n\t},\n\t\"LOADING\": {\n\t\t\"TITLE\": \"Loading\"\n\t},\n\t\"MODAL\": {\n\t\t\"CLOSE\": \"Close modal\"\n\t},\n\t\"NOTIFICATION\": {\n\t\t\"CLOSE_BUTTON\": \"Close alert notification\"\n\t},\n\t\"NUMBER\": {\n\t\t\"INCREMENT\": \"increment value\",\n\t\t\"DECREMENT\": \"decrement value\"\n\t},\n\t\"OVERFLOW_MENU\": {\n\t\t\"OVERFLOW\": \"Overflow\"\n\t},\n\t\"SEARCH\": {\n\t\t\"LABEL\": \"Search\",\n\t\t\"PLACEHOLDER\": \"Search\",\n\t\t\"CLEAR_BUTTON\": \"Clear search input\",\n\t\t\"TOOLBAR_SEARCH\": \"Toolbar search\"\n\t},\n\t\"PAGINATION\": {\n\t\t\"ITEMS_PER_PAGE\": \"Items per page:\",\n\t\t\"OPEN_LIST_OF_OPTIONS\": \"Open list of options\",\n\t\t\"BACKWARD\": \"Backward\",\n\t\t\"FORWARD\": \"Forward\",\n\t\t\"TOTAL_ITEMS_UNKNOWN\": \"{{start}}-{{end}} items\",\n\t\t\"TOTAL_ITEMS\": \"{{start}}-{{end}} of {{total}} items\",\n\t\t\"TOTAL_ITEM\": \"{{start}}-{{end}} of {{total}} item\",\n\t\t\"PAGE\": \"page\",\n\t\t\"OF_LAST_PAGES\": \"of {{last}} pages\",\n\t\t\"OF_LAST_PAGE\": \"of {{last}} page\",\n\t\t\"NEXT\": \"Next\",\n\t\t\"PREVIOUS\": \"Previous\"\n\t},\n\t\"TABLE\": {\n\t\t\"GO_TO_PAGE\": \"Go to page\",\n\t\t\"PREVIOUS_PAGE\": \"Previous page\",\n\t\t\"NEXT_PAGE\": \"Next page\",\n\t\t\"PREVIOUS_3\": \"Scroll to previous 3 pages\",\n\t\t\"NEXT_3\": \"Scroll to next 3 pages\",\n\t\t\"FILTER\": \"Filter\",\n\t\t\"END_OF_DATA\": \"You've reached the end of your content\",\n\t\t\"SCROLL_TOP\": \"Scroll to top\",\n\t\t\"CHECKBOX_HEADER\": \"Select all rows\",\n\t\t\"CHECKBOX_ROW\": \"Select {{value}}\",\n\t\t\"EXPAND_BUTTON\": \"Expand row\",\n\t\t\"SORT_DESCENDING\": \"Sort rows by this header in descending order\",\n\t\t\"SORT_ASCENDING\": \"Sort rows by this header in ascending order\",\n\t\t\"ROW\": \"row\"\n\t},\n\t\"TABLE_TOOLBAR\": {\n\t\t\"ACTION_BAR\": \"Table action bar\",\n\t\t\"BATCH_TEXT\": \"\",\n\t\t\"BATCH_TEXT_SINGLE\": \"1 item selected\",\n\t\t\"BATCH_TEXT_MULTIPLE\": \"{{count}} items selected\",\n\t\t\"CANCEL\": \"Cancel\"\n\t},\n\t\"TABS\": {\n\t\t\"BUTTON_ARIA_LEFT\": \"Go to the previous tab\",\n\t\t\"BUTTON_ARIA_RIGHT\": \"Go to the next tab\"\n\t},\n\t\"TILES\": {\n\t\t\"TILE\": \"tile\",\n\t\t\"EXPAND\": \"Expand\",\n\t\t\"COLLAPSE\": \"Collapse\"\n\t},\n\t\"TOGGLE\": {\n\t\t\"OFF\": \"Off\",\n\t\t\"ON\": \"On\"\n\t},\n\t\"UI_SHELL\": {\n\t\t\"SKIP_TO\": \"Skip to content\",\n\t\t\"HEADER\": {\n\t\t\t\"OPEN_MENU\": \"Open menu\",\n\t\t\t\"CLOSE_MENU\": \"Close menu\"\n\t\t},\n\t\t\"SIDE_NAV\": {\n\t\t\t\"LABEL\": \"Side navigation\",\n\t\t\t\"SWITCHER\": \"Switcher\",\n\t\t\t\"TOGGLE_OPEN\": \"Open\",\n\t\t\t\"TOGGLE_CLOSE\": \"Close\"\n\t\t}\n\t}\n};\n","import { Injectable } from \"@angular/core\";\nimport {\n\tBehaviorSubject,\n\tObservable,\n\tisObservable,\n\tiif,\n\tSubscription\n} from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { merge } from \"carbon-components-angular/utils\";\n\nimport EN from \"./en\";\n\n/**\n * Takes the `Observable` returned from `i18n.get` and an object of variables to replace.\n *\n * The keys specify the variable name in the string.\n *\n * Example:\n * ```typescript\n * service.set({ \"TEST\": \"{{foo}} {{bar}}\" });\n *\n * service.replace(service.get(\"TEST\"), { foo: \"test\", bar: \"asdf\" })\n * ```\n *\n * Produces: `\"test asdf\"`\n *\n * @param subject the translation to replace variables on\n * @param variables object of variables to replace\n */\nexport const replace = (subject, variables) => subject.pipe(\n\tmap<string, void>(str => {\n\t\tconst keys = Object.keys(variables);\n\t\tfor (const key of keys) {\n\t\t\tconst value = variables[key];\n\t\t\tstr = str.replace(new RegExp(`{{\\\\s*${key}\\\\s*}}`, \"g\"), value);\n\t\t}\n\t\treturn str;\n\t})\n);\n\n/**\n * Represents an \"overridable\" translation value.\n *\n * Largely an internal usecase. There are situations where we want an `Observable` that\n * can emit events from a centralized source **OR** an `Observable` that will emit events\n * from a component local source. The key example being on/off text in a `Toggle` - In some cases\n * we want the `Toggle` to use `I18n`s global translations, but in others we'd prefer to use a local\n * override. We don't ever need to return to a non-overridden state, but we do need the ability to\n * switch _to_ an overridden sate.\n */\nexport class Overridable {\n\t/**\n\t * The raw value of the translation. Defaults to the string value, but will return the value passed to `override`\n\t *\n\t * @readonly\n\t */\n\tpublic get value(): string | Observable<string> {\n\t\treturn this._value;\n\t}\n\n\tpublic set value(v: string | Observable<string>) {\n\t\tthis.override(v);\n\t}\n\n\t/**\n\t * The translation subject. Returns either a stream of overridden values, or our base translation values.\n\t *\n\t * @readonly\n\t */\n\tpublic get subject(): Observable<string> {\n\t\t/**\n\t\t * since inputs are bound on template instantiation (and thusly will always have _some_ value)\n\t\t * We can use a simple boolean and the `iif` function to determine which subject to return on subscription\n\t\t */\n\t\treturn iif(() => this.isOverridden, this.$override, this.baseTranslation);\n\t}\n\n\t/**\n\t * Overridden value. Accessed by the readonly getter `value` and set through `override`\n\t */\n\tprotected _value: string | Observable<string>;\n\t/**\n\t * Subject of overridden values. Initialized with our default value.\n\t */\n\tprotected $override: BehaviorSubject<string>;\n\t/**\n\t * Our base non-overridden translation.\n\t */\n\tprotected baseTranslation: Observable<string> = this.i18n.get(this.path);\n\n\t/**\n\t * Subscription to the observable provided as an override (if any)\n\t */\n\tprotected subscription: Subscription;\n\t/**\n\t * A boolean to flip between overridden and non-overridden states.\n\t */\n\tprotected isOverridden = false;\n\n\tconstructor(protected path: string, protected i18n: I18n) {\n\t\t/**\n\t\t * ensure `$override` is initialized with the correct default value\n\t\t * in some cases `_value` can get changed for an `Observable` before `$override` is created\n\t\t */\n\t\tconst value = this.i18n.getValueFromPath(this.path) as string;\n\t\tthis.$override = new BehaviorSubject<string>(value);\n\t\tthis._value = value;\n\t}\n\t/**\n\t * Takes a string or an `Observable` that emits strings.\n\t * Overrides the value provided by the `I18n` service.\n\t */\n\toverride(value: string | Observable<string>) {\n\t\tthis.isOverridden = true;\n\t\t// To ensure that there are not multiple subscriptions created for the same observable, we\n\t\t// unsubscribe if a subscription already exists for an observable before creating a new one.\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t\tthis.subscription = null;\n\t\t}\n\n\t\tthis._value = value;\n\n\t\tif (isObservable(value)) {\n\t\t\tthis.subscription = value.subscribe(v => {\n\t\t\t\tthis.$override.next(v);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.$override.next(value);\n\t\t}\n\t}\n}\n\n/**\n * An object of strings, should follow the same format as src/i18n/en.json\n */\nexport type TranslationStrings = { [key: string]: string };\n\n\n/**\n * The I18n service is a minimal internal singleton service used to supply our components with translated strings.\n *\n * All the components that support I18n also support directly passed strings.\n * Usage of I18n is optional, and it is not recommended for application use (libraries like ngx-translate\n * are a better choice)\n *\n */\n@Injectable()\nexport class I18n {\n\tprotected translationStrings = EN;\n\n\tprotected translations = new Map();\n\n\tprotected locale = new BehaviorSubject(\"en\");\n\n\t/**\n\t * Sets the locale and optionally the translation strings. Locale is used by components that\n\t * are already locale aware (datepicker for example) while the translation strings are used\n\t * for components that are not.\n\t *\n\t * Locales set here will override locales/languages set in components\n\t * @param language an ISO 639-1 language code - https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n\t * @param strings an object of strings, optional\n\t */\n\tpublic setLocale(language: string, strings?: TranslationStrings) {\n\t\tthis.locale.next(language);\n\t\tif (strings) {\n\t\t\tthis.set(strings);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the current locale\n\t */\n\tpublic getLocale() {\n\t\treturn this.locale.value;\n\t}\n\n\t/**\n\t * Returns an observable that resolves to the current locale, and will update when changed\n\t */\n\tpublic getLocaleObservable() {\n\t\treturn this.locale.asObservable();\n\t}\n\n\t/**\n\t * Set/update the translations from an object. Also notifies all participating components of the update.\n\t *\n\t * @param strings an object of strings, should follow the same format as src/i18n/en.json\n\t */\n\tpublic set(strings: TranslationStrings) {\n\t\tthis.translationStrings = merge({}, EN, strings);\n\t\t// iterate over all our tracked translations and update each observable\n\t\tconst translations = Array.from(this.translations);\n\t\tfor (const [path, subject] of translations) {\n\t\t\tsubject.next(this.getValueFromPath(path));\n\t\t}\n\t}\n\n\t/**\n\t * When a path is specified returns an observable that will resolve to the translation string value.\n\t *\n\t * Returns the full translations object if path is not specified.\n\t *\n\t * @param path optional, looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n\t */\n\tpublic get(path?: string): any {\n\t\tif (!path) {\n\t\t\treturn this.translationStrings;\n\t\t}\n\t\treturn this.getSubject(path);\n\t}\n\n\t/**\n\t * Returns all descendents of some path fragment as an object.\n\t *\n\t * @param partialPath a path fragment, for example `\"NOTIFICATION\"`\n\t */\n\tpublic getMultiple(partialPath: string): { [key: string]: Observable<string> } {\n\t\tconst values = this.getValueFromPath(partialPath);\n\t\tconst subjects = {};\n\t\tfor (const key of Object.keys(values)) {\n\t\t\tif (values[key] === Object(values[key])) {\n\t\t\t\tsubjects[key] = this.getMultiple(`${partialPath}.${key}`);\n\t\t\t} else {\n\t\t\t\tsubjects[key] = this.getSubject(`${partialPath}.${key}`);\n\t\t\t}\n\t\t}\n\t\treturn subjects;\n\t}\n\n\t/**\n\t * Returns an instance of `Overridable` that can be used to optionally override the value provided by `I18n`\n\t * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n\t */\n\tpublic getOverridable(path: string) {\n\t\treturn new Overridable(path, this);\n\t}\n\n\t/**\n\t * Takes the `Observable` returned from `i18n.get` and an object of variables to replace.\n\t *\n\t * The keys specify the variable name in the string.\n\t *\n\t * Example:\n\t * ```\n\t * service.set({ \"TEST\": \"{{foo}} {{bar}}\" });\n\t *\n\t * service.replace(service.get(\"TEST\"), { foo: \"test\", bar: \"asdf\" })\n\t * ```\n\t *\n\t * Produces: `\"test asdf\"`\n\t *\n\t * @param subject the translation to replace variables on\n\t * @param variables object of variables to replace\n\t */\n\tpublic replace(subject: Observable<string>, variables: { [key: string]: string }) {\n\t\treturn replace(subject, variables);\n\t}\n\n\t/**\n\t * Trys to resolve a value from the provided path.\n\t *\n\t * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n\t */\n\tpublic getValueFromPath(path): string | { [key: string]: string } {\n\t\tlet value = this.translationStrings;\n\t\tfor (const segment of path.split(\".\")) {\n\t\t\tif (value[segment] !== undefined && value[segment] !== null) {\n\t\t\t\tvalue = value[segment];\n\t\t\t} else {\n\t\t\t\tthrow new Error(`no key ${segment} at ${path}`);\n\t\t\t}\n\t\t}\n\t\treturn value as any;\n\t}\n\n\t/**\n\t * Helper method that returns an observable from the internal cache based on the path\n\t *\n\t * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n\t */\n\tprotected getSubject(path: string): Observable<string> {\n\t\ttry {\n\t\t\t// we run this here to validate the path exists before adding it to the translation map\n\t\t\tconst value = this.getValueFromPath(path) as string;\n\t\t\tif (this.translations.has(path)) {\n\t\t\t\treturn this.translations.get(path);\n\t\t\t}\n\t\t\tconst translation = new BehaviorSubject(value);\n\t\t\tthis.translations.set(path, translation);\n\t\t\treturn translation;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { replace } from \"./i18n.service\";\n\n@Pipe({\n\tname: \"i18nReplace\"\n})\nexport class ReplacePipe implements PipeTransform {\n\ttransform(value, variables) {\n\t\treturn replace(value, variables);\n\t}\n}\n","import { NgModule, SkipSelf, Optional } from \"@angular/core\";\n\nimport { I18n } from \"./i18n.service\";\nimport { ReplacePipe } from \"./replace.pipe\";\n\n// either provides a new instance of I18n, or returns the parent\nexport function I18N_SERVICE_PROVIDER_FACTORY(parentService: I18n) {\n\treturn parentService || new I18n();\n}\n\n// I18n should provide a single instance of itself to ensure that translations are consistent through the app\nexport const I18N_SERVICE_PROVIDER = {\n\tprovide: I18n,\n\tdeps: [[new Optional(), new SkipSelf(), I18n]],\n\tuseFactory: I18N_SERVICE_PROVIDER_FACTORY\n};\n\n@NgModule({\n\tdeclarations: [ReplacePipe],\n\texports: [ReplacePipe],\n\tproviders: [\n\t\tI18n,\n\t\tI18N_SERVICE_PROVIDER\n\t]\n})\nexport class I18nModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}