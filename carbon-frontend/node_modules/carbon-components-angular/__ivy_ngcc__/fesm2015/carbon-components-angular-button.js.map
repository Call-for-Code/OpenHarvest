{"version":3,"file":"carbon-components-angular-button.js","sources":["carbon-components-angular/button/button.directive.ts","carbon-components-angular/button/button.module.ts","carbon-components-angular/button/carbon-components-angular-button.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tDirective,\n\tHostBinding,\n\tInput,\n\tOnInit\n} from \"@angular/core\";\nimport { ButtonSize, ButtonType } from \"./button.types\";\n\n/**\n * A convenience directive for applying styling to a button.\n *\n * [See demo](../../?path=/story/button--basic)\n *\n * Example:\n *\n * ```html\n * <button ibmButton>A button</button>\n * <button ibmButton=\"secondary\">A secondary button</button>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/button/code) for more detail.\n *\n * <example-url>../../iframe.html?id=button--basic</example-url>\n */\n@Directive({\n\tselector: \"[ibmButton]\"\n})\nexport class Button implements OnInit {\n\t/**\n\t * sets the button type\n\t */\n\t@Input() ibmButton: ButtonType = \"primary\";\n\t/**\n\t * Specify the size of the button\n\t */\n\t@Input() size: ButtonSize;\n\t/**\n\t * If assistive text is used, this specifies the placement.\n\t * Possible placements are `top`, `bottom`, `left`, `right`.\n\t * If assistive text is not used, this can be left undefined.\n\t */\n\t@Input() assistiveTextPlacement: \"top\" | \"bottom\" | \"left\" | \"right\" = \"top\";\n\t/**\n\t * If assistive text is used, this specifies the alignment.\n\t * Possible alignments are `center`, `start`, `end`.\n\t * If assistive text is not used, this can be left undefined.\n\t */\n\t@Input() assistiveTextAlignment: \"center\" | \"start\" | \"end\" = \"center\";\n\n\t// a whole lot of HostBindings ... this way we don't have to touch the elementRef directly\n\t@HostBinding(\"class.bx--btn\") get baseClass() {\n\t\treturn !this.toolbarAction;\n\t}\n\t@HostBinding(\"class.bx--btn--primary\") get primaryButton() {\n\t\treturn this.ibmButton === \"primary\";\n\t}\n\t@HostBinding(\"class.bx--btn--secondary\") get secondaryButton() {\n\t\treturn this.ibmButton === \"secondary\";\n\t}\n\t@HostBinding(\"class.bx--btn--tertiary\") get tertiaryButton() {\n\t\treturn this.ibmButton === \"tertiary\";\n\t}\n\t@HostBinding(\"class.bx--btn--ghost\") get ghostButton() {\n\t\treturn this.ibmButton === \"ghost\";\n\t}\n\t@HostBinding(\"class.bx--btn--danger\") get dangerButton() {\n\t\treturn this.ibmButton === \"danger\" || this.ibmButton === \"danger--primary\";\n\t}\n\t@HostBinding(\"class.bx--skeleton\") @Input() skeleton = false;\n\t@HostBinding(\"class.bx--btn--sm\") get smallSize() {\n\t\treturn this.size === \"sm\";\n\t}\n\t@HostBinding(\"class.bx--btn--field\") get fieldSize() {\n\t\treturn this.size === \"field\";\n\t}\n\t@HostBinding(\"class.bx--toolbar-action\") toolbarAction = false;\n\t@HostBinding(\"class.bx--overflow-menu\") overflowMenu = false;\n\t@HostBinding(\"class.bx--btn--icon-only\") @Input() iconOnly = false;\n\n\t/**\n\t * `hasAssistiveText` input specifies whether the button contains assistive text or not.\n\t * Assistive text can be utilized as follows:\n\t * ```typescript\n\t *\t<button\n\t *\t\tibmButton=\"tertiary\"\n\t *\t\t[iconOnly]=\"true\"\n\t *\t\t[hasAssistiveText]=\"true\"\n\t *\t\tassistiveTextPlacement=\"top\"\n\t *\t\tassistiveTextAlignment=\"center\">\n\t *\t\t<svg class=\"bx--btn__icon\" ibmIconCopy size=\"20\"></svg>\n\t *\t\t<span class=\"bx--assistive-text\">Icon description</span>\n\t *\t</button>\n\t * ```\n\t */\n\t@HostBinding(\"class.bx--tooltip__trigger\")\n\t@HostBinding(\"class.bx--tooltip--a11y\") @Input() hasAssistiveText = false;\n\n\t@HostBinding(\"class.bx--tooltip--align-center\") get isAssistiveTextCenterAligned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextAlignment === \"center\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--align-start\") get isAssistiveTextStartAligned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextAlignment === \"start\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--align-end\") get isAssistiveTextEndAligned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextAlignment === \"end\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--top\") get isAssistiveTextTopPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"top\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--bottom\") get isAssistiveTextBottomPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"bottom\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--left\") get isAssistiveTextLeftPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"left\";\n\t}\n\n\t@HostBinding(\"class.bx--tooltip--right\") get isAssistiveTextRightPositioned() {\n\t\treturn this.hasAssistiveText && this.assistiveTextPlacement === \"right\";\n\t}\n\n\tngOnInit() {\n\t\tif (!this.ibmButton) {\n\t\t\tthis.ibmButton = \"primary\";\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Button } from \"./button.directive\";\n\n@NgModule({\n\tdeclarations: [Button],\n\texports: [Button],\n\timports: [CommonModule]\n})\nexport class ButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}