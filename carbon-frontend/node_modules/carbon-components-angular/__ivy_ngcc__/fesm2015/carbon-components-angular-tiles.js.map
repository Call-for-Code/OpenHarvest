{"version":3,"file":"carbon-components-angular-tiles.js","sources":["carbon-components-angular/tiles/clickable-tile.component.ts","carbon-components-angular/tiles/expandable-tile.component.ts","carbon-components-angular/tiles/selection-tile.component.ts","carbon-components-angular/tiles/tile-group.component.ts","carbon-components-angular/tiles/tile.component.ts","carbon-components-angular/tiles/tiles.module.ts","carbon-components-angular/tiles/carbon-components-angular-tiles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tOptional\n} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n/**\n * Build application's clickable tiles using this component.\n *\n * ## Basic usage\n *\n * ```html\n * <ibm-clickable-tile>\n * \t\ttile content\n * </ibm-clickable-tile>\n * ```\n */\n@Component({\n\tselector: \"ibm-clickable-tile\",\n\ttemplate: `\n\t<a\n\t\tibmLink\n\t\tclass=\"bx--tile bx--tile--clickable\"\n\t\ttabindex=\"0\"\n\t\t(click)=\"navigate($event)\"\n\t\t[href]=\"href\"\n\t\t[attr.target]=\"target\"\n\t\t[attr.aria-disabled]=\"disabled\">\n\t\t<ng-content></ng-content>\n\t</a>`\n})\nexport class ClickableTile {\n\t/**\n\t * Sets the `href` attribute on the `ibm-clickable-tile` element.\n\t */\n\t@Input() href = \"#\";\n\n\t/**\n\t * Sets the `target` attribute on the `ibm-clickable-tile` element.\n\t */\n\t@Input() target: string;\n\n\t/**\n\t * Set to `true` to disable the clickable tile.\n\t */\n\t@Input() disabled = false;\n\n\t/**\n\t * Array of commands to send to the router when the link is activated\n\t * See: https://angular.io/api/router/Router#navigate\n\t */\n\t@Input() route: any[];\n\n\t/**\n\t * Router options. Used in conjunction with `route`\n\t * See: https://angular.io/api/router/Router#navigate\n\t */\n\t@Input() routeExtras: any;\n\n\t/**\n\t * Emits the navigation status promise when the link is activated\n\t */\n\t@Output() navigation = new EventEmitter<Promise<boolean>>();\n\n\tconstructor(@Optional() protected router: Router) {}\n\n\tnavigate(event) {\n\t\tif (this.router && this.route) {\n\t\t\tevent.preventDefault();\n\t\t\tconst status = this.router.navigate(this.route, this.routeExtras);\n\t\t\tthis.navigation.emit(status);\n\t\t}\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tElementRef,\n\tAfterContentInit\n} from \"@angular/core\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { merge } from \"carbon-components-angular/utils\";\n\nexport interface ExpandableTileTranslations {\n\tEXPAND: string;\n\tCOLLAPSE: string;\n}\n\n@Component({\n\tselector: \"ibm-expandable-tile\",\n\ttemplate: `\n\t\t<button\n\t\t\tclass=\"bx--tile bx--tile--expandable\"\n\t\t\t[ngClass]=\"{'bx--tile--is-expanded' : expanded}\"\n\t\t\t[ngStyle]=\"{'max-height': expandedHeight + 'px'}\"\n\t\t\ttype=\"button\"\n\t\t\t(click)=\"onClick()\">\n\t\t\t<div class=\"bx--tile__chevron\">\n\t\t\t\t<svg *ngIf=\"!expanded\" width=\"12\" height=\"7\" viewBox=\"0 0 12 7\" [attr.title]=\"expand.subject | async\" role=\"img\">\n\t\t\t\t\t<title>{{expand.subject | async}}</title>\n\t\t\t\t\t<path fill-rule=\"nonzero\" d=\"M6.002 5.55L11.27 0l.726.685L6.003 7 0 .685.726 0z\"/>\n\t\t\t\t</svg>\n\t\t\t\t<svg *ngIf=\"expanded\" width=\"12\" height=\"7\" viewBox=\"0 0 12 7\" [attr.title]=\"collapse.subject | async\" role=\"img\">\n\t\t\t\t\t<title>{{collapse.subject | async}}</title>\n\t\t\t\t\t<path fill-rule=\"nonzero\" d=\"M6.002 5.55L11.27 0l.726.685L6.003 7 0 .685.726 0z\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<div class=\"bx--tile-content\">\n\t\t\t\t<ng-content select=\".bx--tile-content__above-the-fold\"></ng-content>\n\t\t\t\t<ng-content select=\".bx--tile-content__below-the-fold\"></ng-content>\n\t\t\t</div>\n\t\t</button>\n\t`\n})\nexport class ExpandableTile implements AfterContentInit {\n\t@Input() expanded = false;\n\t/**\n\t * Expects an object that contains some or all of:\n\t * ```\n\t * {\n\t *\t\t\"EXPAND\": \"Expand\",\n\t *\t\t\"COLLAPSE\": \"Collapse\",\n\t * }\n\t * ```\n\t */\n\t@Input()\n\tset translations(value: ExpandableTileTranslations) {\n\t\tconst valueWithDefaults = merge(this.i18n.getMultiple(\"TILES\"), value);\n\t\tthis.expand.override(valueWithDefaults.EXPAND);\n\t\tthis.collapse.override(valueWithDefaults.COLLAPSE);\n\t}\n\n\ttileMaxHeight = 0;\n\tcurrentExpandedHeight = 0;\n\telement = this.elementRef.nativeElement;\n\n\texpand = this.i18n.getOverridable(\"TILES.EXPAND\");\n\tcollapse = this.i18n.getOverridable(\"TILES.COLLAPSE\");\n\n\tconstructor(protected i18n: I18n, protected elementRef: ElementRef) {}\n\n\tngAfterContentInit() {\n\t\tthis.updateMaxHeight();\n\t}\n\n\tget expandedHeight() {\n\t\tconst tile = this.element.querySelector(\".bx--tile\");\n\t\tconst tilePadding\n\t\t\t= parseInt(getComputedStyle(tile).paddingBottom, 10) + parseInt(getComputedStyle(tile).paddingTop, 10);\n\t\tconst expandedHeight = this.tileMaxHeight + tilePadding;\n\t\tif (!isNaN(expandedHeight)) {\n\t\t\tthis.currentExpandedHeight = expandedHeight;\n\t\t}\n\t\treturn this.currentExpandedHeight;\n\t}\n\n\tupdateMaxHeight() {\n\t\tif (this.expanded) {\n\t\t\tthis.tileMaxHeight = this.element.querySelector(\".bx--tile-content\").getBoundingClientRect().height;\n\t\t} else {\n\t\t\tthis.tileMaxHeight = this.element.querySelector(\".bx--tile-content__above-the-fold\").getBoundingClientRect().height;\n\t\t}\n\t}\n\n\tonClick() {\n\t\tthis.expanded = !this.expanded;\n\t\tthis.updateMaxHeight();\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tViewChild,\n\tHostListener,\n\tAfterViewInit\n} from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { I18n } from \"carbon-components-angular/i18n\";\n\n@Component({\n\tselector: \"ibm-selection-tile\",\n\ttemplate: `\n\t\t<label\n\t\t\tclass=\"bx--tile bx--tile--selectable\"\n\t\t\ttabindex=\"0\"\n\t\t\t[for]=\"id\"\n\t\t\t[ngClass]=\"{'bx--tile--is-selected' : selected}\"\n\t\t\t[attr.aria-label]=\"i18n.get('TILES.TILE') | async\">\n\t\t\t<input\n\t\t\t\t#input\n\t\t\t\ttabindex=\"-1\"\n\t\t\t\tclass=\"bx--tile-input\"\n\t\t\t\t[id]=\"id\"\n\t\t\t\t[type]=\"(multiple ? 'checkbox': 'radio')\"\n\t\t\t\t[value]=\"value\"\n\t\t\t\t[name]=\"name\"\n\t\t\t\t(change)=\"onChange($event)\"/>\n\t\t\t<div class=\"bx--tile__checkmark\">\n\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n\t\t\t\t\t<path d=\"M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm3.646-10.854L6.75 10.043 4.354 7.646l-.708.708 3.104 3.103 5.604-5.603-.708-.708z\"\n\t\t\t\t\t\tfill-rule=\"evenodd\"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<div class=\"bx--tile-content\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</div>\n\t\t</label>\n\t`\n})\nexport class SelectionTile implements AfterViewInit {\n\tstatic tileCount = 0;\n\t/**\n\t * The unique id for the input.\n\t */\n\t@Input() id = `tile-${SelectionTile.tileCount}`;\n\t/**\n\t * Updating the state of the input to match the state of the parameter passed in.\n\t * Set to `true` if this tile should be selected.\n\t */\n\t@Input() set selected(value: boolean) {\n\t\t// If an initial selected value is set before input exists, we save\n\t\t// the value and check again when input exists in `AfterViewInit`.\n\t\tthis._selected = value ? true : null;\n\t\tif (this.input) {\n\t\t\tthis.input.nativeElement.checked = this._selected;\n\t\t}\n\t}\n\n\tget selected() {\n\t\treturn this.input ? this.input.nativeElement.checked : false;\n\t}\n\t/**\n\t * The value for the tile. Returned via `ngModel` or `selected` event on the containing `TileGroup`.\n\t */\n\t@Input() value: string;\n\t/**\n\t * Internal event used to notify the containing `TileGroup` of changes.\n\t */\n\t@Output() change: EventEmitter<Event> = new EventEmitter();\n\n\t/**\n\t * Set by the containing `TileGroup`. Used for the `name` property on the input.\n\t */\n\tname = \"tile-group-unbound\";\n\t/**\n\t * Defines whether or not the `SelectionTile` supports selecting multiple tiles as opposed to single\n\t * tile selection.\n\t */\n\tmultiple = true;\t// Set to true because of the way tile group sets it up.\n\t\t\t\t\t\t// If it is first undefined then set to true, the type will change from radio to checkbox and deselects the inputs.\n\n\t// @ts-ignore\n\t@ViewChild(\"input\", { static: true }) input;\n\n\t// If an initial selected value is set before input exists, we save\n\t// the value and check again when input exists in `AfterViewInit`.\n\tprotected _selected = null;\n\n\tconstructor(public i18n: I18n) {\n\t\tSelectionTile.tileCount++;\n\t}\n\n\tngAfterViewInit() {\n\t\tif (this.input) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.input.nativeElement.checked = this._selected;\n\t\t\t});\n\t\t}\n\t}\n\n\t@HostListener(\"keydown\", [\"$event\"])\n\tkeyboardInput(event) {\n\t\tif (event.key === \"Enter\" || event.key === \"Spacebar\" || event.key === \" \") {\n\t\t\tthis.selected = !this.selected;\n\t\t\tthis.change.emit(event);\n\t\t}\n\t}\n\n\tonChange(event) {\n\t\tthis.change.emit(event);\n\t}\n}\n\n","import {\n\tComponent,\n\tAfterContentInit,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tHostBinding,\n\tContentChildren,\n\tQueryList,\n\tOnDestroy\n} from \"@angular/core\";\nimport { SelectionTile } from \"./selection-tile.component\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { TileSelection } from \"./tile-selection.interface\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\n@Component({\n\tselector: \"ibm-tile-group\",\n\ttemplate: `<ng-content select=\"ibm-selection-tile\"></ng-content>`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: TileGroup,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class TileGroup implements AfterContentInit, OnDestroy {\n\tstatic tileGroupCount = 0;\n\t/**\n\t * The tile group `name`\n\t */\n\t@Input() name = `tile-group-${TileGroup.tileGroupCount}`;\n\t/**\n\t * Set to `true` to support multiple tile selection\n\t */\n\t@Input() multiple = false;\n\n\t/**\n\t * Emits an event when the tile selection changes.\n\t *\n\t * Emits an object that looks like:\n\t * ```javascript\n\t * {\n\t * \tvalue: \"something\",\n\t * \tselected: true,\n\t * \tname: \"tile-group-1\"\n\t * }\n\t * ```\n\t */\n\t@Output() selected: EventEmitter<TileSelection> = new EventEmitter();\n\n\t@HostBinding(\"class.bx--tile-group\") tileGroupClass = true;\n\n\t@ContentChildren(SelectionTile) selectionTiles: QueryList<SelectionTile>;\n\n\tprotected unsubscribe$ = new Subject<void>();\n\tprotected unsubscribeTiles$ = new Subject<void>();\n\n\tconstructor() {\n\t\tTileGroup.tileGroupCount++;\n\t}\n\n\tonChange = (_: any) => { };\n\n\tonTouched = () => { };\n\n\tngAfterContentInit() {\n\t\tconst updateTiles = () => {\n\t\t\t// remove old subscriptions\n\t\t\tthis.unsubscribeTiles$.next();\n\n\t\t\t// react to changes\n\t\t\t// setTimeout to avoid ExpressionChangedAfterItHasBeenCheckedError\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.selectionTiles.forEach(tile => {\n\t\t\t\t\ttile.name = this.name;\n\t\t\t\t\ttile.change\n\t\t\t\t\t\t.pipe(takeUntil(this.unsubscribeTiles$))\n\t\t\t\t\t\t.subscribe(() => {\n\t\t\t\t\t\t\tthis.selected.emit({\n\t\t\t\t\t\t\t\tvalue: tile.value,\n\t\t\t\t\t\t\t\tselected: tile.selected,\n\t\t\t\t\t\t\t\tname: this.name\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.onChange(tile.value);\n\t\t\t\t\t\t});\n\t\t\t\t\ttile.multiple = this.multiple;\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tupdateTiles();\n\n\t\tthis.selectionTiles.changes\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe(_ => updateTiles());\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\n\t\t// takes care of tile subscriptions when tile-group dies\n\t\tthis.unsubscribeTiles$.next();\n\t\tthis.unsubscribeTiles$.complete();\n\t}\n\n\twriteValue(value: any) {\n\t\tif (!this.selectionTiles) { return; }\n\t\tthis.selectionTiles.forEach(tile => {\n\t\t\tif (tile.value === value) {\n\t\t\t\ttile.selected = true;\n\t\t\t} else {\n\t\t\t\ttile.selected = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterOnChange(fn: any) {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n}\n","import {\n\tComponent,\n\tHostBinding,\n\tInput\n} from \"@angular/core\";\n\n/**\n * Build application's tiles using this component.\n *\n * [See demo](../../?path=/story/tiles--basic)\n *\n * ## Basic usage\n *\n * ```html\n * <ibm-tile>\n * \t\ttile content\n * </ibm-tile>\n * ```\n *\n * <example-url>../../iframe.html?id=tiles--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-tile\",\n\ttemplate: `<ng-content></ng-content>`\n})\nexport class Tile {\n\t@HostBinding(\"class.bx--tile\") tileClass = true;\n\n\t@HostBinding(\"class.bx--tile--light\") get lightThemeEnabled() {\n\t\treturn this.theme === \"light\";\n\t}\n\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Tile } from \"./tile.component\";\nimport { ClickableTile } from \"./clickable-tile.component\";\nimport { ExpandableTile } from \"./expandable-tile.component\";\nimport { SelectionTile } from \"./selection-tile.component\";\nimport { TileGroup } from \"./tile-group.component\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { LinkModule } from \"carbon-components-angular/link\";\n\n@NgModule({\n\tdeclarations: [\n\t\tTile,\n\t\tClickableTile,\n\t\tExpandableTile,\n\t\tSelectionTile,\n\t\tTileGroup\n\t],\n\texports: [\n\t\tTile,\n\t\tClickableTile,\n\t\tExpandableTile,\n\t\tSelectionTile,\n\t\tTileGroup\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tI18nModule,\n\t\tLinkModule\n\t]\n})\nexport class TilesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}