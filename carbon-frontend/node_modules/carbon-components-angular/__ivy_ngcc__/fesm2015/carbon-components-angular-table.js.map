{"version":3,"file":"carbon-components-angular-table.js","sources":["carbon-components-angular/table/table-header-item.class.ts","carbon-components-angular/table/table-item.class.ts","carbon-components-angular/table/table-model.class.ts","carbon-components-angular/table/toolbar/table-toolbar.component.ts","carbon-components-angular/table/toolbar/table-toolbar-actions.component.ts","carbon-components-angular/table/toolbar/table-toolbar-search.component.ts","carbon-components-angular/table/toolbar/table-toolbar-content.component.ts","carbon-components-angular/table/table-container.component.ts","carbon-components-angular/table/header/table-header.component.ts","carbon-components-angular/table/header/table-header-title.directive.ts","carbon-components-angular/table/head/table-head-cell-label.directive.ts","carbon-components-angular/table/header/table-header-description.directive.ts","carbon-components-angular/table/expanded-row-hover.directive.ts","carbon-components-angular/table/data-grid-interaction-model.class.ts","carbon-components-angular/table/table-adapter.class.ts","carbon-components-angular/table/table.component.ts","carbon-components-angular/table/table.directive.ts","carbon-components-angular/table/head/table-head.component.ts","carbon-components-angular/table/head/table-head-cell.component.ts","carbon-components-angular/table/head/table-head-checkbox.component.ts","carbon-components-angular/table/head/table-head-expand.component.ts","carbon-components-angular/table/body/table-body.component.ts","carbon-components-angular/table/body/table-row.component.ts","carbon-components-angular/table/body/table-expanded-row.component.ts","carbon-components-angular/table/cell/table-data.component.ts","carbon-components-angular/table/cell/table-checkbox.component.ts","carbon-components-angular/table/cell/table-radio.component.ts","carbon-components-angular/table/cell/table-expand-button.component.ts","carbon-components-angular/table/table-row.class.ts","carbon-components-angular/table/table.module.ts","carbon-components-angular/table/index.ts","carbon-components-angular/table/carbon-components-angular-table.ts"],"names":[],"mappings":"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AAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAuiiBA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AASA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAUA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAWA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAQA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAQA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAQA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAOA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAQA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AASA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AASA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AASA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAA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","sourcesContent":["import { TableItem } from \"./table-item.class\";\nimport {\n\tEventEmitter,\n\tTemplateRef\n} from \"@angular/core\";\n\nexport class TableHeaderItem {\n\t/**\n\t * Defines if column under this TableHeaderItem should be displayed.\n\t *\n\t */\n\tvisible = true;\n\n\t/**\n\t * Disables sorting by default.\n\t *\n\t */\n\tsorted = false;\n\n\t/**\n\t * Enables sorting on click by default.\n\t * If false then this column won't show a sorting arrow at all.\n\t *\n\t */\n\tsortable = true;\n\n\t/**\n\t * Number of applied filters.\n\t *\n\t * `filter()` should set it to appropriate number.\n\t *\n\t */\n\tfilterCount = 0;\n\n\t/**\n\t * The number of rows to span\n\t * **NOTE:** not supported by the default carbon table\n\t */\n\trowSpan = 1;\n\n\t/**\n\t * The number of columns to span\n\t */\n\tcolSpan = 1;\n\n\t/**\n\t * Attach a class to the column, both the header and column cells.\n\t *\n\t */\n\tclassName: string;\n\n\t/**\n\t * Style for the column, applied to every element in the column.\n\t *\n\t * ngStyle-like format\n\t *\n\t */\n\tstyle = {};\n\n\t/**\n\t * If true, sort is set to ascending, if false descending will be true.\n\t *\n\t */\n\tset ascending(asc) {\n\t\tthis._ascending = asc;\n\t}\n\tget ascending() {\n\t\treturn this._ascending;\n\t}\n\n\t/**\n\t * If true, sort is set to descending, if false ascending will be true.\n\t *\n\t */\n\tset descending(desc) {\n\t\tthis._ascending = !desc;\n\t}\n\tget descending() {\n\t\treturn !this._ascending;\n\t}\n\n\t/**\n\t * Data for the header item.\n\t */\n\tdata: any;\n\n\t/**\n\t * Data for the header item for general usage in the controller.\n\t * For example, which `field` is this column related to.\n\t */\n\tmetadata: any;\n\n\t/**\n\t * Used to display data in a desired way.\n\t *\n\t * If not provided, displays data as a simple string.\n\t *\n\t * Usage:\n\t *\n\t * In a component where you're using the table create a template like:\n\t *\n\t * ```html\n\t * <ng-template #customHeaderTemplate let-data=\"data\">\n\t * \t\t<i><a [routerLink]=\"data.link\">{{data.name}}</a></i>\n\t * </ng-template>\n\t * ```\n\t * where we assume your data contains `link` and `name`. `let-data=\"data\"` is\n\t * necessary for you to be able to access item's data in the template.\n\t *\n\t * Create `ViewChild` property with:\n\t *\n\t * ```typescript\n\t * (at)ViewChild(\"customHeaderTemplate\")\n\t * protected customHeaderTemplate: TemplateRef<any>;\n\t * ```\n\t *\n\t * Set the template to the header item, for example:\n\t *\n\t * ```typescript\n\t * this.model.header = [\n\t * \t\tnew TableHeaderItem({data: {name: \"Custom header\", link: \"/table\"}, template: this.customHeaderTemplate})\n\t * ];\n\t * ```\n\t */\n\ttemplate: TemplateRef<any>;\n\n\t/**\n\t * The label for the sort button\n\t */\n\tariaSortLabel: string;\n\n\t/**\n\t * A callback function to format the sort label. Will be heavily called.\n\t */\n\tformatSortLabel: (label: string, staticLabel?: string) => string;\n\n\t/**\n\t * Used as a template for popover filter.\n\t *\n\t * `let-popover=\"popover\"` will give you access to popover component and allow you to\n\t * manipulate it if needed.\n\t *\n\t * `let-filter=\"filter\"` will give you access to the \"filter\". The main takeaway is\n\t * store the data you need to `filter.data`. You will be able to access it as\n\t * `this.filterData.data` from your `filter()` function when you extend `TableHeaderItem`\n\t *\n\t * Example:\n\t * ```html\n\t * <ng-template #filter let-popover=\"popover\">\n\t * \t<ibm-label class=\"first-label\">\n\t * \t\tValue\n\t * \t\t<input type=\"text\" [(ngModel)]=\"filter1\" class=\"input-field\">\n\t * \t</ibm-label>\n\t * </ng-template>\n\t *\n\t * <ng-template #filterFooter let-popover=\"popover\" let-filter=\"data\">\n\t * \t<button class=\"btn--primary\" (click)=\"filter.data = filter1; popover.onClose()\">Apply</button>\n\t * \t<button class=\"btn--secondary\" (click)=\"popover.onClose()\">Cancel</button>\n\t * </ng-template>\n\t * ```\n\t *\n\t * Set the template with, for example:\n\t * ```typescript\n\t * new FilterableHeaderItem({\n\t * \tfilterTemplate: this.filter,\n\t *\tfilterFooter: this.filterFooter\n\t * })\n\t * ```\n\t *\n\t * ```typescript\n\t * class FilterableHeaderItem extends TableHeaderItem {\n\t * \t// custom filter function\n\t * \tfilter(item: TableItem): boolean {\n\t * \t\tif (typeof item.data === \"string\" && item.data.indexOf(this.filterData.data) >= 0) {\n\t * \t\t\tthis.filterCount = 1;\n\t * \t\t\treturn false;\n\t * \t\t}\n\t * \t\tthis.filterCount = 0;\n\t * \t\treturn true;\n\t * \t}\n\t * }\n\t * ```\n\t */\n\tfilterTemplate: TemplateRef<any>;\n\n\t/**\n\t * Used along with `filterTemplate` to construct the filter popover\n\t */\n\tfilterFooter: TemplateRef<any>;\n\n\t/**\n\t * This is where you store your data when applying filter.\n\t *\n\t * It is the actual object you have access to with `let-filter=\"data\"` in your template.\n\t *\n\t * Make sure to store data in `filter.data` in your template, and you will have it\n\t * available in `filterData.data` in your extension of `TableHeaderItem`.\n\t *\n\t * Because angular and object references.\n\t */\n\tfilterData: any;\n\n\t/**\n\t * used in `ascending`\n\t *\n\t * @protected\n\t */\n\tprotected _ascending = true;\n\n\t/**\n\t * Creates an instance of TableHeaderItem.\n\t */\n\tconstructor(rawData?: any) {\n\t\t// defaults so we dont leave things empty\n\t\tconst defaults = {\n\t\t\tdata: \"\",\n\t\t\tvisible: this.visible,\n\t\t\tstyle: this.style,\n\t\t\tfilterCount: this.filterCount,\n\t\t\tfilterData: {data: \"\"}\n\t\t};\n\t\t// fill our object with provided props, and fallback to defaults\n\t\tconst data = Object.assign({}, defaults, rawData);\n\t\tfor (let property of Object.getOwnPropertyNames(data)) {\n\t\t\tif (data.hasOwnProperty(property)) {\n\t\t\t\tthis[property] = data[property];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Used for sorting rows of the table.\n\t *\n\t * Override to enable different sorting.\n\t *\n\t * < 0 if `one` should go before `two`\n\t * > 0 if `one` should go after `two`\n\t * 0 if it doesn't matter (they are the same)\n\t */\n\tcompare(one: TableItem, two: TableItem): number {\n\t\tif (!one || !two) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (typeof one.data === \"string\") {\n\t\t\treturn one.data.localeCompare(two.data);\n\t\t}\n\n\t\tif (one.data < two.data) {\n\t\t\treturn -1;\n\t\t} else if (one.data > two.data) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Used to filter rows in the table.\n\t *\n\t * Override to make a custom filter.\n\t *\n\t * Even though there is just one filter function, there can be multiple filters.\n\t * When implementing filter, set `filterCount` before returning.\n\t *\n\t * `true` to hide the row\n\t * `false` to show the row\n\t */\n\tfilter(item: TableItem): boolean {\n\t\tthis.filterCount = 0;\n\t\treturn false;\n\t}\n}\n","import {\n\tTemplateRef\n} from \"@angular/core\";\n\nexport class TableItem {\n\t/**\n\t * Data for the table item.\n\t */\n\tdata: any;\n\n\t/**\n\t * Data for the expanded part of the row.\n\t *\n\t * You only need to set it for the first item in the row.\n\t *\n\t * See `expandAsTable` documentation if you need to the table to expand to additional\n\t * table rows.\n\t */\n\texpandedData: any;\n\n\t/**\n\t * Used to display data in a desired way.\n\t *\n\t * If not provided, displays data as a simple string.\n\t *\n\t * Usage:\n\t *\n\t * In a component where you're using the table create a template like:\n\t *\n\t * ```html\n\t * <ng-template #customItemTemplate let-data=\"data\">\n\t * \t<i><a [routerLink]=\"data.link\">{{data.name}}</a></i>\n\t * </ng-template>\n\t * ```\n\t * where we assume your data contains `link` and `name`. `let-data=\"data\"` is\n\t * necessary for you to be able to access item's data in the template.\n\t *\n\t * Create `ViewChild` property with:\n\t *\n\t * ```typescript\n\t * (at)ViewChild(\"customItemTemplate\")\n\t * protected customItemTemplate: TemplateRef<any>;\n\t * ```\n\t *\n\t * Set the template to the table item, for example:\n\t *\n\t * ```typescript\n\t * this.model.data = [\n\t * \t[new TableItem({data: {name: \"Custom item\", link: \"/table\"}, template: this.customItemTemplate})]\n\t * ];\n\t * ```\n\t */\n\ttemplate: TemplateRef<any>;\n\n\t/**\n\t * Template for rendering `expandedData`\n\t *\n\t * You only need to set it for the first item in the row.\n\t *\n\t */\n\texpandedTemplate: TemplateRef<any>;\n\n\t/**\n\t * Setting this to `true` makes table interpret `expandedData` as additional rows to insert in place\n\t * for expanded data. `expandedTemplate` is then ignored.\n\t *\n\t * You can apply the template for individual cells as usual.\n\t *\n\t * Example model data:\n\t *\n\t * ```typescript\n\t * this.model.data = [\n\t * \t[new TableItem({ data: \"Name 4\" }), new TableItem({ data: \"twer\" })], // regular row\n\t * \t[\n\t * \t\tnew TableItem({\n\t * \t\t\tdata: \"Name 3.1\",\n\t * \t\t\t// `expandedData` mimics the format of the rest of the table\n\t * \t\t\texpandedData: [\n\t * \t\t\t\t[\n\t * \t\t\t\t\tnew TableItem({ data: \"More names\", expandedData: \"No template\" }),\n\t * \t\t\t\t\tnew TableItem({ data: { name: \"Morey\", link: \"#\" }, template: this.customTableItemTemplate })\n\t * \t\t\t\t],\n\t * \t\t\t\t[\n\t * \t\t\t\t\tnew TableItem({ data: \"Core names\", expandedData: \"No template\" }),\n\t * \t\t\t\t\tnew TableItem({ data: { name: \"Corey\", link: \"#\" }, template: this.customTableItemTemplate })\n\t * \t\t\t\t]\n\t * \t\t\t],\n\t * \t\t\t// `expandAsTable` tells the table to interpret `expandedData` as table data\n\t * \t\t\texpandAsTable: true\n\t * \t\t}),\n\t * \t\tnew TableItem({ data: \"swer\" })\n\t * \t],\n\t * \t[new TableItem({ data: \"Name 7\" }), new TableItem({data: \"twer\"})] // regular row\n\t * ];\n\t * ```\n\t */\n\texpandAsTable: false;\n\n\t/**\n\t * The number of rows to span\n\t */\n\trowSpan = 1;\n\n\t/**\n\t * The number of columns to span\n\t */\n\tcolSpan = 1;\n\n\tget title() {\n\t\tif (this._title) {\n\t\t\treturn this._title;\n\t\t}\n\n\t\tif (!this.data) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (typeof this.data === \"string\") {\n\t\t\treturn this.data;\n\t\t}\n\n\t\tif (\n\t\t\tthis.data.toString &&\n\t\t\tthis.data.constructor !== ({}).constructor\n\t\t) {\n\t\t\treturn this.data.toString();\n\t\t}\n\n\t\t// data canât be reasonably converted to an end user readable string\n\t\treturn \"\";\n\t}\n\n\tset title(title) {\n\t\tthis._title = title;\n\t}\n\n\tprivate _title: string;\n\n\t/**\n\t * Creates an instance of TableItem.\n\t */\n\tconstructor(rawData?: any) {\n\t\t// defaults so we dont leave things empty\n\t\tconst defaults = {\n\t\t\tdata: \"\"\n\t\t};\n\t\t// fill our object with provided props, and fallback to defaults\n\t\tconst data = Object.assign({}, defaults, rawData);\n\t\tfor (const property of Object.getOwnPropertyNames(data)) {\n\t\t\tif (data.hasOwnProperty(property)) {\n\t\t\t\tthis[property] = data[property];\n\t\t\t}\n\t\t}\n\t}\n}\n","import {\n\tEventEmitter\n} from \"@angular/core\";\n\nimport { PaginationModel } from \"carbon-components-angular/pagination\";\nimport { TableHeaderItem } from \"./table-header-item.class\";\nimport { TableItem } from \"./table-item.class\";\nimport { TableRow } from \"./table-row.class\";\nimport { Subject } from \"rxjs\";\n\nexport type HeaderType = number | \"select\" | \"expand\";\n\n/**\n * TableModel represents a data model for two-dimensional data. It's used for all things table\n * (table component, table toolbar, pagination, etc)\n *\n * TableModel manages its internal data integrity very well if you use the provided helper\n * functions for modifying rows and columns and assigning header and data in that order.\n *\n * It also provides direct access to the data so you can read and modify it.\n * If you change the structure of the data (by directly pushing into the arrays or otherwise),\n * keep in mind to keep the data structure intact.\n *\n * Header length and length of every line in the data should be equal.\n *\n * If they are not consistent, unexpected things will happen.\n *\n * Use the provided functions when in doubt.\n */\nexport class TableModel implements PaginationModel {\n\t/**\n\t * The number of models instantiated, used for (among other things) unique id generation\n\t */\n\tprotected static COUNT = 0;\n\n\t/**\n\t * Sets data of the table.\n\t *\n\t * Make sure all rows are the same length to keep the column count accurate.\n\t */\n\tset data(newData: TableItem[][]) {\n\t\tif (!newData || (Array.isArray(newData) && newData.length === 0) ) {\n\t\t\tnewData = [[]];\n\t\t}\n\n\t\tthis._data = newData;\n\n\t\t// init rowsSelected\n\t\tthis.rowsSelected = new Array<boolean>(this._data.length).fill(false);\n\t\tthis.rowsExpanded = new Array<boolean>(this._data.length).fill(false);\n\n\t\t// init rowsContext\n\t\tthis.rowsContext = new Array<string>(this._data.length);\n\n\t\t// init rowsClass\n\t\tthis.rowsClass = new Array<string>(this._data.length);\n\n\t\t// only create a fresh header if necessary (header doesn't exist or differs in length)\n\t\tif (this.header == null || (this.header.length !== this._data[0].length && this._data[0].length > 0)) {\n\t\t\tlet header = new Array<TableHeaderItem>();\n\t\t\tfor (let i = 0; i < this._data[0].length; i++) {\n\t\t\t\theader.push(new TableHeaderItem());\n\t\t\t}\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tthis.dataChange.emit();\n\t}\n\n\tdataChange = new EventEmitter();\n\trowsSelectedChange = new EventEmitter<number>();\n\trowsExpandedChange = new EventEmitter<number>();\n\t/**\n\t * Gets emitted when `selectAll` is called. Emits false if all rows are deselected and true if\n\t * all rows are selected.\n\t */\n\tselectAllChange = new Subject<boolean>();\n\n\t/**\n\t * Gets the full data.\n\t *\n\t * You can use it to alter individual `TableItem`s but if you need to change\n\t * table structure, use `addRow()` and/or `addColumn()`\n\t */\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Contains information about selection state of rows in the table.\n\t */\n\trowsSelected: boolean[] = [];\n\n\t/**\n\t * Contains information about expanded state of rows in the table.\n\t */\n\trowsExpanded: boolean[] = [];\n\n\t/**\n\t * Contains information about the context of the row.\n\t *\n\t * It affects styling of the row to reflect the context.\n\t *\n\t * string can be one of `\"success\" | \"warning\" | \"info\" | \"error\" | \"\"` and it's\n\t * empty or undefined by default\n\t */\n\trowsContext: string[] = [];\n\n\t/**\n\t * Contains class name(s) of the row.\n\t *\n\t * It affects styling of the row to reflect the appended class name(s).\n\t *\n\t * It's empty or undefined by default\n\t */\n\trowsClass: string[] = [];\n\n\t/**\n\t * Contains information about the header cells of the table.\n\t */\n\theader: TableHeaderItem[] = [];\n\n\t/**\n\t * Tracks the current page.\n\t */\n\tcurrentPage = 1;\n\n\t/**\n\t * Length of page.\n\t */\n\tpageLength = 10;\n\n\t/**\n\t * Set to true when there is no more data to load in the table\n\t */\n\tisEnd = false;\n\n\t/**\n\t * Set to true when lazy loading to show loading indicator\n\t */\n\tisLoading = false;\n\n\t/**\n\t * Absolute total number of rows of the table.\n\t */\n\tprotected _totalDataLength: number;\n\n\t/**\n\t * Manually set data length in case the data in the table doesn't\n\t * correctly reflect all the data that table is to display.\n\t *\n\t * Example: if you have multiple pages of data that table will display\n\t * but you're loading one at a time.\n\t *\n\t * Set to `null` to reset to default behavior.\n\t */\n\tset totalDataLength(length: number) {\n\t\t// if this function is called without a parameter we need to set to null to avoid having undefined != null\n\t\tthis._totalDataLength = length || null;\n\t}\n\n\t/**\n\t * Total length of data that table has access to, or the amount manually set\n\t */\n\tget totalDataLength() {\n\t\t// if manually set data length\n\t\tif (this._totalDataLength !== null && this._totalDataLength >= 0) {\n\t\t\treturn this._totalDataLength;\n\t\t}\n\n\t\t// if empty dataset\n\t\tif (this.data && this.data.length === 1 && this.data[0].length === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Used in `data`\n\t */\n\tprotected _data: TableItem[][] = [[]];\n\n\t/**\n\t * The number of models instantiated, this is to make sure each table has a different\n\t * model count for unique id generation.\n\t */\n\tprotected tableModelCount = 0;\n\n\tconstructor() {\n\t\tthis.tableModelCount = TableModel.COUNT++;\n\t}\n\n\t/**\n\t * Returns an id for the given column\n\t *\n\t * @param column the column to generate an id for\n\t * @param row the row of the header to generate an id for\n\t */\n\tgetId(column: HeaderType, row = 0): string {\n\t\treturn `table-header-${row}-${column}-${this.tableModelCount}`;\n\t}\n\n\t/**\n\t * Returns the id of the header. Used to link the cells with headers (or headers with headers)\n\t *\n\t * @param column the column to start getting headers for\n\t * @param colSpan the number of columns to get headers for (defaults to 1)\n\t */\n\tgetHeaderId(column: HeaderType, colSpan = 1): string {\n\t\tif (column === \"select\" || column === \"expand\") {\n\t\t\treturn this.getId(column);\n\t\t}\n\n\t\tlet ids = [];\n\t\tfor (let i = column; i >= 0; i--) {\n\t\t\tif (this.header[i]) {\n\t\t\t\tfor (let j = 0; j < colSpan; j++) {\n\t\t\t\t\tids.push(this.getId(i + j));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn ids.join(\" \");\n\t}\n\n\t/**\n\t * Finds closest header by trying the `column` and then working its way to the left\n\t *\n\t * @param column the target column\n\t */\n\tgetHeader(column: number): TableHeaderItem {\n\t\tif (!this.header) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let i = column; i >= 0; i--) {\n\t\t\tconst headerCell = this.header[i];\n\t\t\tif (headerCell) {\n\t\t\t\treturn headerCell;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns how many rows is currently selected\n\t */\n\tselectedRowsCount(): number {\n\t\tlet count = 0;\n\t\tif (this.rowsSelected) {\n\t\t\tthis.rowsSelected.forEach(rowSelected => {\n\t\t\t\tif (rowSelected) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn count;\n\t}\n\n\t/**\n\t * Returns how many rows is currently expanded\n\t */\n\texpandedRowsCount(): number {\n\t\tlet count = 0;\n\t\tif (this.rowsExpanded) {\n\t\t\tthis.rowsExpanded.forEach(rowExpanded => {\n\t\t\t\tif (rowExpanded) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn count;\n\t}\n\n\t/**\n\t * Returns `index`th row of the table.\n\t *\n\t * Negative index starts from the end. -1 being the last element.\n\t *\n\t * @param index\n\t */\n\trow(index: number): TableItem[] {\n\t\treturn this.data[this.realRowIndex(index)];\n\t}\n\n\t/**\n\t * Adds a row to the `index`th row or appends to table if index not provided.\n\t *\n\t * If row is shorter than other rows or not provided, it will be padded with\n\t * empty `TableItem` elements.\n\t *\n\t * If row is longer than other rows, others will be extended to match so no data is lost.\n\t *\n\t * If called on an empty table with no parameters, it creates a 1x1 table.\n\t *\n\t * Negative index starts from the end. -1 being the last element.\n\t *\n\t * @param [row]\n\t * @param [index]\n\t */\n\taddRow(row?: TableItem[], index?: number) {\n\t\t// if table empty create table with row\n\t\tif (!this.data || this.data.length === 0 || this.data[0].length === 0) {\n\t\t\tlet newData = new Array<Array<TableItem>>();\n\t\t\tnewData.push(row ? row : [new TableItem()]);  // row or one empty one column row\n\t\t\tthis.data = newData;\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet realRow = row;\n\t\tconst columnCount = this.data[0].length;\n\n\t\tif (row == null) {\n\t\t\trealRow = new Array<TableItem>();\n\t\t\tfor (let i = 0; i < columnCount; i++) {\n\t\t\t\trealRow.push(new TableItem());\n\t\t\t}\n\t\t}\n\n\t\tif (realRow.length < columnCount) {\n\t\t\t// extend the length of realRow\n\t\t\tconst difference = columnCount - realRow.length;\n\t\t\tfor (let i = 0; i < difference; i++) {\n\t\t\t\trealRow.push(new TableItem());\n\t\t\t}\n\t\t} else if (realRow.length > columnCount) {\n\t\t\t// extend the length of header\n\t\t\tlet difference = realRow.length - this.header.length;\n\t\t\tfor (let j = 0; j < difference; j++) {\n\t\t\t\tthis.header.push(new TableHeaderItem());\n\t\t\t}\n\t\t\t// extend the length of every other row\n\t\t\tfor (let i = 0; i < this.data.length; i++) {\n\t\t\t\tlet currentRow = this.data[i];\n\t\t\t\tdifference = realRow.length - currentRow.length;\n\t\t\t\tfor (let j = 0; j < difference; j++) {\n\t\t\t\t\tcurrentRow.push(new TableItem());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (index == null) {\n\t\t\tthis.data.push(realRow);\n\n\t\t\t// update rowsSelected property for length\n\t\t\tthis.rowsSelected.push(false);\n\n\t\t\t// update rowsExpanded property for length\n\t\t\tthis.rowsExpanded.push(false);\n\n\t\t\t// update rowsContext property for length\n\t\t\tthis.rowsContext.push(undefined);\n\n\t\t\t// update rowsClass property for length\n\t\t\tthis.rowsClass.push(undefined);\n\t\t} else {\n\t\t\tconst ri = this.realRowIndex(index);\n\t\t\tthis.data.splice(ri, 0, realRow);\n\n\t\t\t// update rowsSelected property for length\n\t\t\tthis.rowsSelected.splice(ri, 0, false);\n\n\t\t\t// update rowsExpanded property for length\n\t\t\tthis.rowsExpanded.splice(ri, 0, false);\n\n\t\t\t// update rowsContext property for length\n\t\t\tthis.rowsContext.splice(ri, 0, undefined);\n\n\t\t\t// update rowsClass property for length\n\t\t\tthis.rowsClass.splice(ri, 0, undefined);\n\t\t}\n\n\t\tthis.dataChange.emit();\n\t}\n\n\t/**\n\t * Deletes `index`th row.\n\t *\n\t * Negative index starts from the end. -1 being the last element.\n\t *\n\t * @param index\n\t */\n\tdeleteRow(index: number) {\n\t\tconst rri = this.realRowIndex(index);\n\t\tthis.data.splice(rri, 1);\n\t\tthis.rowsSelected.splice(rri, 1);\n\t\tthis.rowsExpanded.splice(rri, 1);\n\t\tthis.rowsContext.splice(rri, 1);\n\t\tthis.rowsClass.splice(rri, 1);\n\n\t\tthis.dataChange.emit();\n\t}\n\n\thasExpandableRows() {\n\t\treturn this.data.some(data => data.some(d => d && d.expandedData)); // checking for some in 2D array\n\t}\n\n\tisRowExpandable(index: number) {\n\t\treturn this.data[index].some(d => d && d.expandedData);\n\t}\n\n\tisRowExpanded(index: number) {\n\t\treturn this.rowsExpanded[index];\n\t}\n\n\tgetRowContext(index: number) {\n\t\treturn this.rowsContext[index];\n\t}\n\n\t/**\n\t * Returns `index`th column of the table.\n\t *\n\t * Negative index starts from the end. -1 being the last element.\n\t *\n\t * @param index\n\t */\n\tcolumn(index: number): TableItem[] {\n\t\tlet column = new Array<TableItem>();\n\t\tconst ri = this.realColumnIndex(index);\n\t\tconst rc = this.data.length;\n\n\t\tfor (let i = 0; i < rc; i++) {\n\t\t\tconst row = this.data[i];\n\t\t\tcolumn.push(row[ri]);\n\t\t}\n\n\t\treturn column;\n\t}\n\n\t/**\n\t * Adds a column to the `index`th column or appends to table if index not provided.\n\t *\n\t * If column is shorter than other columns or not provided, it will be padded with\n\t * empty `TableItem` elements.\n\t *\n\t * If column is longer than other columns, others will be extended to match so no data is lost.\n\t *\n\t * If called on an empty table with no parameters, it creates a 1x1 table.\n\t *\n\t * Negative index starts from the end. -1 being the last element.\n\t *\n\t * @param [column]\n\t * @param [index]\n\t */\n\taddColumn(column?: TableItem[], index?: number) {\n\t\t// if table empty create table with row\n\t\tif (!this.data || this.data.length === 0 || this.data[0].length === 0) {\n\t\t\tlet newData = new Array<Array<TableItem>>();\n\t\t\tif (column == null) {\n\t\t\t\tnewData.push([new TableItem()]);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < column.length; i++) {\n\t\t\t\t\tlet item = column[i];\n\t\t\t\t\tnewData.push([item]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.data = newData;\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet rc = this.data.length;  // row count\n\t\tlet ci = this.realColumnIndex(index);\n\n\t\t// append missing rows\n\t\tfor (let i = 0; column != null && i < column.length - rc; i++) {\n\t\t\tthis.addRow();\n\t\t}\n\t\trc = this.data.length;\n\t\tif (index == null) {\n\t\t\t// append to end\n\t\t\tfor (let i = 0; i < rc; i++) {\n\t\t\t\tlet row = this.data[i];\n\t\t\t\trow.push(column == null || column[i] == null ? new TableItem() : column[i]);\n\t\t\t}\n\t\t\t// update header if not already set by user\n\t\t\tif (this.header.length < this.data[0].length) {\n\t\t\t\tthis.header.push(new TableHeaderItem());\n\t\t\t}\n\t\t} else {\n\t\t\tif (index >= this.data[0].length) {\n\t\t\t\t// if trying to append\n\t\t\t\tci++;\n\t\t\t}\n\t\t\t// insert\n\t\t\tfor (let i = 0; i < rc; i++) {\n\t\t\t\tlet row = this.data[i];\n\t\t\t\trow.splice(ci, 0, column == null || column[i] == null ? new TableItem() : column[i]);\n\t\t\t}\n\t\t\t// update header if not already set by user\n\t\t\tif (this.header.length < this.data[0].length) {\n\t\t\t\tthis.header.splice(ci, 0, new TableHeaderItem());\n\t\t\t}\n\t\t}\n\n\t\tthis.dataChange.emit();\n\t}\n\n\t/**\n\t * Deletes `index`th column.\n\t *\n\t * Negative index starts from the end. -1 being the last element.\n\t *\n\t * @param index\n\t */\n\tdeleteColumn(index: number) {\n\t\tconst rci = this.realColumnIndex(index);\n\t\tconst rowCount = this.data.length;\n\t\tfor (let i = 0; i < rowCount; i++) {\n\t\t\tthis.data[i].splice(rci, 1);\n\t\t}\n\t\t// update header if not already set by user\n\t\tif (this.header.length > this.data[0].length) {\n\t\t\tthis.header.splice(rci, 1);\n\t\t}\n\n\t\tthis.dataChange.emit();\n\t}\n\n\tmoveColumn(indexFrom: number, indexTo: number) {\n\t\tconst headerFrom = this.header[indexFrom];\n\n\t\tthis.addColumn(this.column(indexFrom), indexTo);\n\t\tthis.deleteColumn(indexFrom + (indexTo < indexFrom ? 1 : 0));\n\n\t\tthis.header[indexTo + (indexTo > indexFrom ? -1 : 0)] = headerFrom;\n\t}\n\n\t/**\n\t * Sorts the data currently present in the model based on `compare()`\n\t *\n\t * Direction is set by `ascending` and `descending` properties of `TableHeaderItem`\n\t * in `index`th column.\n\t *\n\t * @param index The column based on which it's sorting\n\t */\n\tsort(index: number) {\n\t\tthis.pushRowStateToModelData();\n\t\tthis.data.sort((a, b) => (this.header[index].descending ? -1 : 1) * this.header[index].compare(a[index], b[index]));\n\t\tthis.popRowStateFromModelData();\n\t\tthis.header.forEach(column => column.sorted = false);\n\t\tthis.header[index].sorted = true;\n\t}\n\n\t/**\n\t * Appends `rowsSelected` and `rowsExpanded` info to model data.\n\t *\n\t * When sorting rows, do this first so information about row selection\n\t * gets sorted with the other row info.\n\t *\n\t * Call `popRowSelectionFromModelData()` after sorting to make everything\n\t * right with the world again.\n\t */\n\tpushRowStateToModelData() {\n\t\tfor (let i = 0; i < this.data.length; i++) {\n\t\t\tconst rowSelectedMark = new TableItem();\n\t\t\trowSelectedMark.data = this.rowsSelected[i];\n\t\t\tthis.data[i].push(rowSelectedMark);\n\n\t\t\tconst rowExpandedMark = new TableItem();\n\t\t\trowExpandedMark.data = this.rowsExpanded[i];\n\t\t\tthis.data[i].push(rowExpandedMark);\n\n\t\t\tconst rowContext = new TableItem();\n\t\t\trowContext.data = this.rowsContext[i];\n\t\t\tthis.data[i].push(rowContext);\n\n\t\t\tconst rowClass = new TableItem();\n\t\t\trowClass.data = this.rowsClass[i];\n\t\t\tthis.data[i].push(rowClass);\n\t\t}\n\t}\n\n\t/**\n\t * Restores `rowsSelected` from data pushed by `pushRowSelectionToModelData()`\n\t *\n\t * Call after sorting data (if you previously pushed to maintain selection order)\n\t * to make everything right with the world again.\n\t */\n\tpopRowStateFromModelData() {\n\t\tfor (let i = 0; i < this.data.length; i++) {\n\t\t\tthis.rowsClass[i] = this.data[i].pop().data;\n\t\t\tthis.rowsContext[i] = this.data[i].pop().data;\n\t\t\tthis.rowsExpanded[i] = !!this.data[i].pop().data;\n\t\t\tthis.rowsSelected[i] = !!this.data[i].pop().data;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if row is filtered out.\n\t *\n\t * @param index\n\t * @returns true if any of the filters in header filters out the `index`th row\n\t */\n\tisRowFiltered(index: number): boolean {\n\t\tconst realIndex = this.realRowIndex(index);\n\t\treturn this.header.some((item, i) => item && item.filter(this.row(realIndex)[i]));\n\t}\n\n\t/**\n\t * Select/deselect `index`th row based on value\n\t *\n\t * @param index index of the row to select\n\t * @param value state to set the row to. Defaults to `true`\n\t */\n\tselectRow(index: number, value = true) {\n\t\tif (this.isRowDisabled(index)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.rowsSelected[index] = value;\n\t\tthis.rowsSelectedChange.emit(index);\n\t}\n\n\t/**\n\t * Selects or deselects all rows in the model\n\t *\n\t * @param value state to set all rows to. Defaults to `true`\n\t */\n\tselectAll(value = true) {\n\t\tif (this.data.length >= 1) {\n\t\t\tfor (let i = 0; i < this.rowsSelected.length; i++) {\n\t\t\t\tthis.selectRow(i, value);\n\t\t\t}\n\t\t}\n\t\tthis.selectAllChange.next(value);\n\t}\n\n\tisRowSelected(index: number) {\n\t\treturn this.rowsSelected[index];\n\t}\n\n\t/**\n\t * Checks if row is disabled or not.\n\t */\n\tisRowDisabled(index: number) {\n\t\tconst row = this.data[index] as TableRow;\n\t\treturn !!row.disabled;\n\t}\n\n\t/**\n\t * Expands/Collapses `index`th row based on value\n\t *\n\t * @param index index of the row to expand or collapse\n\t * @param value expanded state of the row. `true` is expanded and `false` is collapsed\n\t */\n\texpandRow(index: number, value = true) {\n\t\tthis.rowsExpanded[index] = value;\n\t\tthis.rowsExpandedChange.emit(index);\n\t}\n\n\t/**\n\t * Gets the true index of a row based on it's relative position.\n\t * Like in Python, positive numbers start from the top and\n\t * negative numbers start from the bottom.\n\t *\n\t * @param index\n\t */\n\tprotected realRowIndex(index: number): number {\n\t\treturn this.realIndex(index, this.data.length);\n\t}\n\n\t/**\n\t * Gets the true index of a column based on it's relative position.\n\t * Like in Python, positive numbers start from the top and\n\t * negative numbers start from the bottom.\n\t *\n\t * @param index\n\t */\n\tprotected realColumnIndex(index: number): number {\n\t\treturn this.realIndex(index, this.data[0].length);\n\t}\n\n\t/**\n\t * Generic function to calculate the real index of something.\n\t * Used by `realRowIndex()` and `realColumnIndex()`\n\t *\n\t * @param index\n\t * @param length\n\t */\n\tprotected realIndex(index: number, length: number): number {\n\t\tif (index == null) {\n\t\t\treturn length - 1;\n\t\t} else if (index >= 0) {\n\t\t\treturn index >= length ? length - 1 : index;\n\t\t} else {\n\t\t\treturn -index >= length ? 0 : length + index;\n\t\t}\n\t}\n}\n","import { TableModel } from \"../table-model.class\";\nimport {\n\tComponent,\n\tEventEmitter,\n\tInput,\n\tOutput\n} from \"@angular/core\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { TableRowSize } from \"../table.types\";\n\n/**\n * The table toolbar is reserved for global table actions such as table settings, complex filter, export, or editing table data.\n *\n * ## Basic usage\n *\n * ```html\n * <ibm-table-toolbar [model]=\"model\">\n *\t\t<ibm-table-toolbar-actions>\n *\t\t\t<button ibmButton=\"primary\">\n *\t\t\t\tDelete\n *\t\t\t\t<svg ibmIcon=\"delete\" size=\"16\" class=\"bx--btn__icon\"></svg>\n *\t\t\t</button>\n *\t\t\t<button ibmButton=\"primary\">\n *\t\t\t\tSave\n *\t\t\t\t<svg ibmIcon=\"save\" size=\"16\" class=\"bx--btn__icon\"></svg>\n *\t\t\t</button>\n *\t\t\t<button ibmButton=\"primary\">\n *\t\t\t\tDownload\n *\t\t\t\t<svg ibmIcon=\"download\" size=\"16\" class=\"bx--btn__icon\"></svg>\n *\t\t\t</button>\n *\t\t</ibm-table-toolbar-actions>\n *\t\t\t<ibm-table-toolbar-content>\n *\t\t\t<ibm-table-toolbar-search [expandable]=\"true\"></ibm-table-toolbar-search>\n *\t\t\t<button ibmButton=\"toolbar-action\">\n *\t\t\t\t<svg ibmIcon=\"settings\" size=\"16\" class=\"bx--toolbar-action__icon\"></ibm-icon-settings>\n *\t\t\t</button>\n *\t\t\t<button ibmButton=\"primary\" size=\"sm\">\n *\t\t\t\tPrimary Button\n *\t\t\t\t<svg ibmIcon=\"add\" size=\"20\" class=\"bx--btn__icon\"></svg>\n *\t\t\t</button>\n *\t\t</ibm-table-toolbar-content>\n *\t</ibm-table-toolbar>\n * ```\n *\n */\n@Component({\n\tselector: \"ibm-table-toolbar\",\n\ttemplate: `\n\t<section\n\t\tclass=\"bx--table-toolbar\"\n\t\t[ngClass]=\"{'bx--table-toolbar--small' : size === 'sm'}\">\n\t\t<div\n\t\t\t*ngIf=\"model\"\n\t\t\tclass=\"bx--batch-actions\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--batch-actions--active': selected\n\t\t\t}\"\n\t\t\t[attr.aria-label]=\"actionBarLabel.subject | async\">\n\t\t\t<div class=\"bx--action-list\">\n\t\t\t\t<ng-content select=\"ibm-table-toolbar-actions\"></ng-content>\n\t\t\t\t<button\n\t\t\t\t\tibmButton=\"primary\"\n\t\t\t\t\tclass=\"bx--batch-summary__cancel\"\n\t\t\t\t\t[tabindex]=\"selected ? 0 : -1\"\n\t\t\t\t\t(click)=\"onCancel()\">\n\t\t\t\t\t{{_cancelText.subject | async}}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div class=\"bx--batch-summary\">\n\t\t\t\t<p class=\"bx--batch-summary__para\" *ngIf=\"count as n\">\n\t\t\t\t\t<ng-container *ngIf=\"_batchTextLegacy.subject | async as legacyText; else batchTextBlock\">\n\t\t\t\t\t\t<span>{{n}}</span> {{legacyText}}\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<ng-template #batchTextBlock>\n\t\t\t\t\t\t<span *ngIf=\"n === 1\">{{_batchTextSingle.subject | async}}</span>\n\t\t\t\t\t\t<span *ngIf=\"n !== 1\">{{_batchTextMultiple.subject | i18nReplace: {count: n} | async}}</span>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<ng-content></ng-content>\n\t</section>\n\t`\n})\nexport class TableToolbar {\n\t@Input() model: TableModel;\n\n\t@Input() set batchText (value: string | { SINGLE: string, MULTIPLE: string }) {\n\t\tif (typeof value === \"object\") {\n\t\t\tthis._batchTextSingle.override(value.SINGLE);\n\t\t\tthis._batchTextMultiple.override(value.MULTIPLE);\n\t\t} else {\n\t\t\t// For compatibility with old code\n\t\t\tthis._batchTextLegacy.override(value);\n\t\t}\n\t}\n\t@Input() set ariaLabel (value: { ACTION_BAR: string }) {\n\t\tthis.actionBarLabel.override(value.ACTION_BAR);\n\t}\n\t@Input() set cancelText(value: { CANCEL: string }) {\n\t\tthis._cancelText.override(value.CANCEL);\n\t}\n\t@Input() size: TableRowSize = \"md\";\n\n\tget cancelText(): { CANCEL: string } {\n\t\treturn { CANCEL: this._cancelText.value as string };\n\t}\n\n\t@Output() cancel = new EventEmitter();\n\n\tactionBarLabel: Overridable = this.i18n.getOverridable(\"TABLE_TOOLBAR.ACTION_BAR\");\n\t_cancelText: Overridable = this.i18n.getOverridable(\"TABLE_TOOLBAR.CANCEL\");\n\t_batchTextLegacy: Overridable = this.i18n.getOverridable(\"TABLE_TOOLBAR.BATCH_TEXT\");\n\t_batchTextSingle: Overridable = this.i18n.getOverridable(\"TABLE_TOOLBAR.BATCH_TEXT_SINGLE\");\n\t_batchTextMultiple: Overridable = this.i18n.getOverridable(\"TABLE_TOOLBAR.BATCH_TEXT_MULTIPLE\");\n\n\tconstructor(protected i18n: I18n) {}\n\n\tget count() {\n\t\treturn this.model.totalDataLength > 0 ? this.model.rowsSelected.reduce((previous, current) => previous + (current ? 1 : 0), 0) : 0;\n\t}\n\tget selected() {\n\t\treturn this.model.totalDataLength > 0 ? this.model.rowsSelected.some(item => item) : false;\n\t}\n\n\tonCancel() {\n\t\tthis.model.selectAll(false);\n\t\tthis.cancel.emit();\n\t}\n}\n","import { Component, HostBinding } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-table-toolbar-actions\",\n\ttemplate: `<ng-content></ng-content>`\n})\nexport class TableToolbarActions {}\n","import { Search } from \"carbon-components-angular/search\";\nimport {\n\tComponent,\n\tHostBinding,\n\tInput,\n\tOnInit,\n\tAfterViewInit\n} from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n@Component({\n\tselector: \"ibm-table-toolbar-search\",\n\ttemplateUrl: \"../../search/search.component.html\",\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: TableToolbarSearch,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class TableToolbarSearch extends Search implements OnInit, AfterViewInit {\n\ttableSearch = true;\n\n\t@HostBinding(\"class.bx--toolbar-search-container-expandable\") @Input() expandable = false;\n\n\t@HostBinding(\"class.bx--toolbar-search-container-persistent\") get persistentClass() { return !this.expandable; }\n\n\t@HostBinding(\"class.bx--toolbar-search-container-active\") get activeClass() {\n\t\treturn this.active && (this.value !== null || this.value !== \"\");\n\t}\n\n\tngOnInit() {\n\t\tthis.size = \"sm\";\n\t\tif (this.expandable) {\n\t\t\tthis.toolbar = true;\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\t\t\tif (this.value) {\n\t\t\t\tthis.openSearch();\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Component, HostBinding } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-table-toolbar-content\",\n\ttemplate: `<ng-content></ng-content>`\n})\nexport class TableToolbarContent {\n\t@HostBinding(\"class.bx--toolbar-content\") class = true;\n}\n","import { Component, HostBinding } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-table-container\",\n\ttemplate: `<ng-content></ng-content>`,\n\tstyles: [`\n\t\t:host { display: block }\n\t`]\n})\nexport class TableContainer {\n\t@HostBinding(\"class.bx--data-table-container\") containerClass = true;\n}\n","import { Component, HostBinding } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-table-header\",\n\ttemplate: `\n\t\t<ng-content></ng-content>\n\t`\n})\nexport class TableHeader {\n\t@HostBinding(\"class.bx--data-table-header\") headerClass = true;\n\t@HostBinding(\"style.display\") displayStyle = \"block\";\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmTableHeaderTitle]\"\n})\nexport class TableHeaderTitle {\n\t@HostBinding(\"class.bx--data-table-header__title\") titleClass = true;\n}\n","import {\n\tDirective,\n\tHostBinding\n} from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmTableHeadCellLabel]\"\n})\n\n\nexport class TableHeadCellLabel {\n\t@HostBinding(\"class.bx--table-header-label\") baseClass = true;\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmTableHeaderDescription]\"\n})\nexport class TableHeaderDescription {\n\t@HostBinding(\"class.bx--data-table-header__description\") descriptionClass = true;\n}\n","import {\n\tDirective,\n\tHostListener\n} from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmExpandedRowHover]\"\n})\nexport class ExpandedRowHover {\n\t@HostListener(\"mouseenter\", [\"$event\"])\n\taddHoverClass(event) {\n\t\tevent.target.previousElementSibling.classList.add(\"bx--expandable-row--hover\");\n\t}\n\n\t@HostListener(\"mouseleave\", [\"$event\"])\n\tremoveHoverClass(event) {\n\t\tevent.target.previousElementSibling.classList.remove(\"bx--expandable-row--hover\");\n\t}\n}\n","import {\n\tBehaviorSubject,\n\tObservable,\n\tcombineLatest\n} from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { TableAdapter } from \"./table-adapter.class\";\nimport { tabbableSelectorIgnoreTabIndex, getFocusElementList } from \"carbon-components-angular/common\";\n\n/**\n * The current and previous position in the grid.\n *\n * `current` and `previous` are tuples that follow the `[row, column]` convention.\n */\nexport interface DataGridPosition {\n\tcurrent: [number, number];\n\tprevious: [number, number];\n}\n\n/**\n * `DataGridInteractionModel` provides centralized control over arbitrary 2d grids, following the w3 specs.\n *\n * Refs:\n *  - https://www.w3.org/TR/wai-aria-practices/examples/grid/dataGrids.html\n *  - https://www.w3.org/TR/wai-aria-practices/#grid\n *\n * Example usage (taken from `table.component`):\n```typescript\n// a standard HTML table\nconst table = this.elementRef.nativeElement.querySelector(\"table\") as HTMLTableElement;\n\n// `TableDomAdapter` implements `TableAdapter` and provides a consistent interface to query rows and columns in a table\nconst tableAdapter = new TableDomAdapter(table);\n\n// the keydown events that we'll use for keyboard navigation of the table\nconst keydownEventStream = fromEvent<KeyboardEvent>(table, \"keydown\");\n\n// the click events we'll use to ensure focus is updated correctly on click\nconst clickEventStream = fromEvent<MouseEvent>(table, \"click\");\n\n// the `DataGridInteractionModel` instance!\nthis.interactionModel = new DataGridInteractionModel(keydownEventStream, clickEventStream, tableAdapter);\n\n// subscribe to the combined position updates\nthis.interactionModel.position.subscribe(event => {\n\tconst [currentRow, currentColumn] = event.current;\n\tconst [previousRow, previousColumn] = event.previous;\n\n\t// query the TableAdapter for the cell at the current row and column ...\n\tconst currentElement = tableAdapter.getCell(currentRow, currentColumn);\n\t// ... and make it focusable it\n\tTable.setTabIndex(currentElement, 0);\n\n\t// if the model has just initialized don't focus or reset anything\n\tif (previousRow === -1 || previousColumn === -1) { return; }\n\n\t// query the TableAdapter for the cell at the previous row and column ...\n\tconst previousElement = tableAdapter.getCell(previousRow, previousColumn);\n\t// ... and make it unfocusable (now there is only a single focusable cell)\n\tTable.setTabIndex(previousElement, -1);\n\n\t// finally, focus the current cell (skipped during initilzation)\n\tTable.focus(currentElement);\n});\n```\n */\nexport class DataGridInteractionModel {\n\t/**\n\t * An Observable that provides an aggregated view of the `rowIndex` and `columnIndex` Observables\n\t */\n\treadonly position: Observable<DataGridPosition>;\n\t/**\n\t * An Observable that provides the current and previous row indexes.\n\t */\n\treadonly rowIndex: Observable<{ current: number, previous: number }>;\n\t/**\n\t * An Observable that provides the current and previous column indexes.\n\t */\n\treadonly columnIndex: Observable<{ current: number, previous: number }>;\n\n\t/**\n\t * Internal subject to handle changes in row\n\t */\n\tprotected rowSubject = new BehaviorSubject({ current: 0, previous: -1 });\n\t/**\n\t * Internal subject to handle changes in column\n\t */\n\tprotected columnSubject = new BehaviorSubject({ current: 0, previous: -1 });\n\n\t/**\n\t * The latest value emitted by the rowSubject\n\t */\n\tprotected get currentRow() {\n\t\treturn this.rowSubject.getValue().current;\n\t}\n\n\t/**\n\t * The latest value emitted by the columnSubject\n\t */\n\tprotected get currentColumn() {\n\t\treturn this.columnSubject.getValue().current;\n\t}\n\n\t/**\n\t * The last column as reported by the adapter\n\t */\n\tprotected get lastColumn() {\n\t\treturn this.tableAdapter.lastColumnIndex;\n\t}\n\n\t/**\n\t * The last row as reported by the adapter\n\t */\n\tprotected get lastRow() {\n\t\treturn this.tableAdapter.lastRowIndex;\n\t}\n\n\t/**\n\t * `DataGridInteractionModel` requires knowledge of events, and a representation of your table/grid to be useful.\n\t *\n\t * @param keyboardEventStream an Observable of KeyboardEvents. Should be scoped to the table container.\n\t * @param clickEventStream an Observable of ClickEvents. should only include clicks that take action on items known by the TableAdapter\n\t * @param tableAdapter an instance of a concrete class that implements TableAdapter. The standard carbon table uses TableDomAdapter\n\t */\n\tconstructor(\n\t\tprotected keyboardEventStream: Observable<KeyboardEvent>,\n\t\tprotected clickEventStream: Observable<MouseEvent>,\n\t\tprotected tableAdapter: TableAdapter\n\t) {\n\t\tthis.rowIndex = this.rowSubject.asObservable();\n\t\tthis.columnIndex = this.columnSubject.asObservable();\n\t\tthis.position = combineLatest(this.rowIndex, this.columnIndex).pipe(map(positions => {\n\t\t\tconst [row, column] = positions;\n\t\t\treturn {\n\t\t\t\tcurrent: [row.current, column.current],\n\t\t\t\tprevious: [row.previous, column.previous]\n\t\t\t};\n\t\t})) as Observable<DataGridPosition>;\n\t\tthis.keyboardEventStream.subscribe(this.handleKeyboardEvent.bind(this));\n\t\tthis.clickEventStream.subscribe(this.handleClickEvent.bind(this));\n\t}\n\n\t/**\n\t * Handles moving the position according to the w3 datagrid navigation specs\n\t *\n\t * Refs:\n\t *  - https://www.w3.org/TR/wai-aria-practices/examples/grid/dataGrids.html\n\t *  - https://www.w3.org/TR/wai-aria-practices/#grid\n\t *\n\t * @param event the KeyboardEvent to handle\n\t */\n\thandleKeyboardEvent(event: KeyboardEvent) {\n\t\tconst currentCell = this.tableAdapter.getCell(this.currentRow, this.currentColumn);\n\t\tlet currentColumn = this.tableAdapter.findColumnIndex(currentCell);\n\t\tlet currentRow = this.tableAdapter.findRowIndex(currentCell);\n\n\t\tswitch (event.key) {\n\t\t\tcase \"Right\": // IE specific value\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\t// add the colspan since findColumnIndex will return the\n\t\t\t\t// first column containing the cell (of N columns it may span)\n\t\t\t\t// and we want to navigate to the next \"real\" column\n\t\t\t\tthis.goToColumn(currentColumn + currentCell.colSpan);\n\t\t\t\tbreak;\n\t\t\tcase \"Left\": // IE specific value\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\t// we only ever need to subtract 1 from the column, since findColumnIndex returns the\n\t\t\t\t// first of N columns containing the cell\n\t\t\t\tthis.goToColumn(currentColumn - 1);\n\t\t\t\tbreak;\n\t\t\tcase \"Down\": // IE specific value\n\t\t\tcase \"ArrowDown\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.goToRow(currentRow + currentCell.rowSpan);\n\t\t\t\tbreak;\n\t\t\tcase \"Up\": // IE specific value\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.goToRow(currentRow - 1);\n\t\t\t\tbreak;\n\t\t\tcase \"Home\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (event.ctrlKey) {\n\t\t\t\t\tthis.goTo({row: 0, column: 0});\n\t\t\t\t} else {\n\t\t\t\t\tthis.goToColumn(0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"End\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (event.ctrlKey) {\n\t\t\t\t\tthis.goTo({ row: this.lastRow, column: this.lastColumn });\n\t\t\t\t} else {\n\t\t\t\t\tthis.goToColumn(this.lastColumn);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Handles moving the position to the clicked cell\n\t *\n\t * @param event the MouseEvent to handle\n\t */\n\thandleClickEvent(event: MouseEvent) {\n\t\tconst cell = (event.target as HTMLElement).closest(\"td, th\") as HTMLTableCellElement;\n\t\tconst [rowIndex, cellIndex] = this.tableAdapter.findIndex(cell);\n\t\tthis.goTo({ row: rowIndex, column: cellIndex });\n\t}\n\n\t/**\n\t * Jump to a specific column without changing the row\n\t *\n\t * @param index column to jump to\n\t */\n\tgoToColumn(index: number) {\n\t\tif (index > this.lastColumn || index < 0) { return; }\n\t\tthis.goTo({ row: this.currentRow, column: index});\n\t}\n\n\t/**\n\t * Jump to a specific row without changing the column\n\t *\n\t * @param index row to jump to\n\t */\n\tgoToRow(index: number) {\n\t\tif (index > this.lastRow || index < 0) { return; }\n\t\tthis.goTo({row: index, column: this.currentColumn});\n\t}\n\n\t/**\n\t * Jump to the specified row and column\n\t *\n\t * @param param0 an object that contains `row` and `column` properties\n\t */\n\tgoTo({row, column}) {\n\t\tthis.rowSubject.next({ current: row, previous: this.currentRow });\n\t\tthis.columnSubject.next({ current: column, previous: this.currentColumn });\n\t}\n\n\t/**\n\t * Convenience method to reset the tab indexes on a standard carbon table.\n\t * For custom tables you may want to reset the indexes manually and simply call `.reset()`\n\t */\n\tresetTabIndexes(newTabIndex = -1) {\n\t\tfor (let i = 0; i < this.tableAdapter.lastRowIndex; i++) {\n\t\t\tconst row = this.tableAdapter.getRow(i) as HTMLTableRowElement;\n\t\t\tfor (const cell of Array.from(row.cells)) {\n\t\t\t\tconst tabbableElements = getFocusElementList(cell, tabbableSelectorIgnoreTabIndex);\n\t\t\t\ttabbableElements.forEach((node: HTMLElement) => node.tabIndex = newTabIndex);\n\t\t\t\tcell.tabIndex = newTabIndex;\n\t\t\t}\n\t\t}\n\n\t\tthis.reset();\n\t}\n\n\t/**\n\t * Resets the models focus position\n\t */\n\treset() {\n\t\tthis.rowSubject.next({ current: 0, previous: -1 });\n\t\tthis.columnSubject.next({ current: 0, previous: -1 });\n\t}\n}\n","/**\n * An abstract class that represents a cell in a table\n */\nexport abstract class TableCellAdapter {\n\t/**\n\t * The index of the cell in the table\n\t */\n\tcellIndex: number;\n\t/**\n\t * The number of columns spanned by this cell\n\t */\n\tcolSpan: number;\n\t/**\n\t * The number of rows spanned by this cell\n\t */\n\trowSpan: number;\n}\n\n/**\n * An abstract class that represents a row in a table\n */\nexport abstract class TableRowAdapter {\n\t/**\n\t * The index of the row in the table\n\t */\n\trowIndex: number;\n\t/**\n\t * An array (or `HTMLCollection`) of `TableCellAdapter`s\n\t */\n\tcells: HTMLCollection | TableCellAdapter[];\n}\n\n/**\n * An abstract representation of a table that provides\n * a standard interface to query 2d tables for cell and row information.\n */\nexport abstract class TableAdapter {\n\t/**\n\t * The last accessible column in the table\n\t */\n\tpublic get lastColumnIndex(): number { return; }\n\n\t/**\n\t * The last accessible row in the table\n\t */\n\tpublic get lastRowIndex(): number { return; }\n\n\t/**\n\t * Returns a cell from the table\n\t *\n\t * @param row index of the row\n\t * @param column index of the column\n\t */\n\tgetCell(row: number, column: number): TableCellAdapter { return; }\n\n\t/**\n\t * Returns a row from the table\n\t *\n\t * @param column index of the column\n\t */\n\tgetColumn(column: number): TableCellAdapter[] { return; }\n\n\t/**\n\t * Returns a row from the table\n\t *\n\t * @param row index of the row\n\t */\n\tgetRow(row: number): TableRowAdapter { return; }\n\n\t/**\n\t * Finds the column index of a given cell\n\t *\n\t * @param cell the cell to search for\n\t */\n\tfindColumnIndex(cell: TableCellAdapter): number { return; }\n\n\t/**\n\t * Finds the row index of a given cell\n\t *\n\t * @param cell the cell to search for\n\t */\n\tfindRowIndex(cell: TableCellAdapter): number { return; }\n\n\t/**\n\t * Finds the row and column index of a given cell\n\t *\n\t * @param cell the cell to search for\n\t * @returns a tuple that follows the `[row, column]` convention\n\t */\n\tfindIndex(cell: TableCellAdapter): [number, number] { return; }\n}\n\nenum TableDomSpanDirection {\n\tcolSpan = \"colSpan\",\n\trowSpan = \"rowSpan\"\n}\n\n/**\n * A concrete implementation of `TableAdapter`\n *\n * Provides standard and consistent access to table cells and rows\n */\nexport class TableDomAdapter implements TableAdapter {\n\t/**\n\t * The last accessible column in the table\n\t */\n\tpublic get lastColumnIndex() {\n\t\treturn this.getRealRowLength(this.tableElement.rows[0]);\n\t}\n\n\t/**\n\t * The last accessible row in the table\n\t */\n\tpublic get lastRowIndex() {\n\t\treturn this.tableElement.rows.length - 1;\n\t}\n\n\t/**\n\t * `TableDomAdapter` works on a normal HTML table structure.\n\t * Custom tables that don't follow the standard structure should use a custom implementation of `TableAdapter`.\n\t *\n\t * The standard structure allows us to directly query rows for cells and indexes - though we do have to handle colspans specially.\n\t *\n\t * @param tableElement the root HTML table element.\n\t */\n\tconstructor(public tableElement: HTMLTableElement) { }\n\n\t/**\n\t * Returns a cell from the table taking colspans in to account.\n\t *\n\t * @param row index of the row\n\t * @param column index of the column\n\t */\n\tgetCell(row: number, column: number): HTMLTableCellElement {\n\t\tconst col = this.getColumn(column);\n\n\t\treturn this.findCellInColumn(col, row).cell;\n\t}\n\n\t/**\n\t * Returns a column from the table, using the `id` and `headers` attributes\n\t *\n\t * See here for more detail these attributes: https://www.w3.org/TR/WCAG20-TECHS/H43.html\n\t *\n\t * @param column the index of the column\n\t */\n\tgetColumn(column: number): HTMLTableCellElement[] {\n\t\tconst firstHeader = Array.from(this.tableElement.rows[0].cells);\n\n\t\tconst { cell: header, realIndex: realColumnIndex } = this.findCellInRow(firstHeader, column);\n\n\t\tconst linkedCells: HTMLTableCellElement[] = [];\n\n\t\tfor (let i = 1; i < this.tableElement.rows.length; i++) {\n\t\t\tconst row = this.tableElement.rows[i];\n\t\t\t// query for any cells that are linked to the given header id\n\t\t\t// `~=` matches values in space separated lists - so `[headers~='foo']` would match `headers=\"foo bar\"` and `headers=\"foo\"`\n\t\t\t// but not `headers=\"bar\"` or `headers=\"bar baz\"`\n\t\t\tconst linkedRowCells: NodeListOf<HTMLTableCellElement> = row.querySelectorAll(`[headers~='${header.id}']`);\n\t\t\t// if we have more than one cell, get the one that is closest to the column\n\t\t\tif (linkedRowCells.length > 1) {\n\t\t\t\tconst { cell } = this.findCellInRow(Array.from(linkedRowCells), column - realColumnIndex);\n\t\t\t\tlinkedCells.push(cell);\n\t\t\t} else if (linkedRowCells[0]) {\n\t\t\t\tlinkedCells.push(linkedRowCells[0]);\n\t\t\t}\n\t\t}\n\n\t\t// return an empty array if we can't find any linked cells\n\t\t// returning anything else would be a lie\n\t\tif (!linkedCells) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [header, ...linkedCells];\n\t}\n\n\t/**\n\t * Returns a row from the table\n\t *\n\t * @param row index of the row\n\t */\n\tgetRow(row: number): HTMLTableRowElement {\n\t\treturn this.tableElement.rows[row];\n\t}\n\n\t/**\n\t * Finds the column index of a given cell\n\t *\n\t * @param cell the cell to search for\n\t */\n\tfindColumnIndex(cell: HTMLTableCellElement): number {\n\t\tconst row = this.getRow(this.findRowIndex(cell));\n\t\tif (!row) {\n\t\t\treturn;\n\t\t}\n\t\t// if the cell has linked headers we can do a more accurate lookup\n\t\tif (cell && cell.headers) {\n\t\t\tconst ids = cell.headers.split(\" \");\n\t\t\tconst headerRows = Array.from(this.tableElement.tHead.rows);\n\t\t\tconst indexes = [];\n\n\t\t\t// start from the last row and work up\n\t\t\tfor (const headerRow of headerRows.reverse()) {\n\t\t\t\tconst headerCells = Array.from(headerRow.cells);\n\t\t\t\tconst header = headerCells.find(headerCell => ids.includes(headerCell.id));\n\t\t\t\t// if we have a matching header, find it's index (adjusting for colspans)\n\t\t\t\tif (header) {\n\t\t\t\t\t// this is borrowed from below\n\t\t\t\t\tlet cellIndex = 0;\n\t\t\t\t\tfor (const c of headerCells) {\n\t\t\t\t\t\tif (c === header) { break; }\n\t\t\t\t\t\tcellIndex += c.colSpan;\n\t\t\t\t\t}\n\t\t\t\t\tindexes.push(cellIndex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// sort the indexes largest to smallest to find the closest matching header index\n\t\t\tconst firstIndex = indexes.sort((a, b) => b - a)[0];\n\n\t\t\t// search the row for cells that share the header\n\t\t\tlet similarCells = [];\n\t\t\tfor (const id of ids) {\n\t\t\t\t// there's no selector that will match two space separated lists,\n\t\t\t\t// so we have to iterate through the ids and query the row for each\n\t\t\t\tconst rowCells = Array.from(row.querySelectorAll(`[headers~='${id}']`));\n\t\t\t\tfor (const rowCell of rowCells) {\n\t\t\t\t\t// only keep one set of cells\n\t\t\t\t\tif (!similarCells.includes(rowCell)) {\n\t\t\t\t\t\tsimilarCells.push(rowCell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// DOM order is not preserved, so we have to sort the row\n\t\t\tsimilarCells = similarCells.sort((a: HTMLTableCellElement, b: HTMLTableCellElement) => a.cellIndex - b.cellIndex);\n\n\t\t\t// return the header index plus any adjustment within that headers column\n\t\t\treturn firstIndex + similarCells.indexOf(cell);\n\t\t}\n\n\t\t// fallback if the cell isn't linked to any headers\n\t\tlet cellIndex = 0;\n\t\tfor (const c of Array.from(row.cells)) {\n\t\t\tif (c === cell) { break; }\n\t\t\tcellIndex += c.colSpan;\n\t\t}\n\t\treturn cellIndex;\n\t}\n\n\t/**\n\t * Finds the row index of a given cell\n\t *\n\t * @param cell the cell to search for\n\t */\n\tfindRowIndex(cell: HTMLTableCellElement): number {\n\t\tfor (const row of Array.from(this.tableElement.rows)) {\n\t\t\tif (row.contains(cell)) {\n\t\t\t\treturn row.rowIndex;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Finds the row and column index of a given cell\n\t *\n\t * @param cell the cell to search for\n\t * @returns a tuple that follows the `[row, column]` convention\n\t */\n\tfindIndex(cell: HTMLTableCellElement): [number, number] {\n\t\treturn [this.findRowIndex(cell), this.findColumnIndex(cell)];\n\t}\n\n\t/**\n\t * Helper function that returns the \"real\" length of a row.\n\t * Only accurate with regard to colspans (though that's sufficient for it's uses here)\n\t *\n\t * TODO: Take rowSpan into account\n\t *\n\t * @param row the row to get the length of\n\t */\n\tprotected getRealRowLength(row: HTMLTableRowElement): number {\n\t\t// start at -1 since the colspans will sum to 1 index greater than the total\n\t\treturn Array.from(row.cells).reduce((count, cell) => count + cell.colSpan, -1);\n\t}\n\n\t/**\n\t * Finds a cell and it's real index given an array of cells, a target index, and the spanning direction\n\t *\n\t * @param cells An array of cells to search\n\t * @param targetIndex The index we think the cell is located at\n\t * @param spanDirection The direction of the cell spans. Should be `\"colSpan\"` for a row and `\"rowSpan\"` for a column\n\t */\n\tprotected findCell(cells: HTMLTableCellElement[], targetIndex: number, spanDirection: TableDomSpanDirection) {\n\t\t// rows/cols can have fewer total cells than the actual table\n\t\t// the model pretends all rows/cols behave the same (with col/row spans > 1 being N cells long)\n\t\t// this maps that view to the HTML view (col/row spans > 1 are one element, so the array is shorter)\n\t\tlet realIndex = 0;\n\t\t// i is only used for iterating the cells\n\t\tfor (let i = 0; i < targetIndex;) {\n\t\t\t// skip the next N cells\n\t\t\ti += cells[realIndex][spanDirection];\n\t\t\t// don't bump realIndex if i now exceeds the cell we're shooting for\n\t\t\tif (i > targetIndex) { break; }\n\t\t\t// finally, increment realIndex (to keep it generally in step with i)\n\t\t\trealIndex++;\n\t\t}\n\n\t\treturn {\n\t\t\tcell: cells[realIndex],\n\t\t\trealIndex\n\t\t};\n\t}\n\n\t/**\n\t * Helper method around `findCell`, searches based on a row of cells\n\t *\n\t * @param row the row of elements to search\n\t * @param index the index of the element\n\t */\n\tprotected findCellInRow(row: HTMLTableCellElement[], index: number) {\n\t\treturn this.findCell(row, index, TableDomSpanDirection.colSpan);\n\t}\n\n\t/**\n\t * Helper method around `findCell`, searches based on a column of cells\n\t *\n\t * @param col the column of elements to search\n\t * @param index the index of the element\n\t */\n\tprotected findCellInColumn(col: HTMLTableCellElement[], index: number) {\n\t\treturn this.findCell(col, index, TableDomSpanDirection.rowSpan);\n\t}\n}\n","import {\n\tComponent,\n\tApplicationRef,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tElementRef,\n\tAfterViewInit,\n\tTemplateRef,\n\tOnDestroy,\n\tHostBinding\n} from \"@angular/core\";\nimport { Subscription, fromEvent, Observable } from \"rxjs\";\n\nimport { TableModel } from \"./table-model.class\";\nimport { TableHeaderItem } from \"./table-header-item.class\";\nimport { TableItem } from \"./table-item.class\";\n\nimport { getFocusElementList, tabbableSelectorIgnoreTabIndex } from \"carbon-components-angular/common\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { merge } from \"carbon-components-angular/utils\";\nimport { DataGridInteractionModel } from \"./data-grid-interaction-model.class\";\nimport { TableDomAdapter } from \"./table-adapter.class\";\nimport { TableRowSize } from \"./table.types\";\n\n/**\n * Build your table with this component by extending things that differ from default.\n *\n * [See demo](../../?path=/story/table--basic)\n *\n * Instead of the usual write-your-own-html approach you had with `<table>`,\n * carbon table uses model-view-controller approach.\n *\n * Here, you create a view (with built-in controller) and provide it a model.\n * Changes you make to the model are reflected in the view. Provide same model you use\n * in the table to the `<ibm-pagination>` components.\n * They provide a different view over the same data.\n *\n * ## Basic usage\n *\n * ```html\n * <ibm-table [model]=\"model\"></ibm-table>\n * ```\n *\n * ```typescript\n * public model = new TableModel();\n *\n * this.model.data = [\n * \t[new TableItem({data: \"asdf\"}), new TableItem({data: \"qwer\"})],\n * \t[new TableItem({data: \"csdf\"}), new TableItem({data: \"zwer\"})],\n * \t[new TableItem({data: \"bsdf\"}), new TableItem({data: \"swer\"})],\n * \t[new TableItem({data: \"csdf\"}), new TableItem({data: \"twer\"})]\n * ];\n * ```\n *\n * ## Customization\n *\n * If you have custom data in your table, you need a way to display it. You can do that\n * by providing a template to `TableItem`.\n *\n * ```html\n * <ng-template #customTableItemTemplate let-data=\"data\">\n * \t<a [routerLink]=\"data.link\">{{data.name}} {{data.surname}}</a>\n * </ng-template>\n * ```\n *\n * ```typescript\n * customTableItemTemplate: TemplateRef<any>;\n *\n * this.customModel.data = [\n * \t[new TableItem({data: \"asdf\"}), new TableItem({data: {name: \"Lessy\", link: \"/table\"}, template: this.customTableItemTemplate})],\n * \t[new TableItem({data: \"csdf\"}), new TableItem({data: \"swer\"})],\n * \t[new TableItem({data: \"bsdf\"}), new TableItem({data: {name: \"Alice\", surname: \"Bob\"}, template: this.customTableItemTemplate})],\n * \t[new TableItem({data: \"csdf\"}), new TableItem({data: \"twer\"})],\n * ];\n * ```\n *\n * ### Sorting and filtering\n *\n * In case you need custom sorting and/or filtering you should subclass `TableHeaderItem`\n * and override needed functions.\n *\n * ```typescript\n * class FilterableHeaderItem extends TableHeaderItem {\n * \t// custom filter function\n * \tfilter(item: TableItem): boolean {\n * \t\tif (typeof item.data === \"string\" && item.data.toLowerCase().indexOf(this.filterData.data.toLowerCase()) >= 0 ||\n * \t\titem.data.name && item.data.name.toLowerCase().indexOf(this.filterData.data.toLowerCase()) >= 0 ||\n * \t\titem.data.surname && item.data.surname.toLowerCase().indexOf(this.filterData.data.toLowerCase()) >= 0) {\n * \t\t\treturn false;\n * \t\t}\n * \t\treturn true;\n * \t}\n *\n * \tset filterCount(n) {}\n * \tget filterCount() {\n * \t\treturn (this.filterData && this.filterData.data && this.filterData.data.length > 0) ? 1 : 0;\n * \t}\n *\n * \t// used for custom sorting\n * \tcompare(one: TableItem, two: TableItem) {\n * \t\tconst stringOne = (one.data.name || one.data.surname || one.data).toLowerCase();\n * \t\tconst stringTwo = (two.data.name || two.data.surname || two.data).toLowerCase();\n *\n * \t\tif (stringOne > stringTwo) {\n * \t\t\treturn 1;\n * \t\t} else if (stringOne < stringTwo) {\n * \t\t\treturn -1;\n * \t\t} else {\n * \t\t\treturn 0;\n * \t\t}\n * \t}\n * }\n * ```\n *\n * If you want to do your sorting on the backend or query for sorted data as a result of user\n * clicking the table header, check table [`sort`](#sort) output documentation\n *\n * See `TableHeaderItem` class for more information.\n *\n * ## No data template\n *\n * When table has no data to show, it can show a message you provide it instead.\n *\n * ```html\n * <ibm-table [model]=\"model\">No data.</ibm-table>\n * ```\n *\n * ... will show `No data.` message, but you can get creative and provide any template you want\n * to replace table's default `tbody`.\n *\n * ## Use pagination as table footer\n *\n * ```html\n * <ibm-pagination [model]=\"model\" (selectPage)=\"selectPage($event)\"></ibm-pagination>\n * ```\n *\n * `selectPage()` function should fetch the data from backend, create new `data`, apply it to `model.data`,\n * and update `model.currentPage`.\n *\n * If the data your server returns is a two dimensional array of objects, it would look something like this:\n *\n * ```typescript\n * selectPage(page) {\n * \tthis.getPage(page).then((data: Array<Array<any>>) => {\n * \t\t// set the data and update page\n * \t\tthis.model.data = this.prepareData(data);\n * \t\tthis.model.currentPage = page;\n * \t});\n * }\n *\n * protected prepareData(data: Array<Array<any>>) {\n * \t// create new data from the service data\n * \tlet newData = [];\n * \tdata.forEach(dataRow => {\n * \t\tlet row = [];\n * \t\tdataRow.forEach(dataElement => {\n * \t\t\trow.push(new TableItem({\n * \t\t\t\tdata: dataElement,\n * \t\t\t\ttemplate: typeof dataElement === \"string\" ? undefined : this.paginationTableItemTemplate\n * \t\t\t\t// your template can handle all the data types so you don't have to conditionally set it\n * \t\t\t\t// you can also set different templates for different columns based on index\n * \t\t\t}));\n * \t\t});\n * \t\tnewData.push(row);\n * \t});\n * \treturn newData;\n * }\n * ```\n *\n * <example-url>../../iframe.html?id=table--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-table\",\n\ttemplate: `\n\t<table\n\t\tibmTable\n\t\t[sortable]=\"sortable\"\n\t\t[noBorder]=\"noBorder\"\n\t\t[ngClass]=\"{'bx--data-table--sticky-header': stickyHeader}\"\n\t\t[size]=\"size\"\n\t\t[striped]=\"striped\"\n\t\t[skeleton]=\"skeleton\">\n\t\t<thead\n\t\t\tibmTableHead\n\t\t\t[sortable]=\"sortable\"\n\t\t\t(deselectAll)=\"onDeselectAll()\"\n\t\t\t(selectAll)=\"onSelectAll()\"\n\t\t\t(sort)=\"doSort($event)\"\n\t\t\t[checkboxHeaderLabel]=\"getCheckboxHeaderLabel()\"\n\t\t\t[filterTitle]=\"getFilterTitle()\"\n\t\t\t[model]=\"model\"\n\t\t\t[size]=\"size\"\n\t\t\t[selectAllCheckbox]=\"selectAllCheckbox\"\n\t\t\t[selectAllCheckboxSomeSelected]=\"selectAllCheckboxSomeSelected\"\n\t\t\t[showSelectionColumn]=\"showSelectionColumn\"\n\t\t\t[enableSingleSelect]=\"enableSingleSelect\"\n\t\t\t[skeleton]=\"skeleton\"\n\t\t\t[sortAscendingLabel]=\"sortAscendingLabel\"\n\t\t\t[sortDescendingLabel]=\"sortDescendingLabel\"\n\t\t\t[stickyHeader]=\"stickyHeader\">\n\t\t</thead>\n\t\t<tbody\n\t\t\tibmTableBody\n\t\t\t(deselectRow)=\"onSelectRow($event)\"\n\t\t\t(scroll)=\"onScroll($event)\"\n\t\t\t(selectRow)=\"onSelectRow($event)\"\n\t\t\t[checkboxRowLabel]=\"getCheckboxRowLabel()\"\n\t\t\t[enableSingleSelect]=\"enableSingleSelect\"\n\t\t\t(rowClick)=\"onRowClick($event)\"\n\t\t\t[expandButtonAriaLabel]=\"expandButtonAriaLabel\"\n\t\t\t[model]=\"model\"\n\t\t\t[size]=\"size\"\n\t\t\t[ngStyle]=\"{'overflow-y': 'scroll'}\"\n\t\t\t[selectionLabelColumn]=\"selectionLabelColumn\"\n\t\t\t[showSelectionColumn]=\"showSelectionColumn\"\n\t\t\t[skeleton]=\"skeleton\"\n\t\t\t*ngIf=\"!noData; else noDataTemplate\">\n\t\t</tbody>\n\t\t<ng-template #noDataTemplate><ng-content></ng-content></ng-template>\n\t\t<tfoot>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"footerTemplate\">\n\t\t\t</ng-template>\n\t\t\t<tr *ngIf=\"this.model.isLoading\">\n\t\t\t\t<td class=\"table_loading-indicator\">\n\t\t\t\t\t<div class=\"bx--loading bx--loading--small\">\n\t\t\t\t\t\t<svg class=\"bx--loading__svg\" viewBox=\"-75 -75 150 150\">\n\t\t\t\t\t\t\t<circle class=\"bx--loading__stroke\" cx=\"0\" cy=\"0\" r=\"37.5\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr *ngIf=\"this.model.isEnd\">\n\t\t\t\t<td class=\"table_end-indicator\">\n\t\t\t\t\t<h5>{{getEndOfDataText() | async}}</h5>\n\t\t\t\t\t<button (click)=\"scrollToTop($event)\" class=\"btn--secondary-sm\">\n\t\t\t\t\t\t{{getScrollTopText() | async}}\n\t\t\t\t\t</button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</tfoot>\n\t</table>\n\t`\n})\nexport class Table implements AfterViewInit, OnDestroy {\n\t/**\n\t * Creates a skeleton model with a row and column count specified by the user\n\t *\n\t * Example:\n\t *\n\t * ```typescript\n\t * this.model = Table.skeletonModel(5, 5);\n\t * ```\n\t */\n\tstatic skeletonModel(rowCount: number, columnCount: number) {\n\t\tconst model = new TableModel();\n\t\tlet header = new Array<TableHeaderItem>();\n\t\tlet data = new Array<Array<TableItem>>();\n\t\tlet row = new Array<TableItem>();\n\n\t\tfor (let i = 0; i < columnCount; i++) {\n\t\t\theader.push(new TableHeaderItem());\n\t\t\trow.push(new TableItem());\n\t\t}\n\t\tfor (let i = 0; i < rowCount - 1; i++) {\n\t\t\tdata.push(row);\n\t\t}\n\n\t\tmodel.header = header;\n\t\tmodel.data = data;\n\t\treturn model;\n\t}\n\n\tstatic setTabIndex(element: HTMLElement, index: -1 | 0) {\n\t\tconst focusElementList = getFocusElementList(element, tabbableSelectorIgnoreTabIndex);\n\t\tif (element.firstElementChild && element.firstElementChild.classList.contains(\"bx--table-sort\")) {\n\t\t\tfocusElementList[1].tabIndex = index;\n\t\t} else if (focusElementList.length > 0) {\n\t\t\tfocusElementList[0].tabIndex = index;\n\t\t} else {\n\t\t\telement.tabIndex = index;\n\t\t}\n\t}\n\n\tstatic focus(element: HTMLElement) {\n\t\tconst focusElementList = getFocusElementList(element, tabbableSelectorIgnoreTabIndex);\n\t\tif (element.firstElementChild && element.firstElementChild.classList.contains(\"bx--table-sort\") && focusElementList.length > 1) {\n\t\t\tfocusElementList[1].focus();\n\t\t} else if (focusElementList.length > 0) {\n\t\t\tfocusElementList[0].focus();\n\t\t} else {\n\t\t\telement.focus();\n\t\t}\n\t}\n\n\t/**\n\t * `TableModel` with data the table is to display.\n\t */\n\t@Input()\n\tset model(m: TableModel) {\n\t\tif (this._model) {\n\t\t\tthis.subscriptions.unsubscribe();\n\t\t\t// Need to create a new subscription instance here because unsubscribing prevents any new subscriptions\n\t\t\t// from being added for some reason. When a new model is set, none of the subscriptions would exist.\n\t\t\tthis.subscriptions = new Subscription();\n\t\t}\n\n\t\tthis._model = m;\n\n\t\tconst rowsChange = this._model.rowsSelectedChange.subscribe(() => this.updateSelectAllCheckbox());\n\t\tconst dataChange = this._model.dataChange.subscribe(() => {\n\t\t\tif (this.isDataGrid) {\n\t\t\t\tthis.resetTabIndex();\n\t\t\t}\n\t\t\tthis.updateSelectAllCheckbox();\n\t\t});\n\n\t\tthis.subscriptions.add(rowsChange);\n\t\tthis.subscriptions.add(dataChange);\n\n\t\tif (this.isDataGrid) {\n\t\t\tconst expandedChange = this._model.rowsExpandedChange.subscribe(() => {\n\t\t\t\t// Allows the expanded row to have a focus state when it exists in the DOM\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst expandedRows = this.elementRef.nativeElement.querySelectorAll(\".bx--expandable-row:not(.bx--parent-row)\");\n\t\t\t\t\tArray.from<any>(expandedRows).forEach(row => {\n\t\t\t\t\t\tif (row.firstElementChild.tabIndex === undefined || row.firstElementChild.tabIndex !== -1) {\n\t\t\t\t\t\t\trow.firstElementChild.tabIndex = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.subscriptions.add(expandedChange);\n\t\t}\n\t}\n\n\tget model(): TableModel {\n\t\treturn this._model;\n\t}\n\n\t/**\n\t * Size of the table rows.\n\t */\n\t@Input() size: TableRowSize = \"md\";\n\t/**\n\t * Set to `true` for a loading table.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Set to `true` for a data grid with keyboard interactions.\n\t */\n\t@Input() set isDataGrid(value: boolean) {\n\t\tthis._isDataGrid = value;\n\t\tif (this.isViewReady) {\n\t\t\tif (value) {\n\t\t\t\tthis.enableDataGridInteractions();\n\t\t\t} else {\n\t\t\t\tthis.disableDataGridInteractions();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Setting sortable to false will disable all headers including headers which are sortable. Is is\n\t * possible to set the sortable state on the header item to disable/enable sorting for only some headers.\n\t */\n\t@Input() sortable = true;\n\n\t@Input() noBorder = true;\n\n\tget isDataGrid(): boolean {\n\t\treturn this._isDataGrid;\n\t}\n\n\t/**\n\t * Controls whether to show the selection checkboxes column or not.\n\t */\n\t@Input() showSelectionColumn = true;\n\n\t/**\n\t * Controls whether to enable multiple or single row selection.\n\t */\n\t@Input() enableSingleSelect = false;\n\n\t/**\n\t * Distance (in px) from the bottom that view has to reach before\n\t * `scrollLoad` event is emitted.\n\t */\n\t@Input() scrollLoadDistance = 0;\n\n\t/**\n\t * Set to `true` to enable users to resize columns.\n\t *\n\t * Works for columns with width set in pixels.\n\t *\n\t */\n\t@Input() columnsResizable = false;\n\n\t/**\n\t * Set to `true` to enable users to drag and drop columns.\n\t *\n\t * Changing the column order in table changes table model. Be aware of it when you add additional data\n\t * to the model.\n\t *\n\t */\n\t@Input() columnsDraggable = false;\n\n\t@Input()\n\tset expandButtonAriaLabel(value: string | Observable<string>) {\n\t\tthis._expandButtonAriaLabel.override(value);\n\t}\n\tget expandButtonAriaLabel() {\n\t\treturn this._expandButtonAriaLabel.value;\n\t}\n\t@Input()\n\tset sortDescendingLabel(value: string | Observable<string>) {\n\t\tthis._sortDescendingLabel.override(value);\n\t}\n\tget sortDescendingLabel() {\n\t\treturn this._sortDescendingLabel.value;\n\t}\n\t@Input()\n\tset sortAscendingLabel(value: string | Observable<string>) {\n\t\tthis._sortAscendingLabel.override(value);\n\t}\n\tget sortAscendingLabel() {\n\t\treturn this._sortAscendingLabel.value;\n\t}\n\n\t/**\n\t * Expects an object that contains some or all of:\n\t * ```\n\t * {\n\t *\t\t\"FILTER\": \"Filter\",\n\t *\t\t\"END_OF_DATA\": \"You've reached the end of your content\",\n\t *\t\t\"SCROLL_TOP\": \"Scroll to top\",\n\t *\t\t\"CHECKBOX_HEADER\": \"Select all rows\",\n\t *\t\t\"CHECKBOX_ROW\": \"Select row\"\n\t * }\n\t * ```\n\t */\n\t@Input()\n\tset translations (value) {\n\t\tconst valueWithDefaults = merge(this.i18n.getMultiple(\"TABLE\"), value);\n\t\tthis._filterTitle.override(valueWithDefaults.FILTER);\n\t\tthis._endOfDataText.override(valueWithDefaults.END_OF_DATA);\n\t\tthis._scrollTopText.override(valueWithDefaults.SCROLL_TOP);\n\t\tthis._checkboxHeaderLabel.override(valueWithDefaults.CHECKBOX_HEADER);\n\t\tthis._checkboxRowLabel.override(valueWithDefaults.CHECKBOX_ROW);\n\t}\n\n\t/**\n\t * Set to `false` to remove table rows (zebra) stripes.\n\t */\n\t@Input() striped = true;\n\n\t/**\n\t * Set to `true` to stick the header to the top of the table\n\t */\n\t@HostBinding(\"class.bx--data-table_inner-container\") @Input() stickyHeader = false;\n\n\t/**\n\t * Set footer template to customize what is displayed in the tfoot section of the table\n\t */\n\t@Input() footerTemplate: TemplateRef<any>;\n\n\t/**\n\t * Used to populate the row selection checkbox label with a useful value if set.\n\t *\n\t * Example:\n\t * ```\n\t * <ibm-table [selectionLabelColumn]=\"0\"></ibm-table>\n\t * <!-- results in aria-label=\"Select first column value\"\n\t * (where \"first column value\" is the value of the first column in the row -->\n\t * ```\n\t */\n\t@Input() selectionLabelColumn: number;\n\n\t/**\n\t * Emits an index of the column that wants to be sorted.\n\t *\n\t * If no observers are provided (default), table will attempt to do a simple sort of the data loaded\n\t * into the model.\n\t *\n\t * If an observer is provided, table will not attempt any sorting of its own and it is up to the observer\n\t * to sort the table. This is what you typically want if you're using a backend query to get the sorted\n\t * data or want to sort data across multiple pages.\n\t *\n\t * Usage:\n\t *\n\t * ```typescript\n\t * @Component({\n\t * \tselector: \"app-table\",\n\t * \ttemplate: `\n\t * \t\t<ibm-table\n\t * \t\t\t[model]=\"model\"\n\t * \t\t\t(sort)=\"simpleSort($event)\">\n\t * \t\t\tNo data.\n\t * \t\t</ibm-table>\n\t * \t`\n\t * })\n\t * export class TableApp implements OnInit, OnChanges {\n\t * \t@Input() model = new TableModel();\n\t *\n\t * \tngOnInit() {\n\t * \t\tthis.model.header = [\n\t * \t\t\tnew TableHeaderItem({ data: \"Name\" }),\n\t * \t\t\tnew TableHeaderItem({ data: \"hwer\" })\n\t * \t\t];\n\t *\n\t * \t\tthis.model.data = [\n\t * \t\t\t[new TableItem({ data: \"Name 1\" }), new TableItem({ data: \"qwer\" })],\n\t * \t\t\t[new TableItem({ data: \"Name 3\" }), new TableItem({ data: \"zwer\" })],\n\t * \t\t\t[new TableItem({ data: \"Name 2\" }), new TableItem({ data: \"swer\" })],\n\t * \t\t\t[new TableItem({ data: \"Name 4\" }), new TableItem({data: \"twer\"})],\n\t * \t\t\t[new TableItem({ data: \"Name 5\" }), new TableItem({data: \"twer\"})],\n\t * \t\t\t[new TableItem({ data: \"Name 6\" }), new TableItem({data: \"twer\"})]\n\t * \t\t];\n\t * \t}\n\t *\n\t * \tsimpleSort(index: number) {\n\t * \t\t// this function does a simple sort, which is the default for the table and if that's\n\t * \t\t// all you want, you don't need to do this.\n\t *\n\t * \t\t// here you can query your backend and update the model.data based on the result\n\t * \t\tif (this.model.header[index].sorted) {\n\t * \t\t\t// if already sorted flip sorting direction\n\t * \t\t\tthis.model.header[index].ascending = this.model.header[index].descending;\n\t * \t\t}\n\t * \t\tthis.model.sort(index);\n\t * \t}\n\t * }\n\t * ```\n\t */\n\t@Output() sort = new EventEmitter<number>();\n\n\t/**\n\t * Emits if all rows are selected.\n\t *\n\t * @param model\n\t */\n\t@Output() selectAll = new EventEmitter<Object>();\n\n\t/**\n\t * Emits if all rows are deselected.\n\t *\n\t * @param model\n\t */\n\t@Output() deselectAll = new EventEmitter<Object>();\n\n\t/**\n\t * Emits if a single row is selected.\n\t *\n\t * @param ({model: this.model, selectedRowIndex: index})\n\t */\n\t@Output() selectRow = new EventEmitter<Object>();\n\n\t/**\n\t * Emits if a single row is deselected.\n\t *\n\t * @param ({model: this.model, deselectedRowIndex: index})\n\t */\n\t@Output() deselectRow = new EventEmitter<Object>();\n\n\t/**\n\t * Emits if a row item excluding expandButtons, checkboxes, or radios is clicked.\n\t */\n\t@Output() rowClick = new EventEmitter<number>();\n\n\t/**\n\t * Emits when table requires more data to be loaded.\n\t */\n\t@Output() scrollLoad = new EventEmitter<TableModel>();\n\n\t/**\n\t * Controls if all checkboxes are viewed as selected.\n\t */\n\tselectAllCheckbox = false;\n\n\t/**\n\t * Controls the indeterminate state of the header checkbox.\n\t */\n\tselectAllCheckboxSomeSelected = false;\n\n\tget noData() {\n\t\treturn !this.model.data ||\n\t\t\tthis.model.data.length === 0 ||\n\t\t\tthis.model.data.length === 1 && this.model.data[0].length === 0;\n\t}\n\n\tpublic isColumnDragging = false;\n\tpublic columnDraggedHoverIndex = -1;\n\tpublic columnDraggedPosition = \"\";\n\n\tprotected _model: TableModel;\n\tprotected _isDataGrid = false;\n\t// flag to prevent getters/setters from querying the view before it's fully instantiated\n\tprotected isViewReady = false;\n\n\tprotected subscriptions = new Subscription();\n\tprotected positionSubscription: Subscription;\n\n\tprotected interactionModel: DataGridInteractionModel;\n\tprotected interactionPositionSubscription: Subscription;\n\n\tprotected _expandButtonAriaLabel  = this.i18n.getOverridable(\"TABLE.EXPAND_BUTTON\");\n\tprotected _sortDescendingLabel = this.i18n.getOverridable(\"TABLE.SORT_DESCENDING\");\n\tprotected _sortAscendingLabel = this.i18n.getOverridable(\"TABLE.SORT_ASCENDING\");\n\tprotected _checkboxHeaderLabel = this.i18n.getOverridable(\"TABLE.CHECKBOX_HEADER\");\n\tprotected _checkboxRowLabel = this.i18n.getOverridable(\"TABLE.CHECKBOX_ROW\");\n\tprotected _endOfDataText = this.i18n.getOverridable(\"TABLE.END_OF_DATA\");\n\tprotected _scrollTopText = this.i18n.getOverridable(\"TABLE.SCROLL_TOP\");\n\tprotected _filterTitle = this.i18n.getOverridable(\"TABLE.FILTER\");\n\n\tprotected columnResizeWidth: number;\n\tprotected columnResizeMouseX: number;\n\tprotected mouseMoveSubscription: Subscription;\n\tprotected mouseUpSubscription: Subscription;\n\n\t/**\n\t * Creates an instance of Table.\n\t */\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected applicationRef: ApplicationRef,\n\t\tprotected i18n: I18n\n\t) {}\n\n\tngAfterViewInit() {\n\t\tthis.isViewReady = true;\n\t\tif (this.isDataGrid) {\n\t\t\tthis.enableDataGridInteractions();\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.subscriptions.unsubscribe();\n\t\tif (this.positionSubscription) {\n\t\t\tthis.positionSubscription.unsubscribe();\n\t\t}\n\t}\n\n\tenableDataGridInteractions() {\n\t\t// if we have an `interactioModel` we've already enabled datagrid\n\t\tif (this.interactionModel) {\n\t\t\treturn;\n\t\t}\n\t\tconst table = this.elementRef.nativeElement.querySelector(\"table\") as HTMLTableElement;\n\t\tconst tableAdapter = new TableDomAdapter(table);\n\t\tconst keydownEventStream = fromEvent<KeyboardEvent>(table, \"keydown\");\n\t\tconst clickEventStream = fromEvent<MouseEvent>(table, \"click\");\n\t\tthis.interactionModel = new DataGridInteractionModel(keydownEventStream, clickEventStream, tableAdapter);\n\t\tthis.positionSubscription = this.interactionModel.position.subscribe(event => {\n\t\t\tconst [currentRow, currentColumn] = event.current;\n\t\t\tconst [previousRow, previousColumn] = event.previous;\n\n\t\t\tconst currentElement = tableAdapter.getCell(currentRow, currentColumn);\n\t\t\tTable.setTabIndex(currentElement, 0);\n\n\t\t\t// if the model has just initialized don't focus or reset anything\n\t\t\tif (previousRow === -1 || previousColumn === -1) { return; }\n\t\t\t// Make the previous cell unfocusable (if it's not the current)\n\t\t\tif (previousRow !== currentRow || previousColumn !== currentColumn) {\n\t\t\t\tconst previousElement = tableAdapter.getCell(previousRow, previousColumn);\n\t\t\t\tTable.setTabIndex(previousElement, -1);\n\t\t\t}\n\t\t\tTable.focus(currentElement);\n\t\t});\n\t\t// call this after assigning `this.interactionModel` since it depends on it\n\t\tthis.resetTabIndex();\n\t}\n\n\tdisableDataGridInteractions() {\n\t\t// unsubscribe first so we don't cause the focus to fly around\n\t\tif (this.positionSubscription) {\n\t\t\tthis.positionSubscription.unsubscribe();\n\t\t}\n\t\t// undo tab indexing (also resets the model)\n\t\tthis.resetTabIndex(0);\n\t\t// null out the model ref\n\t\tthis.interactionModel = null;\n\t}\n\n\tonSelectAll() {\n\t\tthis.model.selectAll(true);\n\t\tthis.selectAll.emit(this.model);\n\t}\n\n\tonDeselectAll() {\n\t\tthis.model.selectAll(false);\n\t\tthis.deselectAll.emit(this.model);\n\t}\n\n\tonSelectRow(event) {\n\t\t// check for the existence of the selectedRowIndex property\n\t\tif (Object.keys(event).includes(\"selectedRowIndex\")) {\n\t\t\tif (this.enableSingleSelect) {\n\t\t\t\tthis.model.selectAll(false);\n\t\t\t}\n\t\t\tthis.model.selectRow(event.selectedRowIndex, true);\n\t\t\tthis.selectRow.emit(event);\n\t\t} else {\n\t\t\tthis.model.selectRow(event.deselectedRowIndex, false);\n\t\t\tthis.deselectRow.emit(event);\n\t\t}\n\t}\n\n\tonRowClick(index: number) {\n\t\tthis.rowClick.emit(index);\n\t}\n\n\tupdateSelectAllCheckbox() {\n\t\tconst selectedRowsCount = this.model.selectedRowsCount();\n\n\t\tif (selectedRowsCount <= 0) {\n\t\t\t// reset select all checkbox if nothing selected\n\t\t\tthis.selectAllCheckbox = false;\n\t\t\tthis.selectAllCheckboxSomeSelected = false;\n\t\t} else if (selectedRowsCount < this.model.data.length) {\n\t\t\tthis.selectAllCheckbox = true;\n\t\t\tthis.selectAllCheckboxSomeSelected = true;\n\t\t} else {\n\t\t\tthis.selectAllCheckbox = true;\n\t\t\tthis.selectAllCheckboxSomeSelected = false;\n\t\t}\n\t}\n\n\tresetTabIndex(newTabIndex = -1) {\n\t\t// ensure the view is ready for the reset before we preform the actual reset\n\t\tsetTimeout(() => {\n\t\t\t// reset all the tabIndexes we can find\n\t\t\tconst focusElementList = getFocusElementList(this.elementRef.nativeElement, tabbableSelectorIgnoreTabIndex);\n\t\t\tif (focusElementList) {\n\t\t\t\tfocusElementList.forEach(tabbable => {\n\t\t\t\t\ttabbable.tabIndex = newTabIndex;\n\t\t\t\t});\n\t\t\t}\n\t\t\t// reset interaction model positions and tabIndexes\n\t\t\tif (this.interactionModel) {\n\t\t\t\tthis.interactionModel.resetTabIndexes(newTabIndex);\n\t\t\t}\n\t\t});\n\t}\n\n\tcolumnResizeStart(event, column) {\n\t\tthis.columnResizeWidth = parseInt(column.style.width, 10);\n\t\tthis.columnResizeMouseX = event.clientX;\n\t\tevent.preventDefault();\n\n\t\tthis.mouseMoveSubscription = fromEvent(document.body, \"mousemove\").subscribe(event => {\n\t\t\tthis.columnResizeProgress(event, column);\n\t\t});\n\t\tthis.mouseUpSubscription = fromEvent(document.body, \"mouseup\").subscribe(event => {\n\t\t\tthis.columnResizeEnd(event, column);\n\t\t});\n\t}\n\n\tcolumnResizeProgress(event, column) {\n\t\tconst move = event.clientX - this.columnResizeMouseX;\n\t\tcolumn.style.width = `${this.columnResizeWidth + move}px`;\n\t}\n\n\tcolumnResizeEnd(event, column) {\n\t\tthis.mouseMoveSubscription.unsubscribe();\n\t\tthis.mouseUpSubscription.unsubscribe();\n\t}\n\n\t/**\n\t * Triggered when the user scrolls on the `<tbody>` element.\n\t * Emits the `scrollLoad` event.\n\t */\n\tonScroll(event) {\n\t\tconst distanceFromBottom = event.target.scrollHeight - event.target.clientHeight - event.target.scrollTop;\n\n\t\tif (distanceFromBottom <= this.scrollLoadDistance) {\n\t\t\tthis.scrollLoad.emit(this.model);\n\t\t} else {\n\t\t\tthis.model.isEnd = false;\n\t\t}\n\t}\n\n\tcolumnDragStart(event, columnIndex) {\n\t\tthis.isColumnDragging = true;\n\t\tthis.columnDraggedHoverIndex = columnIndex;\n\t\tevent.dataTransfer.setData(\"columnIndex\", JSON.stringify(columnIndex));\n\t}\n\n\tcolumnDragEnd(event, columnIndex) {\n\t\tthis.isColumnDragging = false;\n\t\tthis.columnDraggedHoverIndex = -1;\n\t}\n\n\tcolumnDragEnter(event, position, columnIndex) {\n\t\tthis.columnDraggedPosition = position;\n\t\tthis.columnDraggedHoverIndex = columnIndex;\n\t}\n\n\tcolumnDragLeave(event, position, columnIndex) {\n\t\tthis.columnDraggedPosition = \"\";\n\t}\n\n\tcolumnDragover(event, position, columnIndex) {\n\t\tthis.columnDraggedHoverIndex = columnIndex;\n\t\tthis.columnDraggedPosition = position;\n\n\t\t// needed to tell browser to allow dropping\n\t\tevent.preventDefault();\n\t}\n\n\tcolumnDrop(event, position, columnIndex) {\n\t\tthis.isColumnDragging = false;\n\t\tthis.columnDraggedHoverIndex = -1;\n\t\tthis.columnDraggedPosition = \"\";\n\n\t\tthis.model.moveColumn(\n\t\t\tparseInt(event.dataTransfer.getData(\"columnIndex\"), 10),\n\t\t\tcolumnIndex + (position === \"right\" ? 1 : 0)\n\t\t);\n\t}\n\n\tdoSort(index: number) {\n\t\tif (this.sort.observers.length === 0) {\n\t\t\t// no sort provided so do the simple sort\n\t\t\tif (this.model.header[index].sorted) {\n\t\t\t\t// if already sorted flip sorting direction\n\t\t\t\tthis.model.header[index].ascending = this.model.header[index].descending;\n\t\t\t}\n\t\t\tthis.model.sort(index);\n\t\t}\n\n\t\tthis.sort.emit(index);\n\t}\n\n\t/**\n\t * Triggered when the user scrolls on the `<tbody>` element.\n\t * Emits the `scrollLoad` event.\n\t */\n\tscrollToTop(event) {\n\t\tevent.target.parentElement.parentElement.parentElement.parentElement.children[1].scrollTop = 0;\n\t\tthis.model.isEnd = false;\n\t}\n\n\tgetSelectionLabelValue(row: TableItem[]) {\n\t\tif (!this.selectionLabelColumn) {\n\t\t\treturn { value: this.i18n.get().TABLE.ROW };\n\t\t}\n\t\treturn { value: row[this.selectionLabelColumn].data };\n\t}\n\n\tgetExpandButtonAriaLabel() {\n\t\treturn this._expandButtonAriaLabel.subject;\n\t}\n\tgetSortDescendingLabel() {\n\t\treturn this._sortDescendingLabel.subject;\n\t}\n\tgetSortAscendingLabel() {\n\t\treturn this._sortAscendingLabel.subject;\n\t}\n\n\tgetCheckboxHeaderLabel() {\n\t\treturn this._checkboxHeaderLabel.subject;\n\t}\n\n\tgetCheckboxRowLabel() {\n\t\treturn this._checkboxRowLabel.subject;\n\t}\n\n\tgetEndOfDataText() {\n\t\treturn this._endOfDataText.subject;\n\t}\n\n\tgetScrollTopText() {\n\t\treturn this._scrollTopText.subject;\n\t}\n\n\tgetFilterTitle() {\n\t\treturn this._filterTitle.subject;\n\t}\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\nimport { TableRowSize } from \"./table.types\";\n\n@Directive({\n\tselector: \"[ibmTable]\"\n})\nexport class TableDirective {\n\t@Input() @HostBinding(\"class.bx--data-table--sort\") sortable = true;\n\n\t@Input() @HostBinding(\"class.bx--data-table--no-border\") noBorder = true;\n\n\t@Input() @HostBinding(\"class.bx--data-table--zebra\") striped = false;\n\n\t@Input() @HostBinding(\"class.bx--skeleton\") skeleton = false;\n\n\t/**\n\t * Size of the table rows.\n\t */\n\t@Input() size: TableRowSize = \"md\";\n\n\t@HostBinding(\"class.bx--data-table\") tableClass = true;\n\n\t@HostBinding(\"class.bx--data-table--compact\") get compactClass() {\n\t\treturn this.size === \"sm\";\n\t}\n\n\t@HostBinding(\"class.bx--data-table--tall\") get tallClass() {\n\t\treturn this.size === \"lg\";\n\t}\n\n\t@HostBinding(\"class.bx--data-table--short\") get shortClass() {\n\t\treturn this.size === \"sh\";\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { TableModel } from \"../table-model.class\";\nimport { getScrollbarWidth } from \"carbon-components-angular/utils\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { Observable } from \"rxjs\";\nimport { TableRowSize } from \"../table.types\";\n\n/**\n * A subcomponent that creates the thead of the table\n *\n * ## Basic usage\n *\n * ```html\n * \t<thead ibmTableHead [model]=\"model\"></thead>\n * ```\n */\n@Component({\n\t// tslint:disable-next-line:component-selector\n\tselector: \"[ibmTableHead]\",\n\ttemplate: `\n\t<ng-container *ngIf=\"model\">\n\t\t<tr>\n\t\t\t<th\n\t\t\t\tibmTableHeadExpand\n\t\t\t\t*ngIf=\"model.hasExpandableRows()\"\n\t\t\t\tscope=\"col\"\n\t\t\t\t[ngClass]=\"{'bx--table-expand-v2': stickyHeader}\"\n\t\t\t\t[id]=\"model.getId('expand')\">\n\t\t\t</th>\n\t\t\t<th\n\t\t\t\t*ngIf=\"!skeleton && showSelectionColumn && enableSingleSelect\"\n\t\t\t\tscope=\"col\"\n\t\t\t\tstyle=\"width: 0;\"\n\t\t\t\t[id]=\"model.getId('select')\">\n\t\t\t\t<!-- add width 0; since the carbon styles don't seem to constrain this headers width -->\n\t\t\t</th>\n\t\t\t<th\n\t\t\t\tibmTableHeadCheckbox\n\t\t\t\t*ngIf=\"!skeleton && showSelectionColumn && !enableSingleSelect\"\n\t\t\t\tscope=\"col\"\n\t\t\t\t[checked]=\"selectAllCheckbox\"\n\t\t\t\t[indeterminate]=\"selectAllCheckboxSomeSelected\"\n\t\t\t\t[ariaLabel]=\"getCheckboxHeaderLabel()\"\n\t\t\t\t[size]=\"size\"\n\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t[name]=\"model.getHeaderId('select')\"\n\t\t\t\t(change)=\"onSelectAllCheckboxChange()\"\n\t\t\t\t[id]=\"model.getId('select')\">\n\t\t\t</th>\n\t\t\t<ng-container *ngFor=\"let column of model.header; let i = index\">\n\t\t\t\t<th\n\t\t\t\t\t*ngIf=\"column && column.visible\"\n\t\t\t\t\t[ngStyle]=\"column.style\"\n\t\t\t\t\tibmTableHeadCell\n\t\t\t\t\tscope=\"col\"\n\t\t\t\t\t[class]=\"column.className\"\n\t\t\t\t\t[sortable]=\"sortable\"\n\t\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t\t[id]=\"model.getId(i)\"\n\t\t\t\t\t[column]=\"column\"\n\t\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t\t[filterTitle]=\"getFilterTitle()\"\n\t\t\t\t\t[attr.colspan]=\"column.colSpan\"\n\t\t\t\t\t[attr.rowspan]=\"column.rowSpan\"\n\t\t\t\t\t(sort)=\"sort.emit(i)\">\n\t\t\t\t</th>\n\t\t\t</ng-container>\n\t\t\t<th *ngIf=\"!skeleton && stickyHeader && scrollbarWidth\"\n\t\t\t\tscope=\"col\"\n\t\t\t\t[ngStyle]=\"{'width': scrollbarWidth + 'px', 'padding': 0, 'border': 0}\">\n\t\t\t\t<!--\n\t\t\t\t\tScrollbar pushes body to the left so this header column is added to push\n\t\t\t\t\tthe title bar the same amount and keep the header and body columns aligned.\n\t\t\t\t-->\n\t\t\t</th>\n\t\t</tr>\n\t</ng-container>\n\t<ng-content></ng-content>\n\t`,\n\tstyles: [`\n\t\t.bx--table-expand-v2 {\n\t\t\tpadding-left: 2.5rem;\n\t\t}\n\t`]\n})\nexport class TableHead implements AfterViewInit {\n\t@Input() model: TableModel;\n\n\t@Input() showSelectionColumn = true;\n\n\t@Input() enableSingleSelect = false;\n\n\t@Input() selectAllCheckboxSomeSelected = false;\n\n\t@Input() selectAllCheckbox = false;\n\n\t@Input() skeleton = false;\n\n\t@Input() stickyHeader = false;\n\n\t/**\n\t * Setting sortable to false will disable all headers including headers which are sortable. Is is\n\t * possible to set the sortable state on the header item to disable/enable sorting for only some headers.\n\t */\n\t@Input() sortable = true;\n\n\t/**\n\t * Size of the table rows.\n\t */\n\t@Input() size: TableRowSize = \"md\";\n\n\t@Input()\n\tset checkboxHeaderLabel(value: string | Observable<string>) {\n\t\tthis._checkboxHeaderLabel.override(value);\n\t}\n\n\tget checkboxHeaderLabel() {\n\t\treturn this._checkboxHeaderLabel.value;\n\t}\n\n\t@Input()\n\tset sortDescendingLabel(value: string | Observable<string>) {\n\t\tthis._sortDescendingLabel.override(value);\n\t}\n\n\tget sortDescendingLabel() {\n\t\treturn this._sortDescendingLabel.value;\n\t}\n\n\t@Input()\n\tset sortAscendingLabel(value: string | Observable<string>) {\n\t\tthis._sortAscendingLabel.override(value);\n\t}\n\n\tget sortAscendingLabel() {\n\t\treturn this._sortAscendingLabel.value;\n\t}\n\n\t@Input()\n\tset filterTitle(value: string | Observable<string>) {\n\t\tthis._filterTitle.override(value);\n\t}\n\n\tget filterTitle() {\n\t\treturn this._filterTitle.value;\n\t}\n\n\t/**\n\t * Emits an index of the column that wants to be sorted.\n\t */\n\t@Output() sort = new EventEmitter<number>();\n\t/**\n\t * Emits if all rows are selected.\n\t *\n\t * @param model\n\t */\n\t@Output() selectAll = new EventEmitter<TableModel>();\n\t/**\n\t * Emits if all rows are deselected.\n\t *\n\t * @param model\n\t */\n\t@Output() deselectAll = new EventEmitter<TableModel>();\n\n\tpublic scrollbarWidth = 0;\n\n\tprotected _checkboxHeaderLabel = this.i18n.getOverridable(\"TABLE.CHECKBOX_HEADER\");\n\tprotected _sortDescendingLabel = this.i18n.getOverridable(\"TABLE.SORT_DESCENDING\");\n\tprotected _sortAscendingLabel = this.i18n.getOverridable(\"TABLE.SORT_ASCENDING\");\n\tprotected _filterTitle = this.i18n.getOverridable(\"TABLE.FILTER\");\n\n\tconstructor(protected i18n: I18n) {}\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\t\t\tthis.scrollbarWidth = getScrollbarWidth();\n\t\t});\n\t}\n\n\tonSelectAllCheckboxChange() {\n\t\tif (!this.selectAllCheckbox && !this.selectAllCheckboxSomeSelected) {\n\t\t\tthis.selectAll.emit(this.model);\n\t\t} else {\n\t\t\tthis.deselectAll.emit(this.model);\n\t\t}\n\t}\n\n\tgetCheckboxHeaderLabel(): Observable<string> {\n\t\treturn this._checkboxHeaderLabel.subject;\n\t}\n\n\tgetSortDescendingLabel(): Observable<string> {\n\t\treturn this._sortDescendingLabel.subject;\n\t}\n\n\tgetSortAscendingLabel(): Observable<string> {\n\t\treturn this._sortAscendingLabel.subject;\n\t}\n\n\tgetFilterTitle(): Observable<string> {\n\t\treturn this._filterTitle.subject;\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tHostBinding,\n\tOnChanges\n} from \"@angular/core\";\nimport { Observable, OperatorFunction } from \"rxjs\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { map } from \"rxjs/operators\";\nimport { TableHeaderItem } from \"../table-header-item.class\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableHeadCell]\",\n\ttemplate: `\n\t\t<button\n\t\t\tclass=\"bx--table-sort\"\n\t\t\t*ngIf=\"sortable && this.sort.observers.length > 0 && column.sortable\"\n\t\t\t[attr.aria-label]=\"(column.sorted && column.ascending ? getSortDescendingLabel() : getSortAscendingLabel()) | async\"\n\t\t\taria-live=\"polite\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--table-sort--active': column.sorted,\n\t\t\t\t'bx--table-sort--ascending': column.ascending\n\t\t\t}\"\n\t\t\t(click)=\"onClick()\">\n\t\t\t<span\n\t\t\t\tclass=\"bx--table-sort__flex\"\n\t\t\t\t[title]=\"column.data\"\n\t\t\t\ttabindex=\"-1\">\n\t\t\t\t<div *ngIf=\"!skeleton && !column.template\" ibmTableHeadCellLabel>\n\t\t\t\t\t{{column.data}}\n\t\t\t\t</div>\n\t\t\t\t<ng-template\n\t\t\t\t\t*ngIf=\"!skeleton && column.template\"\n\t\t\t\t\t[ngTemplateOutlet]=\"column.template\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{data: column.data}\">\n\t\t\t\t</ng-template>\n\t\t\t\t<svg\n\t\t\t\t\t*ngIf=\"!skeleton\"\n\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t\tstyle=\"will-change: transform;\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tclass=\"bx--table-sort__icon\"\n\t\t\t\t\twidth=\"16\"\n\t\t\t\t\theight=\"16\"\n\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t<path d=\"M12.3 9.3l-3.8 3.8V1h-1v12.1L3.7 9.3 3 10l5 5 5-5z\"></path>\n\t\t\t\t</svg>\n\t\t\t\t<svg\n\t\t\t\t\t*ngIf=\"!skeleton\"\n\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t\tstyle=\"will-change: transform;\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tclass=\"bx--table-sort__icon-unsorted\"\n\t\t\t\t\twidth=\"16\"\n\t\t\t\t\theight=\"16\"\n\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t<path d=\"M13.8 10.3L12 12.1V2h-1v10.1l-1.8-1.8-.7.7 3 3 3-3zM4.5 2l-3 3 .7.7L4 3.9V14h1V3.9l1.8 1.8.7-.7z\"></path>\n\t\t\t\t</svg>\n\t\t\t</span>\n\t\t</button>\n\t\t<div\n\t\t\tclass=\"bx--table-header-label\"\n\t\t\t*ngIf=\"!skeleton && this.sort.observers.length === 0 || (this.sort.observers.length > 0 && !column.sortable) || !sortable\">\n\t\t\t<span *ngIf=\"!column.template\" [title]=\"column.data\">{{column.data}}</span>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"column.template\" [ngTemplateOutletContext]=\"{data: column.data}\">\n\t\t\t</ng-template>\n\t\t</div>\n\t\t<button\n\t\t\t[ngClass]=\"{'active': column.filterCount > 0}\"\n\t\t\t*ngIf=\"column.filterTemplate\"\n\t\t\ttype=\"button\"\n\t\t\taria-expanded=\"false\"\n\t\t\taria-haspopup=\"true\"\n\t\t\t[ibmTooltip]=\"column.filterTemplate\"\n\t\t\ttrigger=\"click\"\n\t\t\t[title]=\"getFilterTitle() | async\"\n\t\t\tplacement=\"bottom,top\"\n\t\t\t[data]=\"column.filterData\">\n\t\t\t<svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tclass=\"icon--sm\"\n\t\t\t\twidth=\"16\"\n\t\t\t\theight=\"16\"\n\t\t\t\tviewBox=\"0 0 16 16\">\n\t\t\t\t<path d=\"M0 0v3l6 8v5h4v-5l6-8V0H0zm9 10.7V15H7v-4.3L1.3 3h13.5L9 10.7z\"/>\n\t\t\t</svg>\n\t\t\t<span *ngIf=\"column.filterCount > 0\">\n\t\t\t\t{{column.filterCount}}\n\t\t\t</span>\n\t\t</button>\n\t`\n})\nexport class TableHeadCell implements OnChanges {\n\t@Input() column: TableHeaderItem;\n\n\t@Input() skeleton = false;\n\n\t@Input() sortable = true;\n\n\t@Input()\n\tset sortDescendingLabel(value: string | Observable<string>) {\n\t\tthis._sortDescendingLabel.override(value);\n\t}\n\n\tget sortDescendingLabel() {\n\t\treturn this._sortDescendingLabel.value;\n\t}\n\n\t@Input()\n\tset sortAscendingLabel(value: string | Observable<string>) {\n\t\tthis._sortAscendingLabel.override(value);\n\t}\n\n\tget sortAscendingLabel() {\n\t\treturn this._sortAscendingLabel.value;\n\t}\n\n\t@Input()\n\tset filterTitle(value: string | Observable<string>) {\n\t\tthis._filterTitle.override(value);\n\t}\n\n\tget filterTitle() {\n\t\treturn this._filterTitle.value;\n\t}\n\n\t/**\n\t * Notifies that the column should be sorted\n\t */\n\t@Output() sort = new EventEmitter();\n\n\t@HostBinding(\"class.thead_action\") theadAction = false;\n\n\tprotected _sortDescendingLabel = this.i18n.getOverridable(\"TABLE.SORT_DESCENDING\");\n\tprotected _sortAscendingLabel = this.i18n.getOverridable(\"TABLE.SORT_ASCENDING\");\n\tprotected _filterTitle = this.i18n.getOverridable(\"TABLE.FILTER\");\n\n\tconstructor(protected i18n: I18n) { }\n\n\tngOnChanges() {\n\t\t// Since it's not an input, and it touches the view, we're using `ngOnChanges`\n\t\t// `get`ters have caused issues in the past with the view updating outside of change detection\n\t\tthis.theadAction = !!this.column.filterTemplate || this.sort.observers.length > 0;\n\t}\n\n\tgetSortDescendingLabel(): Observable<string> {\n\t\treturn this._sortDescendingLabel.subject.pipe(this.sortLabelMap());\n\t}\n\n\tgetSortAscendingLabel(): Observable<string> {\n\t\treturn this._sortAscendingLabel.subject.pipe(this.sortLabelMap());\n\t}\n\n\tgetFilterTitle(): Observable<string> {\n\t\treturn this._filterTitle.subject;\n\t}\n\n\tonClick() {\n\t\tif (!this.skeleton) {\n\t\t\tthis.sort.emit();\n\t\t}\n\t}\n\n\tprotected sortLabelMap(): OperatorFunction<string, string> {\n\t\treturn map((str: string) => {\n\t\t\tif (this.column.ariaSortLabel) {\n\t\t\t\treturn this.column.ariaSortLabel;\n\t\t\t}\n\t\t\tif (this.column.formatSortLabel) {\n\t\t\t\treturn this.column.formatSortLabel(str, this.column.ariaSortLabel);\n\t\t\t}\n\t\t\treturn `${this.column.data} - ${str}`;\n\t\t});\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tHostBinding,\n\tEventEmitter\n} from \"@angular/core\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { Observable } from \"rxjs\";\nimport { TableRowSize } from \"../table.types\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableHeadCheckbox]\",\n\ttemplate: `\n\t\t<ibm-checkbox\n\t\t\t*ngIf=\"!skeleton\"\n\t\t\tinline=\"true\"\n\t\t\t[size]=\"(size !== 'sm' ? 'md' : 'sm')\"\n\t\t\t[name]=\"name\"\n\t\t\t[checked]=\"checked\"\n\t\t\t[indeterminate]=\"indeterminate\"\n\t\t\t(checkedChange)=\"change.emit()\"\n\t\t\t[aria-label]=\"getAriaLabel() | async\">\n\t\t</ibm-checkbox>\n\t`,\n\tstyles: [`\n        :host { width: 10px; }\n    `]\n})\nexport class TableHeadCheckbox {\n\tprivate static tableSelectAllCount = 0;\n\t/**\n\t * Size of the table rows.\n\t */\n\t@Input() size: TableRowSize = \"md\";\n\n\t@Input() checked = false;\n\n\t@Input() indeterminate = false;\n\n\t@Input() skeleton = false;\n\n\t@Input() name = `select-all-${TableHeadCheckbox.tableSelectAllCount++}`;\n\n\t@Input()\n\tset ariaLabel(value: string | Observable<string>) {\n\t\tthis._ariaLabel.override(value);\n\t}\n\n\tget ariaLabel() {\n\t\treturn this._ariaLabel.value;\n\t}\n\n\t@Output() change = new EventEmitter<void>();\n\n\t@HostBinding(\"class.bx--table-column-checkbox\") hostClass = true;\n\n\tprotected _ariaLabel = this.i18n.getOverridable(\"TABLE.CHECKBOX_HEADER\");\n\n\tconstructor(protected i18n: I18n) { }\n\n\tgetAriaLabel(): Observable<string> {\n\t\treturn this._ariaLabel.subject;\n\t}\n}\n","import {\n\tComponent,\n\tHostBinding\n} from \"@angular/core\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableHeadExpand]\",\n\ttemplate: `\n\t\t<ng-content></ng-content>\n\t`\n})\nexport class TableHeadExpand {\n\t@HostBinding(\"class.bx--table-expand\") hostClass = true;\n}\n","import {\n\tComponent,\n\tInput,\n\tEventEmitter,\n\tOutput\n} from \"@angular/core\";\nimport { TableModel } from \"../table-model.class\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { Observable } from \"rxjs\";\nimport { TableRowSize } from \"../table.types\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableBody]\",\n\ttemplate: `\n\t\t<ng-container *ngIf=\"model\">\n\t\t\t<ng-container *ngFor=\"let row of model.data; let i = index\">\n\t\t\t\t<tr\n\t\t\t\t\tibmTableRow\n\t\t\t\t\t[model]=\"model\"\n\t\t\t\t\t[row]=\"row\"\n\t\t\t\t\t[size]=\"size\"\n\t\t\t\t\t[selected]=\"model.isRowSelected(i)\"\n\t\t\t\t\t[expandable]=\"model.isRowExpandable(i)\"\n\t\t\t\t\t[expanded]=\"model.isRowExpanded(i)\"\n\t\t\t\t\t[checkboxLabel]=\"getCheckboxRowLabel()\"\n\t\t\t\t\t[expandButtonAriaLabel]=\"getExpandButtonAriaLabel()\"\n\t\t\t\t\t[showSelectionColumn]=\"showSelectionColumn\"\n\t\t\t\t\t[enableSingleSelect]=\"enableSingleSelect\"\n\t\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t\t(selectRow)=\"onRowCheckboxChange(i)\"\n\t\t\t\t\t(deselectRow)=\"onRowCheckboxChange(i)\"\n\t\t\t\t\t(expandRow)=\"model.expandRow(i, !model.isRowExpanded(i))\"\n\t\t\t\t\t(rowClick)=\"onRowClick(i)\"\n\t\t\t\t\t*ngIf=\"!model.isRowFiltered(i)\"\n\t\t\t\t\t[class]=\"(model.rowsClass[i] ? model.rowsClass[i] : null)\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'tbody_row--success': !model.isRowSelected(i) && model.getRowContext(i) === 'success',\n\t\t\t\t\t\t'tbody_row--warning': !model.isRowSelected(i) && model.getRowContext(i) === 'warning',\n\t\t\t\t\t\t'tbody_row--info': !model.isRowSelected(i) && model.getRowContext(i) === 'info',\n\t\t\t\t\t\t'tbody_row--error': !model.isRowSelected(i) && model.getRowContext(i) === 'error'\n\t\t\t\t\t}\">\n\t\t\t\t</tr>\n\t\t\t\t<ng-container *ngIf=\"model.isRowExpanded(i) && !model.isRowFiltered(i)\">\n\t\t\t\t\t<tr\n\t\t\t\t\t\t*ngIf=\"!shouldExpandAsTable(row); else expandAsTableTemplate\"\n\t\t\t\t\t\tibmTableExpandedRow\n\t\t\t\t\t\tibmExpandedRowHover\n\t\t\t\t\t\t[row]=\"row\"\n\t\t\t\t\t\t[expanded]=\"model.isRowExpanded(i)\"\n\t\t\t\t\t\t[skeleton]=\"skeleton\">\n\t\t\t\t\t</tr>\n\t\t\t\t\t<ng-template #expandAsTableTemplate>\n\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\t*ngFor=\"let expandedDataRow of firstExpandedDataInRow(row)\"\n\t\t\t\t\t\t\tibmTableRow\n\t\t\t\t\t\t\t[model]=\"model\"\n\t\t\t\t\t\t\t[showSelectionColumnCheckbox]=\"false\"\n\t\t\t\t\t\t\t[showSelectionColumn]=\"showSelectionColumn\"\n\t\t\t\t\t\t\t[row]=\"expandedDataRow\"\n\t\t\t\t\t\t\t[size]=\"size\"\n\t\t\t\t\t\t\t[skeleton]=\"skeleton\">\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</ng-container>\n\t\t\t</ng-container>\n\t\t</ng-container>\n\t\t<ng-content></ng-content>\n\t`\n})\nexport class TableBody {\n\t@Input() model: TableModel;\n\n\t/**\n\t * Controls whether to enable multiple or single row selection.\n\t */\n\t@Input() enableSingleSelect = false;\n\n\t@Input()\n\tset expandButtonAriaLabel(value: string | Observable<string>) {\n\t\tthis._expandButtonAriaLabel.override(value);\n\t}\n\n\tget expandButtonAriaLabel() {\n\t\treturn this._expandButtonAriaLabel.value;\n\t}\n\n\t@Input()\n\tset checkboxRowLabel(value: string | Observable<string>) {\n\t\tthis._checkboxRowLabel.override(value);\n\t}\n\n\tget checkboxRowLabel() {\n\t\treturn this._checkboxRowLabel.value;\n\t}\n\n\t/**\n\t * Controls whether to show the selection checkboxes column or not.\n\t */\n\t@Input() showSelectionColumn = true;\n\n\t/**\n\t * Size of the table rows.\n\t */\n\t@Input() size: TableRowSize = \"md\";\n\n\t/**\n\t * Used to populate the row selection checkbox label with a useful value if set.\n\t *\n\t * Example:\n\t * ```\n\t * <ibm-table [selectionLabelColumn]=\"0\"></ibm-table>\n\t * <!-- results in aria-label=\"Select first column value\"\n\t * (where \"first column value\" is the value of the first column in the row -->\n\t * ```\n\t */\n\t@Input() selectionLabelColumn: number;\n\n\t@Input() skeleton = false;\n\n\t/**\n\t * Emits if a single row is selected.\n\t *\n\t * @param ({model: this.model, selectedRowIndex: index})\n\t */\n\t@Output() selectRow = new EventEmitter<Object>();\n\n\t/**\n\t * Emits if a single row is deselected.\n\t *\n\t * @param ({model: this.model, deselectedRowIndex: index})\n\t */\n\t@Output() deselectRow = new EventEmitter<Object>();\n\n\t/**\n\t * Emits if a row item excluding expandButtons, checkboxes, or radios is clicked.\n\t */\n\t@Output() rowClick = new EventEmitter<number>();\n\n\tprotected _checkboxRowLabel = this.i18n.getOverridable(\"TABLE.CHECKBOX_ROW\");\n\tprotected _expandButtonAriaLabel = this.i18n.getOverridable(\"TABLE.EXPAND_BUTTON\");\n\n\tconstructor(protected i18n: I18n) { }\n\n\t/**\n\t * Triggered when a single row is clicked.\n\t * Updates the header checkbox state.\n\t * Emits the `selectRow` or `deselectRow` event.\n\t */\n\tonRowCheckboxChange(index: number) {\n\t\tif (this.model.isRowSelected(index)) {\n\t\t\tthis.deselectRow.emit({ model: this.model, deselectedRowIndex: index });\n\t\t} else {\n\t\t\tthis.selectRow.emit({ model: this.model, selectedRowIndex: index });\n\t\t}\n\t}\n\n\tonRowClick(index: number) {\n\t\tthis.rowClick.emit(index);\n\t}\n\n\tgetCheckboxRowLabel(): Observable<string> {\n\t\treturn this._checkboxRowLabel.subject;\n\t}\n\n\tgetExpandButtonAriaLabel(): Observable<string> {\n\t\treturn this._expandButtonAriaLabel.subject;\n\t}\n\n\tfirstExpandedDataInRow(row) {\n\t\tconst found = row.find(d => d.expandedData);\n\t\tif (found) {\n\t\t\treturn found.expandedData;\n\t\t}\n\t\treturn found;\n\t}\n\n\tshouldExpandAsTable(row) {\n\t\treturn row.some(d => d.expandAsTable);\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tHostBinding,\n\tHostListener\n} from \"@angular/core\";\nimport { TableModel } from \"../table-model.class\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { TableItem } from \"../table-item.class\";\nimport { Observable } from \"rxjs\";\nimport { TableRowSize } from \"../table.types\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableRow]\",\n\ttemplate: `\n\t\t<ng-container *ngIf=\"model\">\n\t\t\t<td\n\t\t\t\t*ngIf=\"model.hasExpandableRows()\"\n\t\t\t\tibmTableExpandButton\n\t\t\t\tclass=\"bx--table-expand-v2\"\n\t\t\t\t[expanded]=\"expanded\"\n\t\t\t\t[expandable]=\"expandable\"\n\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t[ariaLabel]=\"getExpandButtonAriaLabel()\"\n\t\t\t\t[headers]=\"model.getHeaderId('expand')\"\n\t\t\t\t(expandRow)=\"expandRow.emit()\">\n\t\t\t</td>\n\t\t\t<ng-container *ngIf=\"!skeleton && showSelectionColumn && !enableSingleSelect\">\n\t\t\t\t<td\n\t\t\t\t\t*ngIf=\"!showSelectionColumnCheckbox; else tableCheckboxTemplate\">\n\t\t\t\t</td>\n\t\t\t\t<ng-template #tableCheckboxTemplate>\n\t\t\t\t\t<td\n\t\t\t\t\t\tibmTableCheckbox\n\t\t\t\t\t\tclass=\"bx--table-column-checkbox\"\n\t\t\t\t\t\t[size]=\"size\"\n\t\t\t\t\t\t[selected]=\"selected\"\n\t\t\t\t\t\t[label]=\"getCheckboxLabel()\"\n\t\t\t\t\t\t[row]=\"row\"\n\t\t\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t\t\t[headers]=\"model.getHeaderId('select')\"\n\t\t\t\t\t\t(change)=\"onSelectionChange()\">\n\t\t\t\t\t</td>\n\t\t\t\t</ng-template>\n\t\t\t</ng-container>\n\t\t\t<td\n\t\t\t\t*ngIf=\"!skeleton && showSelectionColumn && enableSingleSelect\"\n\t\t\t\tibmTableRadio\n\t\t\t\t[selected]=\"selected\"\n\t\t\t\t[label]=\"getCheckboxLabel()\"\n\t\t\t\t[row]=\"row\"\n\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t[headers]=\"model.getHeaderId('select')\"\n\t\t\t\t(change)=\"onSelectionChange()\">\n\t\t\t</td>\n\t\t\t<ng-container *ngFor=\"let item of row; let j = index\">\n\t\t\t\t<td\n\t\t\t\t\t*ngIf=\"item && model.getHeader(j) && model.getHeader(j).visible\"\n\t\t\t\t\tibmTableData\n\t\t\t\t\t[headers]=\"model.getHeaderId(j, item.colSpan)\"\n\t\t\t\t\t[item]=\"item\"\n\t\t\t\t\t[title]=\"item.title\"\n\t\t\t\t\t[class]=\"model.getHeader(j).className\"\n\t\t\t\t\t[ngStyle]=\"model.getHeader(j).style\"\n\t\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t\t[attr.colspan]=\"item.colSpan\"\n\t\t\t\t\t[attr.rowspan]=\"item.rowSpan\"\n\t\t\t\t\t(click)=\"onRowClick()\"\n\t\t\t\t\t(keydown.enter)=\"onRowClick()\">\n\t\t\t\t</td>\n\t\t\t\t<td\n\t\t\t\t\t*ngIf=\"item && model.getHeader(j) == null\"\n\t\t\t\t\tibmTableData\n\t\t\t\t\t[headers]=\"model.getHeaderId(j, item.colSpan)\"\n\t\t\t\t\t[item]=\"item\"\n\t\t\t\t\t[title]=\"item.title\"\n\t\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t\t[attr.colspan]=\"item.colSpan\"\n\t\t\t\t\t[attr.rowspan]=\"item.rowSpan\"\n\t\t\t\t\t(click)=\"onRowClick()\"\n\t\t\t\t\t(keydown.enter)=\"onRowClick()\">\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\t\t</ng-container>\n\t\t<ng-content></ng-content>\n\t`\n})\nexport class TableRowComponent {\n\t/**\n\t * `TableModel` with data the table is to display.\n\t */\n\t@Input() model: TableModel;\n\n\t@Input() row: TableItem[];\n\n\t@Input() expanded = false;\n\n\t@Input() expandable = false;\n\n\t@Input() selected = false;\n\n\t/**\n\t * Size of the table rows.\n\t */\n\t@Input() size: TableRowSize = \"md\";\n\n\t/**\n\t * Controls whether to enable multiple or single row selection.\n\t */\n\t@Input() enableSingleSelect = false;\n\n\t@Input()\n\tset expandButtonAriaLabel(value: string | Observable<string>) {\n\t\tthis._expandButtonAriaLabel.override(value);\n\t}\n\n\tget expandButtonAriaLabel() {\n\t\treturn this._expandButtonAriaLabel.value;\n\t}\n\n\t@Input()\n\tset checkboxLabel(value: string | Observable<string>) {\n\t\tthis._checkboxLabel.override(value);\n\t}\n\n\tget checkboxLabel() {\n\t\treturn this._checkboxLabel.value;\n\t}\n\n\t/**\n\t * Controls whether to show the selection checkboxes column or not.\n\t */\n\t@Input() showSelectionColumn = true;\n\n\t/**\n\t * Shows or hide the checkbox in the selection column when `showSelectionColumn`\n\t * is set to true\n\t */\n\t@Input() showSelectionColumnCheckbox = true;\n\n\t/**\n\t * Used to populate the row selection checkbox label with a useful value if set.\n\t *\n\t * Example:\n\t * ```\n\t * <ibm-table [selectionLabelColumn]=\"0\"></ibm-table>\n\t * <!-- results in aria-label=\"Select first column value\"\n\t * (where \"first column value\" is the value of the first column in the row -->\n\t * ```\n\t */\n\t@Input() selectionLabelColumn: number;\n\n\t@Input() skeleton = false;\n\n\t/**\n\t * Emits when the row is selected.\n\t */\n\t@Output() selectRow = new EventEmitter();\n\n\t/**\n\t * Emits when the row is deselected.\n\t */\n\t@Output() deselectRow = new EventEmitter();\n\n\t/**\n\t * Emits when the row is expanded\n\t */\n\t@Output() expandRow = new EventEmitter();\n\n\t/**\n\t * Emits when a row is clicked regardless of `enableSingleSelect` or `showSelectionColumn`.\n\t * Should only get emitted when a row item is selected excluding expand buttons,\n\t * checkboxes, or radios.\n\t */\n\t@Output() rowClick = new EventEmitter();\n\n\t@HostBinding(\"class.bx--data-table--selected\") get selectedClass() {\n\t\treturn this.selected;\n\t}\n\n\t@HostBinding(\"class.bx--parent-row\") get parentRowClass() {\n\t\treturn this.expandable;\n\t}\n\n\t@HostBinding(\"class.bx--expandable-row\") get expandableRowClass() {\n\t\treturn this.expanded;\n\t}\n\n\t@HostBinding(\"class.tbody_row--selectable\") get selectableClass() {\n\t\treturn false; // this.singleSelect\n\t}\n\n\t@HostBinding(\"attr.data-parent-row\") get isParentRow() {\n\t\treturn this.expandable ? true : null;\n\t}\n\n\t@HostBinding(\"attr.tabindex\") get isAccessible() {\n\t\treturn this.enableSingleSelect && !this.showSelectionColumn ? 0 : null;\n\t}\n\n\tprotected _checkboxLabel = this.i18n.getOverridable(\"TABLE.CHECKBOX_ROW\");\n\tprotected _expandButtonAriaLabel = this.i18n.getOverridable(\"TABLE.EXPAND_BUTTON\");\n\n\tconstructor(protected i18n: I18n) { }\n\n\t@HostListener(\"click\")\n\tonHostClick() {\n\t\tif (this.enableSingleSelect && !this.showSelectionColumn) {\n\t\t\tthis.onSelectionChange();\n\t\t}\n\t}\n\n\tonRowClick() {\n\t\tthis.rowClick.emit();\n\t}\n\n\tonSelectionChange() {\n\t\tif (this.selected) {\n\t\t\tthis.deselectRow.emit();\n\t\t} else {\n\t\t\tthis.selectRow.emit();\n\t\t}\n\t}\n\n\tgetCheckboxLabel(): Observable<string> {\n\t\treturn this._checkboxLabel.subject;\n\t}\n\n\tgetExpandButtonAriaLabel(): Observable<string> {\n\t\treturn this._expandButtonAriaLabel.subject;\n\t}\n}\n","import {\n\tComponent,\n\tHostBinding,\n\tInput\n} from \"@angular/core\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableExpandedRow]\",\n\ttemplate: `\n\t\t<td [attr.colspan]=\"row.length + 2\">\n\t\t\t<ng-container *ngIf=\"!firstExpandedTemplateInRow(row)\">\n\t\t\t\t{{firstExpandedDataInRow(row)}}\n\t\t\t</ng-container>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"firstExpandedTemplateInRow(row)\"\n\t\t\t\t[ngTemplateOutletContext]=\"{data: firstExpandedDataInRow(row)}\">\n\t\t\t</ng-template>\n\t\t</td>\n\t`\n})\nexport class TableExpandedRow {\n\t@Input() row: any[];\n\n\t@Input() skeleton = false;\n\n\t@HostBinding(\"class.bx--expandable-row\") expandableRowClass = true;\n\n\t@HostBinding(\"attr.data-child-row\") @Input() expanded = false;\n\n\tfirstExpandedTemplateInRow(row) {\n\t\tconst found = row.find(d => d.expandedTemplate);\n\t\tif (found) {\n\t\t\treturn found.expandedTemplate;\n\t\t}\n\t\treturn found;\n\t}\n\n\tfirstExpandedDataInRow(row) {\n\t\tconst found = row.find(d => d.expandedData);\n\t\tif (found) {\n\t\t\treturn found.expandedData;\n\t\t}\n\t\treturn found;\n\t}\n}\n","import {\n\tComponent,\n\tInput\n} from \"@angular/core\";\nimport { TableItem } from \"../table-item.class\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableData]\",\n\ttemplate: `\n\t\t<ng-container *ngIf=\"!skeleton && !item.template\">{{item.data}}</ng-container>\n\t\t<ng-template\n\t\t\t*ngIf=\"!skeleton\"\n\t\t\t[ngTemplateOutlet]=\"item.template\"\n\t\t\t[ngTemplateOutletContext]=\"{data: item.data}\">\n\t\t</ng-template>\n\t`\n})\nexport class TableData {\n\t@Input() item: TableItem;\n\n\t@Input() skeleton = false;\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { TableItem } from \"../table-item.class\";\nimport { TableRow } from \"../table-row.class\";\nimport { Observable } from \"rxjs\";\nimport { TableRowSize } from \"../table.types\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableCheckbox]\",\n\ttemplate: `\n\t\t<ibm-checkbox\n\t\t\t*ngIf=\"!skeleton\"\n\t\t\tinline=\"true\"\n\t\t\t[name]=\"name\"\n\t\t\t[aria-label]=\"getLabel() | i18nReplace:getSelectionLabelValue(row) | async\"\n\t\t\t[size]=\"(size !== 'sm' ? 'md' : 'sm')\"\n\t\t\t[checked]=\"selected\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t(change)=\"change.emit()\">\n\t\t</ibm-checkbox>\n\t`\n})\nexport class TableCheckbox {\n\t@Input() row: TableItem[];\n\n\t@Input() selected = false;\n\n\t@Input() name = \"\";\n\n\tget disabled(): boolean {\n\t\treturn this.row ? !!(this.row as TableRow).disabled : false;\n\t}\n\n\t/**\n\t * Size of the table rows.\n\t */\n\t@Input() size: TableRowSize = \"md\";\n\n\t@Input()\n\tset label(value: string | Observable<string>) {\n\t\tthis._label.override(value);\n\t}\n\n\tget label() {\n\t\treturn this._label.value;\n\t}\n\n\t/**\n\t * Used to populate the row selection checkbox label with a useful value if set.\n\t *\n\t * Example:\n\t * ```\n\t * <ibm-table [selectionLabelColumn]=\"0\"></ibm-table>\n\t * <!-- results in aria-label=\"Select first column value\"\n\t * (where \"first column value\" is the value of the first column in the row -->\n\t * ```\n\t */\n\t@Input() selectionLabelColumn: number;\n\n\t@Input() skeleton = false;\n\n\t/**\n\t * Emits if a single row is selected.\n\t */\n\t@Output() change = new EventEmitter();\n\n\tprotected _label = this.i18n.getOverridable(\"TABLE.CHECKBOX_ROW\");\n\n\tconstructor(protected i18n: I18n) { }\n\n\tgetSelectionLabelValue(row: TableItem[]) {\n\t\tif (!this.selectionLabelColumn) {\n\t\t\treturn { value: this.i18n.get().TABLE.ROW };\n\t\t}\n\t\treturn { value: row[this.selectionLabelColumn].data };\n\t}\n\n\tgetLabel(): Observable<string> {\n\t\treturn this._label.subject;\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { TableItem } from \"../table-item.class\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableRadio]\",\n\ttemplate: `\n\t\t<ibm-radio\n\t\t\t*ngIf=\"!skeleton\"\n\t\t\t[attr.aria-label]=\"getLabel() | i18nReplace:getSelectionLabelValue(row) | async\"\n\t\t\t[ariaLabel]=\"getLabel() | i18nReplace:getSelectionLabelValue(row) | async\"\n\t\t\t[checked]=\"selected\"\n\t\t\t(change)=\"change.emit()\">\n\t\t</ibm-radio>\n\t`\n})\nexport class TableRadio {\n\t@Input() row: any[];\n\n\t@Input() selected = false;\n\n\t@Input()\n\tset label(value: string | Observable<string>) {\n\t\tthis._label.override(value);\n\t}\n\n\tget label() {\n\t\treturn this._label.value;\n\t}\n\n\t/**\n\t * Used to populate the row selection checkbox label with a useful value if set.\n\t *\n\t * Example:\n\t * ```\n\t * <ibm-table [selectionLabelColumn]=\"0\"></ibm-table>\n\t * <!-- results in aria-label=\"Select first column value\"\n\t * (where \"first column value\" is the value of the first column in the row -->\n\t * ```\n\t */\n\t@Input() selectionLabelColumn: number;\n\n\t@Input() skeleton = false;\n\n\t/**\n\t * Emits if a single row is selected.\n\t */\n\t@Output() change = new EventEmitter();\n\n\tprotected _label = this.i18n.getOverridable(\"TABLE.CHECKBOX_ROW\");\n\n\tconstructor(protected i18n: I18n) { }\n\n\tgetSelectionLabelValue(row: TableItem[]) {\n\t\tif (!this.selectionLabelColumn) {\n\t\t\treturn { value: this.i18n.get().TABLE.ROW };\n\t\t}\n\t\treturn { value: row[this.selectionLabelColumn].data };\n\t}\n\n\tgetLabel(): Observable<string> {\n\t\treturn this._label.subject;\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tHostBinding\n} from \"@angular/core\";\nimport { I18n, Overridable } from \"carbon-components-angular/i18n\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableExpandButton]\",\n\ttemplate: `\n\t\t<button\n\t\t\t*ngIf=\"expandable\"\n\t\t\tclass=\"bx--table-expand__button\"\n\t\t\t[attr.aria-label]=\"getAriaLabel() | async\"\n\t\t\t(click)=\"expandRow.emit()\">\n\t\t\t<svg ibmIcon=\"chevron--right\" size=\"16\" class=\"bx--table-expand__svg\"></svg>\n\t\t</button>\n\t`\n})\nexport class TableExpandButton {\n\t/**\n\t * Set to true to indicate the row has expanded\n\t */\n\t@Input() expanded = false;\n\t/**\n\t * Set to true to indicate the row can be expanded.\n\t * Defaults to false to allow for correct column alignment\n\t */\n\t@Input() expandable = false;\n\n\t@Input()\n\tset ariaLabel(value: string | Observable<string>) {\n\t\tthis._ariaLabel.override(value);\n\t}\n\n\tget ariaLabel() {\n\t\treturn this._ariaLabel.value;\n\t}\n\n\t@Input() skeleton = false;\n\n\t@HostBinding(\"class.bx--table-expand\") expandClass = true;\n\n\t@HostBinding(\"attr.data-previous-value\") get previousValue() {\n\t\treturn this.expanded ? \"collapsed\" : null;\n\t}\n\n\t@Output() expandRow = new EventEmitter<void>();\n\n\tprotected _ariaLabel = this.i18n.getOverridable(\"TABLE.EXPAND_BUTTON\");\n\n\tconstructor(protected i18n: I18n) { }\n\n\tgetAriaLabel(): Observable<string> {\n\t\treturn this._ariaLabel.subject;\n\t}\n}\n","import { TableItem } from \"./table-item.class\";\n\n/**\n * Represents a table row, which is essentially an array of TableItem.\n */\nexport class TableRow extends Array<TableItem> {\n\t/**\n\t * Whether row is disabled or not.\n\t */\n\tdisabled = false;\n}\n","// modules\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\n// internal module imports\nimport { NFormsModule } from \"carbon-components-angular/forms\";\nimport { DialogModule } from \"carbon-components-angular/dialog\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { ButtonModule } from \"carbon-components-angular/button\";\nimport { SearchModule } from \"carbon-components-angular/search\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n// table utilities/toolbar imports\nimport { TableToolbar } from \"./toolbar/table-toolbar.component\";\nimport { TableToolbarActions } from \"./toolbar/table-toolbar-actions.component\";\nimport { TableToolbarSearch } from \"./toolbar/table-toolbar-search.component\";\nimport { TableToolbarContent } from \"./toolbar/table-toolbar-content.component\";\n\nimport { TableContainer } from \"./table-container.component\";\nimport { TableHeader } from \"./header/table-header.component\";\nimport { TableHeaderTitle } from \"./header/table-header-title.directive\";\nimport { TableHeaderDescription } from \"./header/table-header-description.directive\";\n\nimport { ExpandedRowHover } from \"./expanded-row-hover.directive\";\n\n// core table imports\nimport { Table } from \"./table.component\";\nimport { TableDirective } from \"./table.directive\";\nimport { TableHead } from \"./head/table-head.component\";\nimport { TableHeadCell } from \"./head/table-head-cell.component\";\nimport { TableHeadCheckbox } from \"./head/table-head-checkbox.component\";\nimport { TableHeadExpand } from \"./head/table-head-expand.component\";\nimport { TableBody } from \"./body/table-body.component\";\nimport { TableRowComponent } from \"./body/table-row.component\";\nimport { TableExpandedRow } from \"./body/table-expanded-row.component\";\nimport { TableData } from \"./cell/table-data.component\";\nimport { TableCheckbox } from \"./cell/table-checkbox.component\";\nimport { TableRadio } from \"./cell/table-radio.component\";\nimport { TableExpandButton } from \"./cell/table-expand-button.component\";\nimport { TableHeadCellLabel } from \"./head/table-head-cell-label.directive\";\n\n// model exports\nexport { TableModel } from \"./table-model.class\";\nexport { TableRow } from \"./table-row.class\";\nexport { TableItem } from \"./table-item.class\";\nexport { TableHeaderItem } from \"./table-header-item.class\";\nexport * from \"./table-adapter.class\";\nexport * from \"./data-grid-interaction-model.class\";\n\n@NgModule({\n\tdeclarations: [\n\t\t// toolbar and utility components\n\t\tTableToolbar,\n\t\tTableContainer,\n\t\tTableHeader,\n\t\tTableHeaderTitle,\n\t\tTableHeaderDescription,\n\t\tTableHeadCellLabel,\n\t\tTableToolbarActions,\n\t\tTableToolbarSearch,\n\t\tTableToolbarContent,\n\t\tExpandedRowHover,\n\t\t// core table components\n\t\tTable,\n\t\tTableDirective,\n\t\tTableHead,\n\t\tTableHeadCell,\n\t\tTableHeadCheckbox,\n\t\tTableHeadExpand,\n\t\tTableBody,\n\t\tTableRowComponent,\n\t\tTableExpandedRow,\n\t\tTableData,\n\t\tTableCheckbox,\n\t\tTableRadio,\n\t\tTableExpandButton\n\t],\n\texports: [\n\t\t// toolbar and utility components\n\t\tTableToolbar,\n\t\tTableContainer,\n\t\tTableHeader,\n\t\tTableHeaderTitle,\n\t\tTableHeaderDescription,\n\t\tTableHeadCellLabel,\n\t\tTableToolbarActions,\n\t\tTableToolbarSearch,\n\t\tTableToolbarContent,\n\t\tExpandedRowHover,\n\t\t// core table components\n\t\tTable,\n\t\tTableDirective,\n\t\tTableHead,\n\t\tTableHeadCell,\n\t\tTableHeadCheckbox,\n\t\tTableHeadExpand,\n\t\tTableBody,\n\t\tTableRowComponent,\n\t\tTableExpandedRow,\n\t\tTableData,\n\t\tTableCheckbox,\n\t\tTableRadio,\n\t\tTableExpandButton\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tNFormsModule,\n\t\tFormsModule,\n\t\tDialogModule,\n\t\tButtonModule,\n\t\tSearchModule,\n\t\tI18nModule,\n\t\tIconModule\n\t]\n})\nexport class TableModule {}\n","// table utilities/toolbar imports\nexport { TableToolbar } from \"./toolbar/table-toolbar.component\";\nexport { TableToolbarActions } from \"./toolbar/table-toolbar-actions.component\";\nexport { TableToolbarSearch } from \"./toolbar/table-toolbar-search.component\";\nexport { TableToolbarContent } from \"./toolbar/table-toolbar-content.component\";\n\nexport { TableContainer } from \"./table-container.component\";\nexport { TableHeader } from \"./header/table-header.component\";\nexport { TableHeaderTitle } from \"./header/table-header-title.directive\";\nexport { TableHeadCellLabel } from \"./head/table-head-cell-label.directive\";\nexport { TableHeaderDescription } from \"./header/table-header-description.directive\";\n\nexport { ExpandedRowHover } from \"./expanded-row-hover.directive\";\n\n// core table imports\nexport { Table } from \"./table.component\";\nexport { TableRowSize, TableTranslations } from \"./table.types\";\nexport { TableDirective } from \"./table.directive\";\nexport { TableHead } from \"./head/table-head.component\";\nexport { TableHeadCell } from \"./head/table-head-cell.component\";\nexport { TableHeadCheckbox } from \"./head/table-head-checkbox.component\";\nexport { TableHeadExpand } from \"./head/table-head-expand.component\";\nexport { TableBody } from \"./body/table-body.component\";\nexport { TableRowComponent } from \"./body/table-row.component\";\nexport { TableExpandedRow } from \"./body/table-expanded-row.component\";\nexport { TableData } from \"./cell/table-data.component\";\nexport { TableCheckbox } from \"./cell/table-checkbox.component\";\nexport { TableRadio } from \"./cell/table-radio.component\";\nexport { TableExpandButton } from \"./cell/table-expand-button.component\";\n\n// model exports\nexport { TableModel } from \"./table-model.class\";\nexport { TableItem } from \"./table-item.class\";\nexport { TableHeaderItem } from \"./table-header-item.class\";\nexport * from \"./table-adapter.class\";\nexport * from \"./data-grid-interaction-model.class\";\n\nexport * from \"./table.module\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}