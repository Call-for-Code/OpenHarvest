{"version":3,"file":"carbon-components-angular-progress-indicator.js","sources":["carbon-components-angular/progress-indicator/progress-indicator.component.ts","carbon-components-angular/progress-indicator/progress-indicator.module.ts","carbon-components-angular/progress-indicator/carbon-components-angular-progress-indicator.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter, OnChanges, SimpleChanges\n} from \"@angular/core\";\nimport { ExperimentalService } from \"carbon-components-angular/experimental\";\nimport { Step } from \"./progress-indicator-step.interface\";\n\n/**\n * [See demo](../../?path=/story/progress-indicator--basic)\n *\n * <example-url>../../iframe.html?id=progress-indicator--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-progress-indicator\",\n\ttemplate: `\n\t<ul\n\t\tdata-progress\n\t\tdata-progress-current\n\t\tclass=\"bx--progress\"\n\t\t[ngClass]=\"{\n\t\t\t'bx--skeleton': skeleton,\n\t\t\t'bx--progress--vertical': (orientation === 'vertical'),\n\t\t\t'bx--progress--space-equal': spacing === 'equal' && orientation !== 'vertical'\n\t\t}\">\n\t\t<li\n\t\t\tclass=\"bx--progress-step bx--progress-step--{{step.state[0]}}\"\n\t\t\t*ngFor=\"let step of steps; let i = index\"\n\t\t\t[ngClass]=\"{'bx--progress-step--disabled' : step.disabled}\">\n\t\t\t<div class=\"bx--progress-step-button bx--progress-step-button--unclickable\" role=\"button\" tabindex=\"-1\">\n\t\t\t\t<svg ibmIcon=\"checkmark--outline\" size=\"16\" *ngIf=\"step.state.includes('complete')\"></svg>\n\t\t\t\t<svg *ngIf=\"step.state.includes('current')\">\n\t\t\t\t\t<path d=\"M 7, 7 m -7, 0 a 7,7 0 1,0 14,0 a 7,7 0 1,0 -14,0\" ></path>\n\t\t\t\t</svg>\n\t\t\t\t<svg *ngIf=\"step.state.includes('incomplete')\">\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M8 1C4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm0 13c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z\">\n\t\t\t\t\t</path>\n\t\t\t\t</svg>\n\t\t\t\t<svg ibmIcon=\"warning\" size=\"16\" *ngIf=\"step.state.includes('error')\" class=\"bx--progress__warning\"></svg>\n\t\t\t\t<p\n\t\t\t\t\tclass=\"bx--progress-label\"\n\t\t\t\t\t*ngIf=\"step.tooltip\"\n\t\t\t\t\t[ibmTooltip]=\"step.tooltip.content\"\n\t\t\t\t\t[trigger]=\"step.tooltip.trigger\"\n\t\t\t\t\t[placement]=\"step.tooltip.placement\"\n\t\t\t\t\t[title]=\"step.tooltip.title\"\n\t\t\t\t\t[gap]=\"step.tooltip.gap\"\n\t\t\t\t\t[appendInline]=\"step.tooltip.appendInline\"\n\t\t\t\t\t[data]=\"step.tooltip.data\"\n\t\t\t\t\t(click)=\"stepSelected.emit({ step: step, index: i })\">\n\t\t\t\t\t{{step.text}}\n\t\t\t\t</p>\n\t\t\t\t<p class=\"bx--progress-label\" *ngIf=\"!step.tooltip\" (click)=\"stepSelected.emit({ step: step, index: i })\">{{step.text}}</p>\n\t\t\t\t<p *ngIf=\"step.optionalText\" class=\"bx--progress-optional\">{{step.optionalText}}</p>\n\t\t\t\t<span class=\"bx--progress-line\"></span>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\n\t`\n})\nexport class ProgressIndicator implements OnChanges {\n\tstatic skeletonSteps(stepCount: number) {\n\t\tconst steps = [];\n\t\tfor (let i = 0; i < stepCount; i++) {\n\t\t\tsteps.push({\"state\": [\"incomplete\"]});\n\t\t}\n\n\t\treturn steps;\n\t}\n\n\t@Output() stepSelected = new EventEmitter<{ step: Step, index: number }>();\n\n\t@Input() steps: Array<Step>;\n\t@Input() orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\n\t@Input() skeleton = false;\n\t@Input() spacing: \"default\" | \"equal\" = \"default\";\n\n\t@Input() get current() {\n\t\treturn this.steps.findIndex(step => step.state.includes(\"current\"));\n\t}\n\tset current(current: number) {\n\t\tthis._current = current;\n\t}\n\tprivate _current: number;\n\n\tconstructor(protected experimental: ExperimentalService) {}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.steps || changes.current) {\n\t\t\tthis.setProgressIndicatorStates();\n\t\t}\n\t}\n\n\tprivate setProgressIndicatorStates() {\n\t\tif (this.steps === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._current === undefined || this._current < 0) {\n\t\t\tfor (let i = 0; i < this.steps.length; i++) {\n\t\t\t\tthis.steps[i].state[0] = \"incomplete\";\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._current > this.steps.length - 1) {\n\t\t\tfor (let i = 0; i < this.steps.length; i++) {\n\t\t\t\tthis.steps[i].state[0] = \"complete\";\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.steps[this._current].state[0] = \"current\";\n\t\tfor (let i = 0; i < this._current; i++) {\n\t\t\tthis.steps[i].state[0] = \"complete\";\n\t\t}\n\t\tfor (let i = this._current + 1; i < this.steps.length; i++) {\n\t\t\tthis.steps[i].state[0] = \"incomplete\";\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ProgressIndicator } from \"./progress-indicator.component\";\nimport { DialogModule } from \"carbon-components-angular/dialog\";\nimport { ExperimentalModule } from \"carbon-components-angular/experimental\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tProgressIndicator\n\t],\n\texports: [\n\t\tProgressIndicator\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tDialogModule,\n\t\tExperimentalModule,\n\t\tIconModule\n\t]\n})\nexport class ProgressIndicatorModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}