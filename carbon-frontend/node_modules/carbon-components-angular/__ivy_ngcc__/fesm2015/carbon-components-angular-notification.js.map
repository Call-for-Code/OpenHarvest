{"version":3,"file":"carbon-components-angular-notification.js","sources":["carbon-components-angular/notification/notification-display.service.ts","carbon-components-angular/notification/notification-subtitle.directive.ts","carbon-components-angular/notification/notification-title.directive.ts","carbon-components-angular/notification/notification.component.ts","carbon-components-angular/notification/toast.component.ts","carbon-components-angular/notification/toast-title.directive.ts","carbon-components-angular/notification/toast-subtitle.directive.ts","carbon-components-angular/notification/toast-caption.directive.ts","carbon-components-angular/notification/notification.service.ts","carbon-components-angular/notification/notification.module.ts","carbon-components-angular/notification/carbon-components-angular-notification.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tInjectable,\n\tApplicationRef\n} from \"@angular/core\";\n\n@Injectable()\nexport class NotificationDisplayService {\n\tconstructor(protected applicationRef: ApplicationRef) {}\n\n\t/**\n\t * Programatically closes notification based on `notificationRef`.\t *\n\t */\n\tclose(notificationRef: any) {\n\t\tif (notificationRef.hostView) {\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.applicationRef.detachView(notificationRef.hostView);\n\t\t\t\tnotificationRef.destroy();\n\t\t\t}, 200);\n\t\t}\n\t}\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmNotificationSubtitle]\"\n})\nexport class NotificationSubtitle {\n\t@HostBinding(\"class.bx--inline-notification__subtitle\") baseClass = true;\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmNotificationTitle]\"\n})\nexport class NotificationTitle {\n\t@HostBinding(\"class.bx--inline-notification__title\") baseClass = true;\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tComponentRef,\n\tViewChild,\n\tHostBinding\n} from \"@angular/core\";\n\nimport { NotificationContent } from \"./notification-content.interface\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { NotificationDisplayService } from \"./notification-display.service\";\nimport { of, isObservable, Subject } from \"rxjs\";\n\n/**\n * Notification messages are displayed toward the top of the UI and do not interrupt userâs work.\n *\n * [See demo](../../?path=/story/notification--basic)\n *\n * <example-url>../../iframe.html?id=notification--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-notification\",\n\ttemplate: `\n\t\t<div class=\"bx--inline-notification__details\">\n\t\t\t<svg\n\t\t\t\tibmIcon=\"error--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\t*ngIf=\"notificationObj.type === 'error'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\tibmIcon=\"warning--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\t*ngIf=\"notificationObj.type === 'warning'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\tibmIcon=\"checkmark--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\t*ngIf=\"notificationObj.type === 'success'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\tibmIcon=\"information--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\t*ngIf=\"notificationObj.type === 'info'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</svg>\n\t\t\t<div class=\"bx--inline-notification__text-wrapper\">\n\t\t\t\t<p *ngIf=\"!notificationObj.template\" ibmNotificationTitle [innerHTML]=\"notificationObj.title\"></p>\n\t\t\t\t<div *ngIf=\"!notificationObj.template\" ibmNotificationSubtitle>\n\t\t\t\t\t<span [innerHTML]=\"notificationObj.message\"></span>\n\t\t\t\t\t<ng-container *ngFor=\"let link of notificationObj.links\">\n\t\t\t\t\t\t<a ibmLink [href]=\"link.href\"> {{link.text}}</a>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"notificationObj.template; context: { $implicit: notificationObj}\"></ng-container>\n\t\t\t</div>\n\t\t</div>\n\t\t<div *ngFor=\"let action of notificationObj.actions\">\n\t\t\t<button\n\t\t\t\t(click)=\"onClick(action, $event)\"\n\t\t\t\tibmButton=\"ghost\"\n\t\t\t\tsize=\"sm\"\n\t\t\t\tclass=\"bx--inline-notification__action-button\"\n\t\t\t\ttype=\"button\">\n\t\t\t\t{{action.text}}\n\t\t\t</button>\n\t\t</div>\n\t\t<button\n\t\t\t*ngIf=\"!isCloseHidden\"\n\t\t\t(click)=\"onClose()\"\n\t\t\tclass=\"bx--inline-notification__close-button\"\n\t\t\t[attr.aria-label]=\"notificationObj.closeLabel | async\"\n\t\t\ttype=\"button\">\n\t\t\t<svg ibmIcon=\"close\" size=\"16\" class=\"bx--inline-notification__close-icon\"></svg>\n\t\t</button>\n\t`\n})\nexport class Notification {\n\tprivate static notificationCount = 0;\n\t/**\n\t * Can have `type`, `title`, and `message` members.\n\t *\n\t * `type` can be one of `\"info\"`, `\"warning\"`, `\"error\"`, `\"success\"`\n\t *\n\t * `message` is the message to display\n\t */\n\t@Input() get notificationObj(): NotificationContent {\n\t\treturn this._notificationObj;\n\t}\n\tset notificationObj(obj: NotificationContent) {\n\t\tif (obj.closeLabel) {\n\t\t\tobj.closeLabel = of(obj.closeLabel);\n\t\t}\n\t\tthis._notificationObj = Object.assign({}, this.defaultNotificationObj, obj);\n\t}\n\n\t/**\n\t * Emits on close.\n\t */\n\t@Output() close: EventEmitter<any> = new EventEmitter();\n\n\tcomponentRef: ComponentRef<Notification>;\n\n\t// @ts-ignore\n\t@ViewChild(\"notification\", { static: false }) notification;\n\n\t@HostBinding(\"attr.id\") notificationID = `notification-${Notification.notificationCount++}`;\n\t@HostBinding(\"class.bx--inline-notification\") notificationClass = true;\n\t@HostBinding(\"attr.role\") role = \"alert\";\n\n\t@HostBinding(\"class.bx--inline-notification--error\") get isError() { return this.notificationObj.type === \"error\"; }\n\t@HostBinding(\"class.bx--inline-notification--info\") get isInfo() { return this.notificationObj.type === \"info\"; }\n\t@HostBinding(\"class.bx--inline-notification--success\") get isSuccess() { return this.notificationObj.type === \"success\"; }\n\t@HostBinding(\"class.bx--inline-notification--warning\") get isWarning() { return this.notificationObj.type === \"warning\"; }\n\t@HostBinding(\"class.bx--inline-notification--low-contrast\") get isLowContrast() { return this.notificationObj.lowContrast; }\n\t@HostBinding(\"class.bx--inline-notification--hide-close-button\") get isCloseHidden() { return !this._notificationObj.showClose; }\n\n\tprotected defaultNotificationObj = {\n\t\ttitle: \"\",\n\t\tmessage: \"\",\n\t\ttype: \"info\",\n\t\tshowClose: true,\n\t\tcloseLabel: this.i18n.get(\"NOTIFICATION.CLOSE_BUTTON\")\n\t};\n\tprotected _notificationObj: NotificationContent = Object.assign({}, this.defaultNotificationObj);\n\n\tconstructor(protected notificationDisplayService: NotificationDisplayService, protected i18n: I18n) {}\n\n\t/**\n\t * Emits close event.\n\t */\n\tonClose() {\n\t\tthis.close.emit();\n\t}\n\n\tonClick(action, event) {\n\t\tif (!action.click) {\n\t\t\treturn;\n\t\t}\n\t\tif (isObservable(action.click)) {\n\t\t\t(action.click as Subject<{event: Event, action: any}>).next({event, action});\n\t\t} else {\n\t\t\taction.click({event, action});\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.notificationDisplayService.close(this);\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOnInit,\n\tHostBinding\n} from \"@angular/core\";\n\nimport { ToastContent } from \"./notification-content.interface\";\nimport { Notification } from \"./notification.component\";\nimport { ExperimentalService } from \"carbon-components-angular/experimental\";\nimport { NotificationDisplayService } from \"./notification-display.service\";\nimport { I18n } from \"carbon-components-angular/i18n\";\n\n/**\n * Toast messages are displayed toward the top of the UI and do not interrupt userâs work.\n *\n * [See demo](../../?path=/story/notification--toast)\n *\n * <example-url>../../iframe.html?id=notification--toast</example-url>\n */\n@Component({\n\tselector: \"ibm-toast\",\n\ttemplate: `\n\t\t<svg\n\t\t\tibmIcon=\"error--filled\"\n\t\t\tsize=\"16\"\n\t\t\t*ngIf=\"notificationObj.type === 'error'\"\n\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t</svg>\n\t\t<svg\n\t\t\tibmIcon=\"warning--filled\"\n\t\t\tsize=\"16\"\n\t\t\t*ngIf=\"notificationObj.type === 'warning'\"\n\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t</svg>\n\t\t<svg\n\t\t\tibmIcon=\"checkmark--filled\"\n\t\t\tsize=\"16\"\n\t\t\t*ngIf=\"notificationObj.type === 'success'\"\n\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t</svg>\n\t\t<svg\n\t\t\tibmIcon=\"information--filled\"\n\t\t\tsize=\"16\"\n\t\t\t*ngIf=\"notificationObj.type === 'info'\"\n\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t</svg>\n\t\t<div class=\"bx--toast-notification__details\">\n\t\t\t<h3 *ngIf=\"!notificationObj.template\" ibmToastTitle [innerHTML]=\"notificationObj.title\"></h3>\n\t\t\t<div *ngIf=\"!notificationObj.template\" ibmToastSubtitle>\n\t\t\t\t<span [innerHTML]=\"notificationObj.subtitle\"></span>\n\t\t\t\t<ng-container *ngFor=\"let link of notificationObj.links\">\n\t\t\t\t\t<a ibmLink [href]=\"link.href\"> {{link.text}}</a>\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\t\t\t<p *ngIf=\"!notificationObj.template\" ibmToastCaption [innerHTML]=\"notificationObj.caption\"></p>\n\t\t\t<ng-container *ngTemplateOutlet=\"notificationObj.template; context: { $implicit: notificationObj}\"></ng-container>\n\t\t</div>\n\t\t<button\n\t\t\t*ngIf=\"!isCloseHidden\"\n\t\t\tclass=\"bx--toast-notification__close-button\"\n\t\t\ttype=\"button\"\n\t\t\t[attr.aria-label]=\"notificationObj.closeLabel\"\n\t\t\t(click)=\"onClose()\">\n\t\t\t<svg ibmIcon=\"close\" size=\"16\" class=\"bx--toast-notification__close-icon\"></svg>\n\t\t</button>\n\t`\n})\nexport class Toast extends Notification implements OnInit {\n\tprivate static toastCount = 0;\n\t/**\n\t * Can have `type`, `title`, `subtitle`, and `caption` members.\n\t *\n\t * `type` can be one of `\"error\"`, `\"info\"`, `\"warning\"`, or `\"success\"`\n\t */\n\t@Input() notificationObj: ToastContent;\n\n\t@HostBinding(\"attr.id\") toastID = `toast-${Toast.toastCount++}`;\n\t@HostBinding(\"class.bx--toast-notification\") toastClass = true;\n\t@HostBinding(\"attr.role\") role = \"alert\";\n\n\t@HostBinding(\"class.bx--toast-notification--error\") get isError() { return this.notificationObj[\"type\"] === \"error\"; }\n\t@HostBinding(\"class.bx--toast-notification--info\") get isInfo() { return this.notificationObj[\"type\"] === \"info\"; }\n\t@HostBinding(\"class.bx--toast-notification--success\") get isSuccess() { return this.notificationObj[\"type\"] === \"success\"; }\n\t@HostBinding(\"class.bx--toast-notification--warning\") get isWarning() { return this.notificationObj[\"type\"] === \"warning\"; }\n\t@HostBinding(\"class.bx--toast-notification--low-contrast\") get isLowContrast() { return this.notificationObj.lowContrast; }\n\n\tconstructor(\n\t\tprotected notificationDisplayService: NotificationDisplayService,\n\t\tprotected i18n: I18n,\n\t\tprotected experimental: ExperimentalService) {\n\t\tsuper(notificationDisplayService, i18n);\n\t\t// disable inline notification styles\n\t\tthis.notificationClass = false;\n\t}\n\n\tngOnInit() {\n\t\tif (!this.notificationObj.closeLabel) {\n\t\t\tthis.notificationObj.closeLabel = this.i18n.get().NOTIFICATION.CLOSE_BUTTON;\n\t\t}\n\t}\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmToastTitle]\"\n})\nexport class ToastTitle {\n\t@HostBinding(\"class.bx--toast-notification__title\") baseClass = true;\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmToastSubtitle]\"\n})\nexport class ToastSubtitle {\n\t@HostBinding(\"class.bx--toast-notification__subtitle\") baseClass = true;\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmToastCaption]\"\n})\nexport class ToastCaption {\n\t@HostBinding(\"class.bx--toast-notification__caption\") baseClass = true;\n}\n","import {\n\tApplicationRef,\n\tComponentFactory,\n\tComponentFactoryResolver,\n\tComponentRef,\n\tEventEmitter,\n\tInjectable,\n\tInjector,\n\tOnDestroy,\n\tNgZone\n} from \"@angular/core\";\n\nimport { NotificationContent, ToastContent } from \"./notification-content.interface\";\nimport { Notification } from \"./notification.component\";\nimport { Toast } from \"./toast.component\";\n\n/**\n * Provides a way to use the notification component.\n *\n * Notifications are displayed toward the top of the UI and do not interrupt the userâs work.\n */\n@Injectable()\nexport class NotificationService implements OnDestroy {\n\t/**\n\t * An array containing `ComponentRef`s to all the notifications this service instance\n\t * is responsible for.\n\t *\n\t */\n\tpublic notificationRefs = new Array<ComponentRef<any>>();\n\tpublic onClose: EventEmitter<any> = new EventEmitter();\n\n\t/**\n\t * Constructs NotificationService.\n\t *\n\t * @param injector\n\t * @param componentFactoryResolver\n\t * @param applicationRef\n\t */\n\tconstructor(\n\t\tprotected injector: Injector,\n\t\tprotected componentFactoryResolver: ComponentFactoryResolver,\n\t\tprotected applicationRef: ApplicationRef,\n\t\tprotected ngZone: NgZone) {\n\t}\n\n\t/**\n\t * Shows the notification based on the `notificationObj`.\n\t *\n\t * @param notificationObj Can have `type`, `message`, `target`, `duration` and `smart` members.\n\t *\n\t * **Members:**\n\t *\n\t * * `type` can be one of `\"info\"`, `\"warning\"`, `\"danger\"`, `\"success\"`\n\t * * `message` is message for notification to display\n\t * * `target` is css selector defining an element to append notification to. If not provided,\n\t * `showNotification()` creates a place for the notification in `body`\n\t * * `duration` is number of ms to close the notification after. If used in combination with `smart`,\n\t * it's added to the calculated timeout\n\t * * `smart`, set to `true` if you want to use smart notification.\n\t *\n\t * **Example:**\n\t * ```typescript\n\t * // Info notification, saying \"Sample message.\" added to the element with id notification-container\n\t * // uses smart timeout with added duration of 1 second.\n\t * {\n\t *\ttype: \"info\",\n\t *\tmessage: \"Sample message.\",\n\t *\ttarget: \"#notification-container\",\n\t *\tduration: 1000,\n\t *\tsmart: true\n\t * }\n\t * ```\n\t *\n\t * @param [notificationComp=Notification] If provided, used to resolve component factory\n\t */\n\tshowNotification(notificationObj: NotificationContent | ToastContent, notificationComp = Notification) {\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(notificationComp);\n\n\t\tlet notificationRef = componentFactory.create(this.injector);\n\t\tnotificationRef.instance.notificationObj = notificationObj as any; // typescript isn't being very smart here, so we type to any\n\t\tthis.notificationRefs.push(notificationRef);\n\n\t\tthis.onClose = notificationRef.instance.close;\n\t\tthis.applicationRef.attachView(notificationRef.hostView);\n\n\t\tif (notificationObj.target) {\n\t\t\tdocument.querySelector(notificationObj.target).appendChild(notificationRef.location.nativeElement);\n\t\t} else {\n\t\t\tlet body = document.querySelector(\"body\");\n\n\t\t\t// get or create a container for alert list\n\t\t\tlet notificationClassName = \"notification-overlay\";\n\t\t\tlet notificationList = body.querySelector(`.${notificationClassName}`);\n\t\t\tif (!notificationList) {\n\t\t\t\tnotificationList = document.createElement(\"div\");\n\t\t\t\tnotificationList.className = notificationClassName;\n\t\t\t\tbody.appendChild(notificationList);\n\t\t\t}\n\n\t\t\t// add the notification to the top of the list\n\t\t\tif (notificationList.firstChild) {\n\t\t\t\tnotificationList.insertBefore(notificationRef.location.nativeElement, notificationList.firstChild);\n\t\t\t} else {\n\t\t\t\tnotificationList.appendChild(notificationRef.location.nativeElement);\n\t\t\t}\n\t\t}\n\n\t\tif (notificationObj.duration && notificationObj.duration > 0) {\n\t\t\tthis.ngZone.runOutsideAngular(() => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.ngZone.run(() => {\n\t\t\t\t\t\tthis.close(notificationRef);\n\t\t\t\t\t});\n\t\t\t\t}, notificationObj.duration);\n\t\t\t});\n\t\t}\n\n\t\tif (notificationObj.smart) {\n\t\t\tthis.ngZone.runOutsideAngular(() => {\n\t\t\t\t// let it disappear after calculated timeout\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.ngZone.run(() => {\n\t\t\t\t\t\tthis.close(notificationRef);\n\t\t\t\t\t});\n\t\t\t\t}, this.getSmartTimeout(notificationObj));\n\t\t\t});\n\t\t}\n\n\t\tthis.onClose.subscribe(() => {\n\t\t\tthis.close(notificationRef);\n\t\t});\n\n\t\tnotificationRef.instance.componentRef = notificationRef;\n\t\treturn notificationRef.instance;\n\t}\n\n\tshowToast(notificationObj: NotificationContent | ToastContent, notificationComp = Toast) {\n\t\treturn this.showNotification(notificationObj, notificationComp as any);\n\t}\n\n\t/**\n\t * Programatically closes notification based on `notificationRef`.\n\t *\n\t * @param notificationRef `ComponentRef` of a notification or `Notification` component you wish to close\n\t */\n\tclose(notificationRef: any) {\n\t\tif (notificationRef) {\n\t\t\tif (notificationRef instanceof Notification) {\n\t\t\t\tthis.close(notificationRef.componentRef);\n\t\t\t} else {\n\t\t\t\tthis.applicationRef.detachView(notificationRef.hostView);\n\t\t\t\tnotificationRef.destroy();\n\t\t\t\tconst index = this.notificationRefs.indexOf(notificationRef);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tthis.notificationRefs.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the amount of time user needs to read the message in the notification.\n\t *\n\t * @param notificationObj Same object used to instantiate notification.\n\t *\n\t * In addition to `type` and `message` members, use `duration` member to add\n\t * some extra time (in ms) to timeout if you need to.\n\t * @returns calculated timeout (in ms) for smart notification\n\t */\n\tgetSmartTimeout(notificationObj): number {\n\t\t// calculate timeout\n\t\tlet timeout = 600; // start with reaction time\n\n\t\t// custom duration\n\t\ttimeout += notificationObj.duration || 0;\n\n\t\t// message type\n\t\tswitch (notificationObj.type) {\n\t\t\tcase \"info\":\n\t\t\tcase \"success\":\n\t\t\tdefault: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"danger\": {\n\t\t\t\ttimeout += 3000;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"warning\": {\n\t\t\t\ttimeout += 1500;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// message length\n\t\t// average reader reads around 200 words per minute, or it takes them ~0.3s per word\n\t\t// let's use 1.5 factor for below average speed readers and have 0.45s per word\n\t\tlet wordCount = notificationObj.message.trim().split(/\\s+/).length;\n\t\ttimeout += wordCount * 450;\n\n\t\treturn timeout;\n\t}\n\n\t/**\n\t * OnDestroy hook.\n\t *\n\t * Destroys all living notifications it is responsible for.\n\t *\n\t */\n\tngOnDestroy() {\n\t\tif (this.notificationRefs.length > 0) {\n\t\t\tfor (let i = 0; i < this.notificationRefs.length; i++) {\n\t\t\t\tlet notificationRef = this.notificationRefs[i];\n\t\t\t\tthis.applicationRef.detachView(notificationRef.hostView);\n\t\t\t\tnotificationRef.destroy();\n\t\t\t}\n\t\t\tthis.notificationRefs.length = 0;\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { ButtonModule } from \"carbon-components-angular/button\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Toast } from \"./toast.component\";\nimport { ToastTitle } from \"./toast-title.directive\";\nimport { ToastSubtitle } from \"./toast-subtitle.directive\";\nimport { ToastCaption } from \"./toast-caption.directive\";\nimport { NotificationTitle } from \"./notification-title.directive\";\nimport { NotificationSubtitle } from \"./notification-subtitle.directive\";\nimport { Notification } from \"./notification.component\";\nimport { NotificationService } from \"./notification.service\";\nimport { NotificationDisplayService } from \"./notification-display.service\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { ExperimentalModule } from \"carbon-components-angular/experimental\";\nimport { LinkModule } from \"carbon-components-angular/link\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tNotification,\n\t\tToast,\n\t\tToastTitle,\n\t\tToastSubtitle,\n\t\tToastCaption,\n\t\tNotificationTitle,\n\t\tNotificationSubtitle\n\t],\n\texports: [\n\t\tNotification,\n\t\tToast,\n\t\tToastTitle,\n\t\tToastSubtitle,\n\t\tToastCaption,\n\t\tNotificationTitle,\n\t\tNotificationSubtitle\n\t],\n\tentryComponents: [Notification, Toast],\n\timports: [\n\t\tButtonModule,\n\t\tCommonModule,\n\t\tI18nModule,\n\t\tExperimentalModule,\n\t\tLinkModule,\n\t\tIconModule\n\t],\n\tproviders: [NotificationService, NotificationDisplayService]\n})\nexport class NotificationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}