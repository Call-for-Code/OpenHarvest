{"version":3,"file":"switcher-list-item.component.d.ts","sources":["switcher-list-item.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | switcher-list-item.component.d.ts\n *\n * Copyright 2014, 2021 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { EventEmitter } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\n/**\n * Represents an item in a switcher list.\n */\nexport declare class SwitcherListItem {\n    protected domSanitizer: DomSanitizer;\n    protected router: Router;\n    /**\n     * Enables the \"active\" state for an item. Commonly used to indicate the current page or selection.\n     */\n    active: boolean;\n    /**\n     * Array of commands to send to the router when the link is activated\n     * See: https://angular.io/api/router/Router#navigate\n     */\n    route: any[];\n    /**\n     * Router options. Used in conjunction with `route`\n     * See: https://angular.io/api/router/Router#navigate\n     */\n    routeExtras: any;\n    /**\n     * Optional link for the underlying anchor.\n     */\n    href: string;\n    /**\n     * Emits the navigation status promise when the link is activated\n     */\n    navigation: EventEmitter<Promise<boolean>>;\n    /**\n     * Optional target for the underlying anchor.\n     */\n    target: string;\n    itemClass: boolean;\n    itemRole: string;\n    protected _href: string;\n    protected _target: string;\n    constructor(domSanitizer: DomSanitizer, router: Router);\n    navigate(event: any): void;\n}\n"]}