/**
 *
 * carbon-angular v0.0.0 | header-item.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { DomSanitizer } from "@angular/platform-browser";
import { Router } from "@angular/router";
/**
 * Individual item in the header. May be used a direct child of `HeaderNavigation` or `HeaderMenu`
 */
import * as ɵngcc0 from '@angular/core';
export declare class HeaderItem {
    protected domSanitizer: DomSanitizer;
    protected router: Router;
    href: string;
    /**
     * Use the routerLink attribute on <a> tag for navigation instead of using event handlers
     */
    useRouter: boolean;
    /**
     * String or array of string class names to apply when active
     */
    activeLinkClass: string | string[];
    /**
     * Applies selected styles to the item if a user sets this to true.
     */
    isCurrentPage: boolean;
    /**
     * Array of commands to send to the router when the link is activated
     * See: https://angular.io/api/router/Router#navigate
     */
    route: any[];
    /**
     * Router options. Used in conjunction with `route`
     * See: https://angular.io/api/router/Router#navigate
     */
    routeExtras: any;
    /**
     * Emits the navigation status promise when the link is activated
     */
    navigation: EventEmitter<Promise<boolean>>;
    protected _href: string;
    constructor(domSanitizer: DomSanitizer, router: Router);
    navigate(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HeaderItem, [null, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HeaderItem, "ibm-header-item", never, { "useRouter": "useRouter"; "href": "href"; "activeLinkClass": "activeLinkClass"; "isCurrentPage": "isCurrentPage"; "route": "route"; "routeExtras": "routeExtras"; }, { "navigation": "navigation"; }, never, ["*"]>;
}

//# sourceMappingURL=header-item.component.d.ts.map